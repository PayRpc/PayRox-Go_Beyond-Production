name: Refactor Split Smoke

on:
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  split-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci --legacy-peer-deps

      - name: Compile contracts
        run: npx hardhat compile --network hardhat

      - name: Run splitter (non-interactive)
        shell: bash
        run: pwsh -NoProfile -ExecutionPolicy Bypass -File scripts/split-and-manifest.ps1 -Source 'contracts/dispacher/ManifestDispacher.sol' -OutDir 'artifacts/splits' -CiMode -FailOnEmptyParts

      - name: Sanity checks
        run: |
          node -e "const c=require('./artifacts/splits/combined.json'); if(!c.parts||!c.selectors){throw new Error('Empty split manifest: '+JSON.stringify(c))}"
          node scripts/validate-split.js

      - name: ABI subset parity
        run: node scripts/validate-manifest-selectors.js --mode=subset --source contracts/dispacher/ManifestDispacher.sol --combined artifacts/splits/combined.json

      - name: Generate canonical manifest
        run: node scripts/generate-canonical-manifest.js --combined artifacts/splits/combined.json --out payrox-manifest.json || true

      - name: Archive splits and manifest
        run: |
          rm -f splits.zip
          zip -r splits.zip artifacts/splits || true
          if [ -f payrox-manifest.json ]; then zip -g splits.zip payrox-manifest.json || true; fi

      - name: Upload split artifact
        uses: actions/upload-artifact@v4
        with:
          name: split-manifest-ubuntu
          path: splits.zip

      - name: ABI exact parity (strict, release only)
        if: startsWith(github.ref, 'refs/tags/')
        run: node scripts/validate-manifest-selectors.js --mode=strict --source contracts/dispacher/ManifestDispacher.sol --combined artifacts/splits/combined.json

  split-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci --legacy-peer-deps
      # IMPORTANT: compile first so facet splitter can derive selectors from compiled artifacts
      - name: Compile contracts
        run: npx hardhat compile --network hardhat

      - name: Run splitter (Windows)
        run: powershell -NoProfile -ExecutionPolicy Bypass -File scripts\split-and-manifest.ps1 -Source contracts\dispacher\ManifestDispacher.sol -OutDir artifacts\splits -CiMode -FailOnEmptyParts

      - name: Sanity checks
        shell: pwsh
        run: |
          node -e "const c=require('./artifacts/splits/combined.json'); if(!c.parts||!c.selectors){throw new Error('Empty split manifest: '+JSON.stringify(c))}"
          node scripts/validate-split.js

      - name: ABI subset parity
        shell: pwsh
        run: |
          node scripts/validate-manifest-selectors.js --mode=subset --source contracts\dispacher\ManifestDispacher.sol --combined artifacts\splits\combined.json

      - name: Generate canonical manifest
        shell: pwsh
        run: |
          node scripts/generate-canonical-manifest.js --combined artifacts/splits/combined.json --out payrox-manifest.json || exit 0

      - name: Archive splits and manifest (Windows)
        shell: pwsh
        run: |
          if (Test-Path splits.zip) { Remove-Item splits.zip -Force }
          if (Test-Path artifacts\splits) { Compress-Archive -Path artifacts\splits\* -DestinationPath splits.zip -Force }
          if (Test-Path payrox-manifest.json) { Compress-Archive -Path payrox-manifest.json -Update -DestinationPath splits.zip }

      - name: Upload split artifact
        uses: actions/upload-artifact@v4
        with:
          name: split-manifest-windows
          path: splits.zip

      - name: ABI exact parity (strict, release only)
        if: startsWith(github.ref, 'refs/tags/')
        shell: pwsh
        run: |
          node scripts/validate-manifest-selectors.js --mode=strict --source contracts\dispacher\ManifestDispacher.sol --combined artifacts\splits\combined.json

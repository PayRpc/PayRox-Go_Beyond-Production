# Training and Validation Data Split
# This is a backup of the original data splitting configuration

import os
import random
from typing import List, Tuple

def split_data(data_dir: str, train_ratio: float = 0.8, val_ratio: float = 0.2) -> Tuple[List[str], List[str]]:
    """
    Split data into training and validation sets.

    Args:
        data_dir: Directory containing data files
        train_ratio: Ratio of data for training
        val_ratio: Ratio of data for validation

    Returns:
        Tuple of (training_files, validation_files)
    """
    if not os.path.exists(data_dir):
        raise FileNotFoundError(f"Data directory not found: {data_dir}")

    all_files = [f for f in os.listdir(data_dir) if f.endswith('.json')]
    random.shuffle(all_files)

    total_files = len(all_files)
    train_count = int(total_files * train_ratio)

    train_files = all_files[:train_count]
    val_files = all_files[train_count:]

    return train_files, val_files

# Configuration
DATA_DIR = "./datasets"
TRAIN_RATIO = 0.8
VAL_RATIO = 0.2

if __name__ == "__main__":
    try:
        train, val = split_data(DATA_DIR, TRAIN_RATIO, VAL_RATIO)
        print(f"Training files: {len(train)}")
        print(f"Validation files: {len(val)}")
    except Exception as e:
        print(f"Error: {e}")

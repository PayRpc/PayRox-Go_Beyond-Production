{
  "name": "payrox-go-beyond",
  "type": "commonjs",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "check:ts": "tsc -p tsconfig.hardhat.json --noEmit",
    "smoke:merkle": "ts-node -P tsconfig.hardhat.json scripts/smoke/smoke-merkle.ts",
    "lint": "eslint scripts hardhat.config.ts --fix",
    "format": "prettier --write \"**/*.{ts,js,json,md,sol}\"",
    "test": "jest",
    "audit:gated": "node scripts/security/audit-gate.cjs",
    "sol:format": "prettier --plugin-search-dir=. --write \"contracts/**/*.sol\"",
    "sol:lint": "npx solhint 'contracts/**/*.sol'",
    "sol:lint:fix": "npx solhint 'contracts/**/*.sol' --fix",
    "build": "tsc -p .",
    "analyze": "node dist/scripts/cli/analyze.js",
    "analyze:light": "node dist/scripts/cli/analyze.js --light",
    "transform:one": "node scripts/transformers/transform-one.js --file",
    "transform:sample": "node scripts/transformers/transform-one.js --file contracts/My.sol --contract My",
    "regression:gen": "node scripts/analysis/regression-harness-gen.js --contract",
    "harness:gen": "node scripts/analysis/regression-harness-gen.js --contract",
    "plan:strict": "node -r ts-node/register -r tsconfig-paths/register scripts/cli/plan.ts",
    "plan": "node dist/scripts/cli/plan.js --input",
    "serve:manifest": "node dist/scripts/node/manifest-server.js",
    "ai:refactor": "ts-node tools/ai-refactor-copilot.ts",
    "ai:lint": "ts-node tools/refactor-lint.ts",
    "ai:validate": "npm run compile && npm run ai:lint && npm run test:diamond",
    "compile": "npx hardhat compile",
    "test:diamond": "node scripts/run-diamond-tests.js",
    "test:loupe": "npx hardhat test --grep \"(loupe|selectors)\"",
    "test:refactor": "npx hardhat test tests/refactor-safety.test.ts",
    "test:epoch": "npx hardhat test --grep \"epoch\"",
    "test:roles": "npx hardhat test --grep \"(roles|delegatecall|access)\"",
    "test:size": "npx hardhat test --grep \"(size|gas|limit)\"",
    "test:integrity": "npx hardhat test tests/diamond-compliance/integrity-checks.test.ts",
    "payrox:self-check": "npm run compile && npm run test:integrity && npm run test:loupe && npm run test:epoch && npm run test:roles && npm run test:size && echo 'âœ… PayRox Self-Check Complete'",
    "refactor:integrate": "node scripts/integrate-refactor-ai.js",
    "refactor:validate": "node AI/universal-refactor-validator.js",
    "gen:manifest": "pwsh -File scripts/split-and-manifest.ps1 -Source contracts/dispacher/ManifestDispacher.sol -UseSolc",
    "ci:manifest": "node scripts/extract-selectors.js --source contracts/dispacher/ManifestDispacher.sol --splits artifacts/splits --out artifacts/manifests --expected manifests/expected/ManifestDispatcher.json",
    "split:manifest": "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/split-and-manifest.ps1",
    "validate:split": "node scripts/validate-split.js",
    "check:abi": "node scripts/validate-manifest-selectors.js --source contracts/dispacher/ManifestDispacher.sol --combined artifacts/splits/combined.json --contract ManifestDispatcher",
    "check:abi:subset": "node scripts/validate-manifest-selectors.js --mode=subset --source contracts/dispacher/ManifestDispacher.sol --combined artifacts/splits/combined.json",
    "postprocess:splits": "node scripts/postprocess-splits.js",
    "split:manifest:full": "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/split-and-manifest.ps1 -Source contracts\\dispacher\\ManifestDispacher.sol -OutDir artifacts/splits -CiMode",
    "manifest:canonical": "node scripts/generate-canonical-manifest.js",
    "test:manifest": "node tools/tests/generate-manifest.test.js",
    "check:create2": "node scripts/check-create2-determinism.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@nomicfoundation/hardhat-chai-matchers": "^2.1.0",
    "@nomicfoundation/hardhat-ethers": "^3.1.0",
    "@nomicfoundation/hardhat-network-helpers": "^1.0.13",
    "@nomicfoundation/hardhat-verify": "^2.1.1",
    "@nomiclabs/hardhat-solhint": "^3.1.0",
    "@solidity-parser/parser": "^0.18.0",
    "@solidstate/hardhat-bytecode-exporter": "^1.0.0",
    "@typechain/hardhat": "^9.1.0",
    "@types/chai": "^5.2.2",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.3.0",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "chai": "^4.5.0",
    "commander": "^11.0.0",
    "diff": "^7.0.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^10.1.8",
    "eslint-config-standard-with-typescript": "^43.0.1",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.5.4",
    "eslint-plugin-promise": "^6.6.0",
    "ethers": "^6.12.0",
    "hardhat": "^2.26.3",
    "jest": "^30.0.5",
    "js-sha3": "^0.9.3",
    "minimist": "^1.2.8",
    "prettier": "^3.6.2",
    "prettier-plugin-solidity": "^2.1.0",
    "solc": "^0.8.30",
    "solhint": "^6.0.0",
    "solidity-parser-antlr": "^0.4.11",
    "ts-jest": "^29.4.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typechain": "^8.3.2",
    "typescript": "^5.9.2",
    "web3": "^1.10.4"
  },
  "dependencies": {
    "@openzeppelin/contracts": "^5.4.0",
    "@openzeppelin/contracts-upgradeable": "^5.4.0",
    "@solarity/hardhat-habits": "^1.0.1",
    "@uniswap/v3-core": "^1.0.1",
    "@uniswap/v3-periphery": "^1.4.4",
    "commander": "^11.0.0",
    "hardhat-abi-exporter": "^2.11.0",
    "hardhat-deploy": "^1.0.4",
    "hardhat-gas-reporter": "^2.3.0",
    "hardhat-watcher": "^2.5.0"
  }
}

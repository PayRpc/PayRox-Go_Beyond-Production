{
  "name": "payrox-go-beyond",
  "type": "commonjs",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "precommit": "npm run lint:fix && npm run test:quick && npm run build:check",
    "lint:fix": "eslint scripts hardhat.config.ts --config .eslintrc.simple.json --fix",
    "lint:check": "eslint scripts hardhat.config.ts --config .eslintrc.simple.json",
    "test:quick": "jest --passWithNoTests --silent",
    "test:all": "jest --coverage",
    "test:integration": "jest --testMatch='**/*.integration.test.ts'",
    "test:e2e": "jest --testMatch='**/*.e2e.test.ts'",
    "build:check": "tsc -p tsconfig.hardhat.json --noEmit",
    "build": "tsc -p tsconfig.hardhat.json && npx hardhat compile",
    "contracts:compile": "npx hardhat compile",
    "contracts:test": "npx hardhat test",
    "contracts:size": "npx hardhat compile && node scripts/check-contract-sizes.js",
    "dev:start": "pwsh -File dev-launcher.ps1 -Start",
    "dev:status": "pwsh -File dev-launcher.ps1 -Status",
    "dev:stop": "pwsh -File dev-launcher.ps1 -Stop",
    "stability:backup": "pwsh -File stability-system.ps1 -Backup",
    "stability:restore": "pwsh -File stability-system.ps1 -Restore",
    "quality:check": "npm run lint:check && npm run test:all && npm run contracts:test",
    "deploy:prepare": "npm run quality:check && npm run build",
    "clean": "rm -rf artifacts cache typechain-types coverage .stability/temp",
    "reset": "npm run clean && npm ci && npm run build",
    "check:ts": "tsc -p tsconfig.hardhat.json --noEmit",
    "check:wire": "ts-node --transpile-only tools/validate-integration.ts",
    "autofix": "node .payrox/auto-fix-runner.js",
    "autofix:dry": "node .payrox/auto-fix-runner.js --dry-run --verbose",
    "dev:safe": "npm run autofix && npm run contracts:compile && npm run typechain:generate",
    "smoke:merkle": "ts-node -P tsconfig.hardhat.json scripts/smoke/smoke-merkle.ts",
    "lint": "eslint scripts hardhat.config.ts --config .eslintrc.simple.json --fix",
    "lint:zero": "node tools/zeroIssueLint.cjs",
    "lint:zero:json": "node tools/zeroIssueLint.cjs --json",
    "lint:zero:baseline": "node tools/zeroIssueLint.cjs --write-baseline",
    "error:detect": "node tools/error-detector.cjs",
    "error:fix:auto": "node tools/error-fixer.cjs",
    "error:fix:dry-run": "node tools/error-fixer.cjs --dry-run",
    "error:fix:advanced": "node tools/error-fixer-advanced.cjs",
    "error:fix:advanced:dry": "node tools/error-fixer-advanced.cjs --dry-run",
    "error:fix:specialized": "node tools/error-fixer-specialized.cjs",
    "error:fix:specialized:dry": "node tools/error-fixer-specialized.cjs --dry-run",
    "error:fix:nullsafety": "node tools/error-fixer-nullsafety.cjs",
    "error:fix:nullsafety:dry": "node tools/error-fixer-nullsafety.cjs --dry-run",
    "error:fix:final": "node tools/error-fixer-final.cjs",
    "error:fix:final:dry": "node tools/error-fixer-final.cjs --dry-run",
    "error:fix:ultimate": "node tools/error-fixer-ultimate.cjs",
    "error:fix:ultimate:dry": "node tools/error-fixer-ultimate.cjs --dry-run",
    "deps:sync": "node tools/dependency-sync-fixer.cjs",
    "lint:zero-issue": "npx eslint . --config-lookup-name=\"zero-issue\" --rule=\"@typescript-eslint/ban-ts-comment: off\" --rule=\"no-empty: off\" --rule=\"node/no-path-concat: off\" --rule=\"no-inner-declarations: off\"",
    "format": "prettier --write \"**/*.{ts,js,json,md,sol}\"",
    "test": "jest",
    "audit:gated": "node scripts/security/audit-gate.cjs",
    "sol:format": "prettier --plugin-search-dir=. --write \"contracts/**/*.sol\"",
    "sol:lint": "npx solhint 'contracts/**/*.sol'",
    "sol:lint:fix": "npx solhint 'contracts/**/*.sol' --fix",
    "preflight": "npx hardhat payrox:preflight",
    "health": "npx hardhat payrox:health",
    "analyze": "node dist/scripts/cli/analyze.js",
    "analyze:light": "node dist/scripts/cli/analyze.js --light",
    "transform:one": "node scripts/transformers/transform-one.js --file",
    "transform:sample": "node scripts/transformers/transform-one.js --file contracts/My.sol --contract My",
    "regression:gen": "node scripts/analysis/regression-harness-gen.js --contract",
    "harness:gen": "node scripts/analysis/regression-harness-gen.js --contract",
    "plan:strict": "node -r ts-node/register -r tsconfig-paths/register scripts/cli/plan.ts",
    "plan": "node dist/scripts/cli/plan.js --input",
    "serve:manifest": "node dist/scripts/node/manifest-server.js",
    "ai:refactor": "ts-node tools/ai-refactor-copilot.ts",
    "compile": "npx hardhat compile",
    "test:diamond": "node scripts/run-diamond-tests.js",
    "test:loupe": "npx hardhat test --grep \"(loupe|selectors)\"",
    "test:refactor": "npx hardhat test tests/refactor-safety.test.ts",
    "test:epoch": "npx hardhat test --grep \"epoch\"",
    "test:roles": "npx hardhat test --grep \"(roles|delegatecall|access)\"",
    "test:size": "npx hardhat test --grep \"(size|gas|limit)\"",
    "test:integrity": "npx hardhat test tests/diamond-compliance/integrity-checks.test.ts",
    "payrox:self-check": "npm run compile && npm run test:integrity && npm run test:loupe && npm run test:epoch && npm run test:roles && npm run test:size && echo 'âœ… PayRox Self-Check Complete'",
    "refactor:integrate": "node scripts/integrate-refactor-ai.js",
    "refactor:validate": "node AI/universal-refactor-validator.js",
    "gen:manifest": "pwsh -File scripts/split-and-manifest.ps1 -Source contracts/dispacher/ManifestDispacher.sol -UseSolc",
    "ci:manifest": "node scripts/extract-selectors.js --source contracts/dispacher/ManifestDispacher.sol --splits artifacts/splits --out artifacts/manifests --expected manifests/expected/ManifestDispatcher.json",
    "split:manifest": "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/split-and-manifest.ps1",
    "validate:split": "node scripts/validate-split.js",
    "check:abi": "node scripts/validate-manifest-selectors.js --source contracts/dispacher/ManifestDispacher.sol --combined artifacts/splits/combined.json --contract ManifestDispatcher",
    "check:abi:subset": "node scripts/validate-manifest-selectors.js --mode=subset --source contracts/dispacher/ManifestDispacher.sol --combined artifacts/splits/combined.json",
    "postprocess:splits": "node scripts/postprocess-splits.js",
    "split:manifest:full": "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/split-and-manifest.ps1 -Source contracts\\dispacher\\ManifestDispacher.sol -OutDir artifacts/splits -CiMode",
    "manifest:canonical": "node scripts/generate-canonical-manifest.js",
    "test:manifest": "node tools/tests/generate-manifest.test.js",
    "check:create2": "node scripts/check-create2-determinism.js",
    "typechain:generate": "node scripts/run-typechain-filtered.js",
    "check:determinism": "npm run contracts:compile && npm run typechain:generate && node tools/generate-manifest.js",
    "audit:prep": "ts-node tools/audit/audit-consultant.ts prep",
    "audit:template": "ts-node tools/audit/audit-consultant.ts template",
    "audit:chatgpt": "ts-node tools/audit/audit-consultant.ts chatgpt",
    "audit:checklist": "ts-node tools/audit/audit-consultant.ts checklist",
    "audit:interactive": "ts-node tools/audit/audit-consultant.ts interactive",
    "build:splitter": "tsup tools/splitter/split-facet.ts --format cjs --platform=node --target=node20 --out-dir scripts/tools/ast/dist --clean",
    "postinstall": "npm run build:splitter || true",
    "new:facet": "ts-node scripts/generators/new-facet.ts",
    "routes:add": "ts-node scripts/manifest/add-facet-routes.ts",
    "spell:prepare": "node tools/spell/prepare-json-for-spellcheck.cjs deployable-modules/SecurityFacet/chunks/analysis-report.json"
  },
  "health": "npx hardhat payrox:health",
  "keywords": [],
  "author": "",
  "license": "ISC",
  "engines": {
    "node": ">=20 <23"
  },
  "devDependencies": {
    "@nomicfoundation/hardhat-chai-matchers": "^2.1.0",
    "@nomicfoundation/hardhat-ethers": "^3.1.0",
    "@nomicfoundation/hardhat-network-helpers": "^1.0.13",
    "@nomicfoundation/hardhat-verify": "^2.1.1",
    "@nomiclabs/hardhat-solhint": "^3.1.0",
    "@solidity-parser/parser": "^0.18.0",
    "@solidstate/hardhat-bytecode-exporter": "^1.0.0",
    "@typechain/ethers-v6": "^0.5.1",
    "@typechain/hardhat": "^9.1.0",
    "@types/chai": "^5.2.2",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.3.0",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "chai": "^4.5.0",
    "commander": "^11.0.0",
    "diff": "^7.0.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^10.1.8",
    "eslint-config-standard": "^17.1.0",
    "eslint-config-standard-with-typescript": "^43.0.1",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-n": "^16.0.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.5.4",
    "eslint-plugin-promise": "^6.6.0",
    "ethers": "^6.15.0",
    "glob": "^10.3.10",
    "hardhat": "^2.22.4",
    "jest": "^30.0.5",
    "js-sha3": "^0.9.3",
    "keccak": "^3.0.4",
    "minimist": "^1.2.8",
    "mocha": "^11.7.1",
    "picomatch": "^4.0.3",
    "prettier": "^3.6.2",
    "prettier-plugin-solidity": "^2.1.0",
    "solc": "^0.8.30",
    "solhint": "^6.0.0",
    "solidity-parser-antlr": "^0.4.11",
    "ts-jest": "^29.4.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "tsup": "^8.5.0",
    "typechain": "^8.3.2",
    "typescript": "5.5.4",
    "web3": "^4.16.0"
  },
  "dependencies": {
    "@modelcontextprotocol/server-filesystem": "2025.8.21",
    "@openzeppelin/contracts": "^5.4.0",
    "@openzeppelin/contracts-upgradeable": "^5.4.0",
    "@solarity/hardhat-habits": "^1.0.1",
    "@uniswap/v3-core": "^1.0.1",
    "@uniswap/v3-periphery": "^1.4.4",
    "commander": "^11.0.0",
    "eslint-plugin-n": "^16.6.2",
    "hardhat-abi-exporter": "^2.11.0",
    "hardhat-deploy": "^1.0.4",
    "hardhat-gas-reporter": "^2.3.0",
    "hardhat-watcher": "^2.5.0"
  },
  "overrides": {
    "elliptic": "^6.6.1",
    "ws": "^8.18.0",
    "tough-cookie": "^4.1.4",
    "form-data": "^4.0.1",
    "cookie": "^0.7.2",
    "tar": "^6.2.1",
    "tmp": "^0.2.4"
  }
}

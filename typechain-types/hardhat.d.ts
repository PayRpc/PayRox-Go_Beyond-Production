/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "IERC7913SignatureVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC7913SignatureVerifier__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "AuditRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AuditRegistry__factory>;
    getContractFactory(
      name: "ManifestDispatcher",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ManifestDispatcher__factory>;
    getContractFactory(
      name: "IManifestDispatcher",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IManifestDispatcher__factory>;
    getContractFactory(
      name: "AccessControlFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlFacet__factory>;
    getContractFactory(
      name: "ChunkFactoryFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChunkFactoryFacet__factory>;
    getContractFactory(
      name: "ERC165Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Facet__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ExampleFacetA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExampleFacetA__factory>;
    getContractFactory(
      name: "ExampleFacetB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExampleFacetB__factory>;
    getContractFactory(
      name: "IAntiBotFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAntiBotFacet__factory>;
    getContractFactory(
      name: "MaliciousFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MaliciousFacet__factory>;
    getContractFactory(
      name: "PauseFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PauseFacet__factory>;
    getContractFactory(
      name: "PayRoxAdminFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PayRoxAdminFacet__factory>;
    getContractFactory(
      name: "PayRoxPaymentsFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PayRoxPaymentsFacet__factory>;
    getContractFactory(
      name: "RefactorSafetyFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RefactorSafetyFacet__factory>;
    getContractFactory(
      name: "SaltViewFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SaltViewFacet__factory>;
    getContractFactory(
      name: "SecurityFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SecurityFacet__factory>;
    getContractFactory(
      name: "DeterministicChunkFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DeterministicChunkFactory__factory>;
    getContractFactory(
      name: "GovernanceOrchestrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernanceOrchestrator__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "IPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPausable__factory>;
    getContractFactory(
      name: "PayRoxDiamondInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PayRoxDiamondInit__factory>;
    getContractFactory(
      name: "IAntiBot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAntiBot__factory>;
    getContractFactory(
      name: "IChunkFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChunkFactory__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IDiamondLoupeEx",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupeEx__factory>;
    getContractFactory(
      name: "IManifestDispatcher",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IManifestDispatcher__factory>;
    getContractFactory(
      name: "ISaltView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISaltView__factory>;
    getContractFactory(
      name: "RefactorSafeFacetBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RefactorSafeFacetBase__factory>;
    getContractFactory(
      name: "RefactorSafetyLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RefactorSafetyLib__factory>;
    getContractFactory(
      name: "ManifestTypes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ManifestTypes__factory>;
    getContractFactory(
      name: "Orchestrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Orchestrator__factory>;
    getContractFactory(
      name: "IManifestDispatcherView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IManifestDispatcherView__factory>;
    getContractFactory(
      name: "PayRoxProxyRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PayRoxProxyRouter__factory>;
    getContractFactory(
      name: "Diamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Diamond__factory>;
    getContractFactory(
      name: "DiamondWithEpoch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondWithEpoch__factory>;
    getContractFactory(
      name: "EpochManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EpochManager__factory>;
    getContractFactory(
      name: "FacetA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FacetA__factory>;
    getContractFactory(
      name: "FacetB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FacetB__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "MockManifestDispatcher",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockManifestDispatcher__factory>;
    getContractFactory(
      name: "SampleFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SampleFacet__factory>;
    getContractFactory(
      name: "MockManifestDispatcher",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockManifestDispatcher__factory>;
    getContractFactory(
      name: "ChunkFactoryLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChunkFactoryLib__factory>;
    getContractFactory(
      name: "GasOptimizationUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GasOptimizationUtils__factory>;
    getContractFactory(
      name: "OrderedMerkle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OrderedMerkle__factory>;

    getContractAt(
      name: "IERC1271",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "IERC7913SignatureVerifier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC7913SignatureVerifier>;
    getContractAt(
      name: "ECDSA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "AuditRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AuditRegistry>;
    getContractAt(
      name: "ManifestDispatcher",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ManifestDispatcher>;
    getContractAt(
      name: "IManifestDispatcher",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IManifestDispatcher>;
    getContractAt(
      name: "AccessControlFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlFacet>;
    getContractAt(
      name: "ChunkFactoryFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChunkFactoryFacet>;
    getContractAt(
      name: "ERC165Facet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Facet>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ExampleFacetA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ExampleFacetA>;
    getContractAt(
      name: "ExampleFacetB",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ExampleFacetB>;
    getContractAt(
      name: "IAntiBotFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAntiBotFacet>;
    getContractAt(
      name: "MaliciousFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MaliciousFacet>;
    getContractAt(
      name: "PauseFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PauseFacet>;
    getContractAt(
      name: "PayRoxAdminFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PayRoxAdminFacet>;
    getContractAt(
      name: "PayRoxPaymentsFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PayRoxPaymentsFacet>;
    getContractAt(
      name: "RefactorSafetyFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RefactorSafetyFacet>;
    getContractAt(
      name: "SaltViewFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SaltViewFacet>;
    getContractAt(
      name: "SecurityFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SecurityFacet>;
    getContractAt(
      name: "DeterministicChunkFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DeterministicChunkFactory>;
    getContractAt(
      name: "GovernanceOrchestrator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernanceOrchestrator>;
    getContractAt(
      name: "IAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC173",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "IPausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPausable>;
    getContractAt(
      name: "PayRoxDiamondInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PayRoxDiamondInit>;
    getContractAt(
      name: "IAntiBot",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAntiBot>;
    getContractAt(
      name: "IChunkFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChunkFactory>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IDiamondLoupeEx",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupeEx>;
    getContractAt(
      name: "IManifestDispatcher",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IManifestDispatcher>;
    getContractAt(
      name: "ISaltView",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISaltView>;
    getContractAt(
      name: "RefactorSafeFacetBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RefactorSafeFacetBase>;
    getContractAt(
      name: "RefactorSafetyLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RefactorSafetyLib>;
    getContractAt(
      name: "ManifestTypes",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ManifestTypes>;
    getContractAt(
      name: "Orchestrator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Orchestrator>;
    getContractAt(
      name: "IManifestDispatcherView",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IManifestDispatcherView>;
    getContractAt(
      name: "PayRoxProxyRouter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PayRoxProxyRouter>;
    getContractAt(
      name: "Diamond",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Diamond>;
    getContractAt(
      name: "DiamondWithEpoch",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondWithEpoch>;
    getContractAt(
      name: "EpochManager",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EpochManager>;
    getContractAt(
      name: "FacetA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FacetA>;
    getContractAt(
      name: "FacetB",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FacetB>;
    getContractAt(
      name: "IDiamondCut",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "MockManifestDispatcher",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockManifestDispatcher>;
    getContractAt(
      name: "SampleFacet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SampleFacet>;
    getContractAt(
      name: "MockManifestDispatcher",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockManifestDispatcher>;
    getContractAt(
      name: "ChunkFactoryLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChunkFactoryLib>;
    getContractAt(
      name: "GasOptimizationUtils",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GasOptimizationUtils>;
    getContractAt(
      name: "OrderedMerkle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OrderedMerkle>;

    deployContract(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1271>;
    deployContract(
      name: "IERC7913SignatureVerifier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC7913SignatureVerifier>;
    deployContract(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "AuditRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AuditRegistry>;
    deployContract(
      name: "ManifestDispatcher",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ManifestDispatcher>;
    deployContract(
      name: "IManifestDispatcher",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IManifestDispatcher>;
    deployContract(
      name: "AccessControlFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlFacet>;
    deployContract(
      name: "ChunkFactoryFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChunkFactoryFacet>;
    deployContract(
      name: "ERC165Facet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Facet>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "ExampleFacetA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExampleFacetA>;
    deployContract(
      name: "ExampleFacetB",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExampleFacetB>;
    deployContract(
      name: "IAntiBotFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAntiBotFacet>;
    deployContract(
      name: "MaliciousFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MaliciousFacet>;
    deployContract(
      name: "PauseFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PauseFacet>;
    deployContract(
      name: "PayRoxAdminFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PayRoxAdminFacet>;
    deployContract(
      name: "PayRoxPaymentsFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PayRoxPaymentsFacet>;
    deployContract(
      name: "RefactorSafetyFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RefactorSafetyFacet>;
    deployContract(
      name: "SaltViewFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SaltViewFacet>;
    deployContract(
      name: "SecurityFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SecurityFacet>;
    deployContract(
      name: "DeterministicChunkFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DeterministicChunkFactory>;
    deployContract(
      name: "GovernanceOrchestrator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernanceOrchestrator>;
    deployContract(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondLoupe>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC173>;
    deployContract(
      name: "IPausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPausable>;
    deployContract(
      name: "PayRoxDiamondInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PayRoxDiamondInit>;
    deployContract(
      name: "IAntiBot",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAntiBot>;
    deployContract(
      name: "IChunkFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChunkFactory>;
    deployContract(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondLoupe>;
    deployContract(
      name: "IDiamondLoupeEx",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondLoupeEx>;
    deployContract(
      name: "IManifestDispatcher",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IManifestDispatcher>;
    deployContract(
      name: "ISaltView",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISaltView>;
    deployContract(
      name: "RefactorSafeFacetBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RefactorSafeFacetBase>;
    deployContract(
      name: "RefactorSafetyLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RefactorSafetyLib>;
    deployContract(
      name: "ManifestTypes",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ManifestTypes>;
    deployContract(
      name: "Orchestrator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Orchestrator>;
    deployContract(
      name: "IManifestDispatcherView",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IManifestDispatcherView>;
    deployContract(
      name: "PayRoxProxyRouter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PayRoxProxyRouter>;
    deployContract(
      name: "Diamond",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Diamond>;
    deployContract(
      name: "DiamondWithEpoch",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondWithEpoch>;
    deployContract(
      name: "EpochManager",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EpochManager>;
    deployContract(
      name: "FacetA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FacetA>;
    deployContract(
      name: "FacetB",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FacetB>;
    deployContract(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondCut>;
    deployContract(
      name: "MockManifestDispatcher",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockManifestDispatcher>;
    deployContract(
      name: "SampleFacet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SampleFacet>;
    deployContract(
      name: "MockManifestDispatcher",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockManifestDispatcher>;
    deployContract(
      name: "ChunkFactoryLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChunkFactoryLib>;
    deployContract(
      name: "GasOptimizationUtils",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GasOptimizationUtils>;
    deployContract(
      name: "OrderedMerkle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OrderedMerkle>;

    deployContract(
      name: "IERC1271",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1271>;
    deployContract(
      name: "IERC7913SignatureVerifier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC7913SignatureVerifier>;
    deployContract(
      name: "ECDSA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "ReentrancyGuard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "AuditRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AuditRegistry>;
    deployContract(
      name: "ManifestDispatcher",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ManifestDispatcher>;
    deployContract(
      name: "IManifestDispatcher",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IManifestDispatcher>;
    deployContract(
      name: "AccessControlFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControlFacet>;
    deployContract(
      name: "ChunkFactoryFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChunkFactoryFacet>;
    deployContract(
      name: "ERC165Facet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Facet>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "ExampleFacetA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExampleFacetA>;
    deployContract(
      name: "ExampleFacetB",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExampleFacetB>;
    deployContract(
      name: "IAntiBotFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAntiBotFacet>;
    deployContract(
      name: "MaliciousFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MaliciousFacet>;
    deployContract(
      name: "PauseFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PauseFacet>;
    deployContract(
      name: "PayRoxAdminFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PayRoxAdminFacet>;
    deployContract(
      name: "PayRoxPaymentsFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PayRoxPaymentsFacet>;
    deployContract(
      name: "RefactorSafetyFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RefactorSafetyFacet>;
    deployContract(
      name: "SaltViewFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SaltViewFacet>;
    deployContract(
      name: "SecurityFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SecurityFacet>;
    deployContract(
      name: "DeterministicChunkFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DeterministicChunkFactory>;
    deployContract(
      name: "GovernanceOrchestrator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernanceOrchestrator>;
    deployContract(
      name: "IAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "IDiamondLoupe",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondLoupe>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IERC173",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC173>;
    deployContract(
      name: "IPausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPausable>;
    deployContract(
      name: "PayRoxDiamondInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PayRoxDiamondInit>;
    deployContract(
      name: "IAntiBot",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAntiBot>;
    deployContract(
      name: "IChunkFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChunkFactory>;
    deployContract(
      name: "IDiamondLoupe",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondLoupe>;
    deployContract(
      name: "IDiamondLoupeEx",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondLoupeEx>;
    deployContract(
      name: "IManifestDispatcher",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IManifestDispatcher>;
    deployContract(
      name: "ISaltView",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISaltView>;
    deployContract(
      name: "RefactorSafeFacetBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RefactorSafeFacetBase>;
    deployContract(
      name: "RefactorSafetyLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RefactorSafetyLib>;
    deployContract(
      name: "ManifestTypes",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ManifestTypes>;
    deployContract(
      name: "Orchestrator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Orchestrator>;
    deployContract(
      name: "IManifestDispatcherView",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IManifestDispatcherView>;
    deployContract(
      name: "PayRoxProxyRouter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PayRoxProxyRouter>;
    deployContract(
      name: "Diamond",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Diamond>;
    deployContract(
      name: "DiamondWithEpoch",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DiamondWithEpoch>;
    deployContract(
      name: "EpochManager",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EpochManager>;
    deployContract(
      name: "FacetA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FacetA>;
    deployContract(
      name: "FacetB",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FacetB>;
    deployContract(
      name: "IDiamondCut",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDiamondCut>;
    deployContract(
      name: "MockManifestDispatcher",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockManifestDispatcher>;
    deployContract(
      name: "SampleFacet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SampleFacet>;
    deployContract(
      name: "MockManifestDispatcher",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockManifestDispatcher>;
    deployContract(
      name: "ChunkFactoryLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChunkFactoryLib>;
    deployContract(
      name: "GasOptimizationUtils",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GasOptimizationUtils>;
    deployContract(
      name: "OrderedMerkle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OrderedMerkle>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}

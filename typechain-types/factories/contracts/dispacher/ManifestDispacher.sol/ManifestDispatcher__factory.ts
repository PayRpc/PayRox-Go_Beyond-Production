/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ManifestDispatcher,
  ManifestDispatcherInterface,
} from "../../../../contracts/dispacher/ManifestDispacher.sol/ManifestDispatcher";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "activationDelaySeconds",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "newDelay",
        type: "uint64",
      },
    ],
    name: "ActivationDelayOutOfRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "earliest",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "nowTs",
        type: "uint64",
      },
    ],
    name: "ActivationNotReady",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "manifestHash",
        type: "bytes32",
      },
    ],
    name: "AuditNotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "BadEpoch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "BatchTooLarge",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "BatchTooLarge",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "CodeSizeExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
    ],
    name: "CodeSizeExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "CodehashMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "DevOnly",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "DuplicateSelector",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "DuplicateSelector",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "actual",
        type: "bytes32",
      },
    ],
    name: "FacetCodeMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "actual",
        type: "bytes32",
      },
    ],
    name: "FacetCodeMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "FacetIsSelf",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
    ],
    name: "FacetUnknown",
    type: "error",
  },
  {
    inputs: [],
    name: "FrozenContract",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
    ],
    name: "InvalidSecurityLevel",
    type: "error",
  },
  {
    inputs: [],
    name: "LenMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPendingRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRoute",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proofLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionLength",
        type: "uint256",
      },
    ],
    name: "ProofLengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxLength",
        type: "uint256",
      },
    ],
    name: "ProofTooLong",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "RefactorSafetyFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "RootZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "expected",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "actual",
        type: "bytes4",
      },
    ],
    name: "SelectorMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
    ],
    name: "ZeroCodeFacet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
    ],
    name: "ZeroCodeFacet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "oldDelay",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "newDelay",
        type: "uint64",
      },
    ],
    name: "ActivationDelaySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "AuditRegistrySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "DevRegistrarToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
    ],
    name: "FacetSecurityLevelSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "versionTag",
        type: "bytes32",
      },
    ],
    name: "FacetVersionTagSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Frozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "activationTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "delay",
        type: "uint64",
      },
    ],
    name: "L2TimestampWarning",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "oldVersion",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "newVersion",
        type: "uint64",
      },
    ],
    name: "ManifestVersionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
    ],
    name: "RootActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
    ],
    name: "RootCommitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "codehash",
        type: "bytes32",
      },
    ],
    name: "RouteAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "RouteRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldFacet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newFacet",
        type: "address",
      },
    ],
    name: "RouteUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
    ],
    name: "RoutesRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "existingFacet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newFacet",
        type: "address",
      },
    ],
    name: "SelectorConflict",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "APPLY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMMIT_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EMERGENCY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activateCommittedRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activationDelay",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activeEpoch",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activeRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "facets_",
        type: "address[]",
      },
      {
        internalType: "bytes4[][]",
        name: "selectors_",
        type: "bytes4[][]",
      },
    ],
    name: "adminRegisterUnsafe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "facetAddr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "codehash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bool[]",
        name: "isRight_",
        type: "bool[]",
      },
    ],
    name: "applyRouteOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
      {
        internalType: "address[]",
        name: "facetAddrs",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "codehashes",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[][]",
        name: "proofs",
        type: "bytes32[][]",
      },
      {
        internalType: "bool[][]",
        name: "isRight",
        type: "bool[][]",
      },
    ],
    name: "applyRoutes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "auditRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "checkStorageConflicts",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "conflicts_",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "newEpoch",
        type: "uint64",
      },
    ],
    name: "commitRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "functionSelector",
        type: "bytes4",
      },
      {
        internalType: "bytes32",
        name: "requiredVersion",
        type: "bytes32",
      },
    ],
    name: "facetAddressEx",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "functionSelectors",
        type: "bytes4[]",
      },
    ],
    name: "facetAddressesBatchEx",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "includeUnsafe",
        type: "bool",
      },
    ],
    name: "facetAddressesEx",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "minSecurityLevel",
        type: "uint8",
      },
    ],
    name: "facetFunctionSelectorsEx",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "selectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
    ],
    name: "facetHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "facetImplementation",
    outputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "facetMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "category",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "dependencies",
            type: "string[]",
          },
          {
            internalType: "bool",
            name: "isUpgradeable",
            type: "bool",
          },
        ],
        internalType: "struct IDiamondLoupeEx.FacetMetadata",
        name: "metadata_",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
    ],
    name: "facetProvenance",
    outputs: [
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deployTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
    ],
    name: "facetSecurityLevel",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "facetSelectors",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
    ],
    name: "facetVersionTag",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "out",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "facetsEx",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
          {
            internalType: "bytes32",
            name: "versionTag",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "securityLevel",
            type: "uint8",
          },
        ],
        internalType: "struct IDiamondLoupeEx.FacetEx[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeze",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "frozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLimits",
    outputs: [
      {
        internalType: "uint256",
        name: "maxBatch",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxFacetCode",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "maxActivationDelay",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getManifestInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "version",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "selectorCount",
            type: "uint256",
          },
        ],
        internalType: "struct IManifestDispatcher.ManifestInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getManifestVersion",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getRoute",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouteCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDevRegistrarEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manifest",
    outputs: [
      {
        internalType: "bytes32",
        name: "activeRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "pendingRoot",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "activeEpoch",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "committedAt",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "activationDelay",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "manifestVersion",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingEpoch",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingSince",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "expectedCodeHash",
        type: "bytes32",
      },
      {
        internalType: "bytes4[]",
        name: "claimedSelectors",
        type: "bytes4[]",
      },
      {
        internalType: "bool",
        name: "allowAdditions",
        type: "bool",
      },
    ],
    name: "preflightCheckFacet",
    outputs: [
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "selectorHashEx",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "registeredSelectors",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
    ],
    name: "removeRoutes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "routeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "routes",
    outputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "codehash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
    ],
    name: "selectorHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "newDelay",
        type: "uint64",
      },
    ],
    name: "setActivationDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "setAuditRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setDevRegistrarEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
    ],
    name: "setFacetSecurityLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tag",
        type: "bytes32",
      },
    ],
    name: "setFacetVersionTag",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "manifestHash",
        type: "bytes32",
      },
    ],
    name: "verifyManifest",
    outputs: [
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080346101af57601f613c3538819003918201601f19168301916001600160401b038311848410176101b35780849260409485528339810103126101af5780516001600160a01b03811691908290036101af5760200151906001600160401b0382168083036101af5760015f5581156101a0576301e13380811161018e57505f9081527f1a93b80846506ef135d1d062834caa1099b42cc3eab0b329c7dc3b52117b936160209081526040808320805460ff1990811660019081179092557f46c7620476b8938d0187cc95a74b3d87de434e130b5656b3edf5729df60ed7cd845282852080548216831790557f2449cacc7a542f73770080c5f33b6f28bacadd5b76abfbe19fbe454d697207b6845282852080548216831790557fde1561b99fc02f9ce13cde51bf018b4f675f13ebf2d79ff56bc37178464f4cea9093529281902080548316909317909255600380546001600160801b031660809490941b600160801b600160c01b031693909317600160c01b17909255600e805490921690915551613a6d90816101c88239f35b6303b2a11d60e61b5f5260045260245ffd5b63d92e233d60e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610015575b36612e7157005b5f3560e01c8062ebb5f014610359578063021283891461035457806302c675ea1461034f578063054f7d9c1461034a578063062576b21461034557806308e59920146103405780630c5fe4501461033b578063102986bb14610336578063129fe8c11461033157806316496ad01461032c5780631a6e649e146102735780631aca7810146103275780631e580ed11461032257806320df43591461031d5780632590f832146103185780632a085b1414610313578063322520571461027d578063391772031461030e5780633a8c078614610309578063441e7d581461030457806344615bd5146102ff57806345be02b5146102fa5780634c556851146102f55780634d57f607146102f057806351c7094f146102eb57806352ef6b2c146102e657806353d5aa81146102e1578063575d7487146102dc57806362a5af3b146102d757806369b06748146102d25780636f89e409146102cd57806371cb49c0146102c8578063750588cf146102c35780637a0ed627146102be5780637d979a4f146102b957806381007e90146102b4578063889c9376146102af57806396b896eb146102aa578063991c8165146102a55780639f6b4a3b146102a0578063a9615bee1461029b578063abb2efdf14610296578063adc6c3b214610291578063adfca15e1461028c578063b74a7d3d14610287578063b782ba5014610282578063bf539cb41461027d578063c6ea173b14610278578063cdffacc614610273578063cf25dff31461026e578063f552501a14610269578063f5baf0d7146102645763fb729a720361000e576121c4565b612153565b61211c565b611fd3565b610a1e565b611e4a565b610cb8565b611c2b565b611c03565b611bc8565b611902565b6118e5565b611848565b611822565b6117f8565b611713565b6116b8565b6115b7565b61158e565b6114a9565b611415565b6113e9565b6113bc565b61139a565b611329565b611268565b611248565b6111bf565b611173565b611083565b611006565b610e43565b610d76565b610d3c565b610d13565b610cd5565b610c77565b610c3c565b610c02565b610bdc565b610b36565b6109af565b610974565b6107e9565b610743565b6106db565b6105c6565b6105a4565b61056a565b610531565b61038e565b602435906001600160401b038216820361037457565b5f80fd5b600435906001600160401b038216820361037457565b34610374576040366003190112610374576004356103aa61035e565b7fa7cca97e47194b7e39f5c716bb579f82fd22f5387703122260b316b1079e8ad15f525f5160206139f85f395f51905f526020529061042861042361041c7f46c7620476b8938d0187cc95a74b3d87de434e130b5656b3edf5729df60ed7cd5b335f9081526020919091526040902090565b5460ff1690565b6122a7565b61044f61044a61044660ff5f5160206139d85f395f51905f52541690565b1590565b6122e2565b60045460ff16610511578015610502576001600160401b0361049061048461047f6003546001600160401b031690565b612335565b6001600160401b031690565b92169182036104f3576104a281600255565b600380546fffffffffffffffff000000000000000019164260401b67ffffffffffffffff60401b161790557f6965b9c8509097ad68ba0eb17fcb9436f4a72a057fe5ac556737580bce80d8405f80a3005b630aa733db60e01b5f5260045ffd5b636fe692dd60e11b5f5260045ffd5b63a530d8bb60e01b5f5260045ffd5b6001600160a01b0381160361037457565b3461037457602036600319011261037457602061055860043561055381610520565b612f51565b604051908152f35b5f91031261037457565b34610374575f3660031901126103745760206040517f151f387c3ce2424b7e46cbb7332b70a561e2f859e3a3c7816c8ccc16ea0546398152f35b34610374575f36600319011261037457602060ff600454166040519015158152f35b34610374575f366003190112610374575f60606040516105e58161238c565b828152826020820152826040820152015261067160015460035460c01c60095490604051926106138461238c565b83526020830152426001600160401b031660408301526060820152604051918291829190916060806080830194805184526001600160401b0360208201511660208501526001600160401b0360408201511660408501520151910152565b0390f35b60409060031901126103745760043561068d81610520565b9060243560ff811681036103745790565b90602080835192838152019201905f5b8181106106bb5750505090565b82516001600160e01b0319168452602093840193909201916001016106ae565b34610374576106716106f56106ef36610675565b906126b0565b60405191829160208352602083019061069e565b634e487b7160e01b5f52603260045260245ffd5b919091805483101561073e575f52601c60205f208360031c019260021b1690565b610709565b346103745760403660031901126103745760043561076081610520565b6001600160a01b03165f9081526007602052604090208054602435908110156103745761078c9161071d565b90549060031b1c60e01b6040518091602082019063ffffffff60e01b1682520390f35b9181601f84011215610374578235916001600160401b038311610374576020808501948460051b01011161037457565b8015150361037457565b346103745760803660031901126103745760043561080681610520565b602435906044356001600160401b038111610374576108299036906004016107af565b60643591610836836107df565b8415948515610936575b5061086a60346040516bffffffffffffffffffffffff198760601b166020820152601481526123c7565b6001600160a01b0384165f90815260076020526040902090815461088d8161245c565b925f5b828110610910575050506108a38361245c565b925f5b8181106108d757876108c3886108bd898989613043565b50612f51565b604080519215158352602083019190915290f35b8061090a6108f06108eb6001948688612712565b612722565b6108fa83896126fe565b6001600160e01b03199091169052565b016108a6565b806109306108f06109236001948661071d565b90549060031b1c60e01b90565b01610890565b843f1494505f610840565b90602080835192838152019201905f5b81811061095e5750505090565b8251845260209384019390920191600101610951565b3461037457602036600319011261037457610990600435610520565b61067161099b61241f565b604051918291602083526020830190610941565b34610374576040366003190112610374576004356001600160401b038111610374576109df9036906004016107af565b602435916001600160401b03831161037457610a02610a0a9336906004016107af565b92909161277a565b005b6001600160e01b031981160361037457565b3461037457602036600319011261037457600435610a3b81610a0c565b63ffffffff60e01b165f526005602052602060018060a01b0360405f205416604051908152f35b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b60208152610ab9610aa383516080602085015260a0840190610a62565b6020840151838203601f19016040850152610a62565b91604081015192601f19838203016060840152835180825260208201916020808360051b8301019601925f915b838310610b095750505050509060806060610b0693015191019015159052565b90565b9091929396602080610b27600193601f198682030187528b51610a62565b99019301930191939290610ae6565b3461037457602036600319011261037457610b52600435610520565b610671604051610b618161238c565b60608152610bd0602082016060815260408301906060825260608401915f8352602091604051610b9184826123c7565b5f8152865260405190610ba484836123c7565b5f825252610bc960405192610bb981856123c7565b5f8452601f19810190840161290b565b5260019052565b60405191829182610a86565b3461037457602036600319011261037457610bf8600435610520565b60206040515f8152f35b34610374575f3660031901126103745760206040517fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b268152f35b3461037457602036600319011261037457600435610c5981610520565b60018060a01b03165f52600b602052602060405f2054604051908152f35b3461037457602036600319011261037457600435610c9481610a0c565b63ffffffff60e01b165f526006602052602060ff60405f2054166040519015158152f35b34610374575f366003190112610374576020600954604051908152f35b3461037457602036600319011261037457600435610cf281610520565b60018060a01b03165f52600a602052602060ff60405f205416604051908152f35b34610374575f3660031901126103745760206001600160401b0360035460801c16604051908152f35b34610374575f3660031901126103745760206040517fa7cca97e47194b7e39f5c716bb579f82fd22f5387703122260b316b1079e8ad18152f35b34610374576040366003190112610374576020610da1600435610d9881610a0c565b60243590612927565b6040516001600160a01b039091168152f35b602081016020825282518091526040820191602060408360051b8301019401925f915b838310610de557505050505090565b9091929394602080600192603f19858203018652885190848060a01b038251168152606060ff81610e2386860151608088870152608086019061069e565b946040810151604086015201511691015297019301930191939290610dd6565b3461037457602036600319011261037457610e5f6004356107df565b600854610e6b81612408565b90610e7960405192836123c7565b808252601f19610e8882612408565b015f5b818110610f5b5750505f5b818110610eab57604051806106718582610db3565b80610ecf610eba60019361297f565b905460039190911b1c6001600160a01b031690565b6001600160a01b0381165f908152600760209081526040808320600b835281842054600a9093529220610f3f929190610f2b90610f0b9061041c565b92610f26610f176123e8565b6001600160a01b039097168752565b61248e565b6020850152604084015260ff166060830152565b610f4982866126fe565b52610f5481856126fe565b5001610e96565b602090604051610f6a8161238c565b5f81526060838201525f60408201525f606082015282828701015201610e8b565b602060031982011261037457600435906001600160401b03821161037457610fb5916004016107af565b9091565b90602080835192838152019201905f5b818110610fd65750505090565b82516001600160a01b0316845260209384019390920191600101610fc9565b906020610b06928181520190610fb9565b346103745761101436610f8b565b9061101e8261245c565b915f5b81811061103e576040516020808252819061067190820187610fb9565b8061104c6001928486612712565b3561105681610a0c565b63ffffffff60e01b165f526005602052818060a01b0360405f20541661107c82876126fe565b5201611021565b34610374576040366003190112610374576004356110a081610520565b335f9081525f516020613a185f395f51905f526020526040902060243591906110ce9060ff905b54166122a7565b60045460ff16610511576001600160a01b038181165f908152600c60205260409020611102905b546001600160a01b031690565b1615611158576001600160a01b03165f818152600b6020908152604091829020849055905192835290917fe5dec4085392fa03d552cb2893a23c346d5196597aaabac78417a46351eec53a91819081015b0390a2005b62e3422b60e21b5f526001600160a01b031660045260245b5ffd5b346103745760203660031901126103745760043561119081610a0c565b63ffffffff60e01b165f5260056020526040805f206001808060a01b0382541691015482519182526020820152f35b34610374575f3660031901126103745760405180602060085491828152019060085f527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3905f5b818110611229576106718561121d818703826123c7565b60405191829182610ff5565b82546001600160a01b0316845260209093019260019283019201611206565b34610374575f36600319011261037457602060035460c01c604051908152f35b346103745760a0366003190112610374576004356001600160401b038111610374576112989036906004016107af565b6024356001600160401b038111610374576112b79036906004016107af565b6044939193356001600160401b038111610374576112d99036906004016107af565b6064929192356001600160401b038111610374576112fb9036906004016107af565b939092608435976001600160401b03891161037457611321610a0a9936906004016107af565b9890976129ac565b34610374575f36600319011261037457335f9081525f516020613a185f395f51905f526020526040902061135f9060ff906110c7565b60045460ff81166105115760ff19166001176004557fa8cab3d1893ed53071b052fafa843143492f25d1d6b0170d460789f7ab1954be5f80a1005b34610374575f36600319011261037457602060ff600e54166040519015158152f35b34610374575f3660031901126103745760606040516064815261600060208201526301e133806040820152f35b34610374575f36600319011261037457600e5460405160089190911c6001600160a01b03168152602090f35b34610374575f366003190112610374576020600254604051908152f35b602081016020825282518091526040820191602060408360051b8301019401925f915b83831061146457505050505090565b909192939460208061149a600193603f198682030187526040838b51878060a01b0381511684520151918185820152019061069e565b97019301930191939290611455565b34610374575f366003190112610374576008546114c581612408565b906114d360405192836123c7565b808252601f196114e282612408565b015f5b81811061156a5750505f5b81811061150557604051806106718582611432565b80611514610eba60019361297f565b6001600160a01b0381165f90815260076020526040902061154990610f2661153a6123f9565b6001600160a01b039094168452565b602082015261155882866126fe565b5261156381856126fe565b50016114f0565b602090604051611579816123ac565b5f8152606083820152828287010152016114e5565b34610374575f3660031901126103745760206001600160401b0360035460401c16604051908152f35b34610374576115c536610675565b5f80525f5160206139f85f395f51905f52602052906115f661042361041c5f516020613a185f395f51905f5261040a565b60045460ff16610511576001600160a01b038181165f908152600c60205260409020611621906110f5565b161561115857600360ff8316116116a25761115381611684846116757f56b27b66dccd51815ce1719ea3ef55e9984da573e0a468fef43e575c47a753219560018060a01b03165f52600a60205260405f2090565b9060ff1660ff19825416179055565b60405160ff90941684526001600160a01b0316929081906020820190565b6325aa519960e11b5f5260ff821660045260245ffd5b34610374576020366003190112610374576004356116d581610520565b6001600160a01b039081165f908152600c6020908152604080832054600d8352928190205481519390941683526001600160401b0390931690820152f35b346103745760203660031901126103745761172c610378565b335f9081525f516020613a185f395f51905f52602052604090206117529060ff906110c7565b60ff60045416610511576301e133806001600160401b038216116117dd576003805467ffffffffffffffff60801b608084811b9190911667ffffffffffffffff60801b19831617909255604080516001600160401b039290931c82168352921660208201527f29fabdd5e710c2b0282fcc042164a54b68bd783f561a1f82033b1270e5541dbb9190a1005b6303b2a11d60e61b5f526001600160401b031660045260245ffd5b34610374576020366003190112610374576001546040805160043583148152602081019290925290f35b34610374575f3660031901126103745760206001600160401b0360035416604051908152f35b346103745760203660031901126103745760043561186581610520565b335f9081525f516020613a185f395f51905f526020526040902061188b9060ff906110c7565b60ff6004541661051157600e8054610100600160a81b031916600883901b610100600160a81b03161790556001600160a01b03167fdecc45fedc7ff8221cff87a85bc0bbbf9855efaf5933aa48aae3043b50647f675f80a2005b34610374575f366003190112610374576020600154604051908152f35b34610374575f3660031901126103745761192361042361041c61040a61224f565b61194161044a61044660ff5f5160206139d85f395f51905f52541690565b60045460ff16610511576002548015611bb9576003549061198361197c604084901c6001600160401b03169360801c6001600160401b031690565b8093612358565b916001600160401b0342166001600160401b0384168110611b9857604080516001600160401b0392831681529290911660208301527fe4d190cf8d1baa9509c53072f302a12769b5a2fa4010e21e51f913a6aa98a71b91a1600e546001600160a01b03600882901c16908115159081611b8c575b50611b0c575b611a0682600155565b611a3a611a1e61047f6003546001600160401b031690565b6001600160401b03166001600160401b03196003541617600355565b611a435f600255565b611a5c67ffffffffffffffff60401b1960035416600355565b60035460c01c611a93611a6e82612335565b600380546001600160c01b031660c09290921b6001600160c01b031916919091179055565b6001600160401b0380611ae36001546003549083611ab7836001600160401b031690565b16907ffb332b8e86a2547d32a254749d32450f293166f997ff9e73626590f1564498545f80a360c01c90565b1691167fbdf7a4e360e060b2bfa9e310546ce8ce1b892bd04394c9a234e817dd15191a8a5f80a3005b6001600160a01b0316604051636f47c10b60e11b815260048101839052905f90829060249082905afa5f9181611b67575b50611b6257505f5b15611b5057816119fd565b635f28694f60e01b5f5260045260245ffd5b611b45565b611b849192503d805f833e611b7c81836123c7565b810190612b75565b509083611b3d565b60ff16159050836119f7565b63a16fa60560e01b5f526001600160401b038085166004521660245260445ffd5b631500c4af60e11b5f5260045ffd5b3461037457602036600319011261037457600435611be581610520565b60018060a01b03165f5260076020526106716106f560405f2061248e565b34610374576020366003190112610374576020600435611c2281610520565b3f604051908152f35b3461037457611c3936610f8b565b7fbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b265f525f5160206139f85f395f51905f52602052611c9c61042361041c7fde1561b99fc02f9ce13cde51bf018b4f675f13ebf2d79ff56bc37178464f4cea61040a565b60648111611e38575f905f5b818110611d1257507f10da44a9075ceb933a055d181f60aabdccf48b2099107893f1c701c790d5cfa59192611ce260405192839283612bff565b0390a1611ceb57005b60035460c01c611cfd611a6e82612335565b6001600160401b0380611ae360035460c01c90565b611d206108eb828487612712565b611d3e6110f58263ffffffff60e01b165f52600560205260405f2090565b6001600160a01b038116611d57575b5050600101611ca8565b8192945090611db091611d89611d7e8363ffffffff60e01b165f52600560205260405f2090565b60015f918281550155565b611da761041c8363ffffffff60e01b165f52600660205260405f2090565b611dea57613757565b50506001600160e01b0319167f76d504ba17812cd58154028a97a1e6704678fd628c01ae5514483383a787e9595f80a2600191825f611d4d565b611e12611e088363ffffffff60e01b165f52600660205260405f2090565b805460ff19169055565b60095480611e21575b50613757565b611e2d611e3291612bf3565b600955565b5f611e1b565b63533dcfcf60e11b5f5260045260245ffd5b346103745760a036600319011261037457600435611e6781610a0c565b60243590611e7482610520565b604435916064356001600160401b03811161037457611e979036906004016107af565b916084356001600160401b03811161037457611eba611f6c9136906004016107af565b611ecb61042361041c61040a61224f565b611ee961044a61044660ff5f5160206139d85f395f51905f52541690565b611f51611ef461243a565b95611efd61243a565b97611f0661243a565b9a611f40611f12612c47565b98611f28611f1e612c47565b9d6108fa8d6126f1565b611f318c6126f1565b6001600160a01b039091169052565b611f498c6126f1565b523691612c6c565b611f5a856126f1565b52611f64846126f1565b503691612cb8565b611f75856126f1565b52611f7f846126f1565b50303b15610374575f93611fa891604051968795869563575d748760e01b875260048701612d93565b038183305af18015611fce57611fba57005b80611fc85f610a0a936123c7565b80610560565b612be8565b3461037457602036600319011261037457600435611ff0816107df565b6008549015612040576120028161245c565b905f5b81811061201e5750506106719060405191829182610ff5565b8061203a612030610eba60019461297f565b611f3183876126fe565b01612005565b5f5f5b8281106120cd57506120549061245c565b905f5f5b82811061206b575050506106719061121d565b8061207a610eba60019361297f565b6001600160a01b0381165f908152600a602052604090206120a49061209e9061041c565b60ff1690565b6120b0575b5001612058565b6120c790611f316120c086612e63565b95886126fe565b5f6120a9565b6120fb61209e61041c6120e2610eba8561297f565b6001600160a01b03165f908152600a6020526040902090565b612108575b600101612043565b90612114600191612e63565b919050612100565b34610374575f3660031901126103745760206121426001600160401b0360035416612335565b6001600160401b0360405191168152f35b34610374575f3660031901126103745760e060015460025460035460ff600454169160405193845260208401526001600160401b03811660408401526001600160401b038160401c1660608401526001600160401b038160801c16608084015260c01c60a0830152151560c0820152f35b34610374576020366003190112610374576004356121e1816107df565b335f9081525f516020613a185f395f51905f52602052604090206122079060ff906110c7565b60ff600454166105115760207f5bebd6196a737eb407d6b6681d02ca964f4c2d67f2138fbd9029d243e6d3058d91151560ff19600e541660ff821617600e55604051908152a1005b7f151f387c3ce2424b7e46cbb7332b70a561e2f859e3a3c7816c8ccc16ea0546395f525f5160206139f85f395f51905f526020527f2449cacc7a542f73770080c5f33b6f28bacadd5b76abfbe19fbe454d697207b690565b156122ae57565b60405162461bcd60e51b815260206004820152600c60248201526b4d697373696e6720726f6c6560a01b6044820152606490fd5b156122e957565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b634e487b7160e01b5f52601160045260245ffd5b6001600160401b036001911601906001600160401b03821161235357565b612321565b906001600160401b03809116911601906001600160401b03821161235357565b634e487b7160e01b5f52604160045260245ffd5b608081019081106001600160401b038211176123a757604052565b612378565b604081019081106001600160401b038211176123a757604052565b90601f801991011681019081106001600160401b038211176123a757604052565b604051906123f76080836123c7565b565b604051906123f76040836123c7565b6001600160401b0381116123a75760051b60200190565b6040519061242e6020836123c7565b5f808352366020840137565b6040805190919061244b83826123c7565b6001815291601f1901366020840137565b9061246682612408565b61247360405191826123c7565b8281528092612484601f1991612408565b0190602036910137565b604051815480825290929183906124ac60208301915f5260205f2090565b925f905b8060078301106125f3576123f79454918181106125d4575b8181106125b5575b818110612596575b818110612577575b818110612558575b818110612539575b81811061251b575b10612506575b5003836123c7565b6001600160e01b03191681526020015f6124fe565b602083811b6001600160e01b031916855290936001910193016124f8565b604083901b6001600160e01b03191684529260019060200193016124f0565b606083901b6001600160e01b03191684529260019060200193016124e8565b608083901b6001600160e01b03191684529260019060200193016124e0565b60a083901b6001600160e01b03191684529260019060200193016124d8565b60c083901b6001600160e01b03191684529260019060200193016124d0565b6001600160e01b031960e084901b1684529260019060200193016124c8565b9160089193506101006001916126a28754612619838260e01b63ffffffff60e01b169052565b60c081901b6001600160e01b031916602084015260a081901b6001600160e01b0319166040840152608081901b6001600160e01b0319166060840152606081901b6001600160e01b0319166080840152604081901b6001600160e01b03191660a0840152602081901b6001600160e01b03191660c08401526001600160e01b03191660e0830152565b0194019201859293916124b0565b6001600160a01b03165f818152600a6020526040902054909160ff9182169116116126e8575f526007602052610b0660405f2061248e565b50610b0661241f565b80511561073e5760200190565b805182101561073e5760209160051b010190565b919081101561073e5760051b0190565b35610b0681610a0c565b35610b0681610520565b919081101561073e5760051b81013590601e19813603018212156103745701908135916001600160401b038311610374576020018260051b36038113610374579190565b919061278d61042361041c61040a61224f565b6127ab61044a61044660ff5f5160206139d85f395f51905f52541690565b60045460ff16610511576127c4610446600e5460ff1690565b6128e15780156128db578381036128cc576127de81613160565b5f5b8181106128425750505050506127f860035460c01c90565b612804611a6e82612335565b6001600160401b038061281960035460c01c90565b1691167fbdf7a4e360e060b2bfa9e310546ce8ce1b892bd04394c9a234e817dd15191a8a5f80a3565b612855612850828487612712565b61272c565b6001600160a01b03811630146128bd5761286e8161317d565b5061287a838887612736565b61288681949294613160565b5f5b81811061289c5750505050506001016127e0565b806128b785856128b26108eb600196888c612712565b613266565b01612888565b633aa7666160e21b5f5260045ffd5b638b140a8160e01b5f5260045ffd5b50505050565b63999da23760e01b5f5260045ffd5b6001600160401b0381116123a757601f01601f191660200190565b5f5b82811061291957505050565b60608282015260200161290d565b6001600160e01b0319165f908152600560205260409020546001600160a01b0316908115612979578015908115612963575b50610b0657505f90565b9050815f52600b60205260405f2054145f612959565b50505f90565b60085481101561073e5760085f5260205f2001905f90565b805482101561073e575f5260205f2001905f90565b98979695949392919060025f54146129d1576129cb9960025f556129e0565b60015f55565b633ee5aeb560e01b5f5260045ffd5b9395909894969197926129fa61042361041c61040a61224f565b612a1861044a61044660ff5f5160206139d85f395f51905f52541690565b60045460ff1661051157600254908115611bb9578a15612b6857808b14801590612b5e575b8015612b54575b8015612b4a575b6128cc57612a588b613160565b612a628b87613505565b5f5b8b8110612a83575050505050505050505050506127f860035460c01c90565b612a9161285082848e612712565b906001600160a01b03821630146128bd57612b0e610446868f8c8f8f878f8f938f612af88f98958e612af18786612aeb6108eb83612b069d612afe9c612ae4612add849e85908d612712565b358a6131e3565b5050612712565b94612712565b3591613595565b98612736565b949093612736565b9290916135d5565b612b3b57612b358a6001938f848f612aeb6108eb8f612b2e958591612712565b3591613266565b01612a64565b6309bde33960e01b5f5260045ffd5b50868b1415612a4b565b50838b1415612a44565b50888b1415612a3d565b5050505050505050505050565b9190604083820312610374578251612b8c816107df565b926020810151906001600160401b038211610374570181601f8201121561037457805190612bb9826128f0565b92612bc760405194856123c7565b8284526020838301011161037457815f9260208093018386015e8301015290565b6040513d5f823e3d90fd5b8015612353575f190190565b60208082528101839052604001915f5b818110612c1c5750505090565b9091926020806001928635612c3081610a0c565b6001600160e01b0319168152019401929101612c0f565b604080519190612c5781846123c7565b600183526123f790601f19016020840161290b565b929190612c7881612408565b93612c8660405195866123c7565b602085838152019160051b810192831161037457905b828210612ca857505050565b8135815260209182019101612c9c565b929190612cc481612408565b93612cd260405195866123c7565b602085838152019160051b810192831161037457905b828210612cf457505050565b602080918335612d03816107df565b815201910190612ce8565b9080602083519182815201916020808360051b8301019401925f915b838310612d3957505050505090565b9091929394601f19828203018352855190602080835192838152019201905f905b808210612d795750505060208060019297019301930191939290612d2a565b909192602080600192865115158152019401920190612d5a565b95949290612dcc92612db0612dbe9260a08a5260a08a019061069e565b9088820360208a0152610fb9565b908682036040880152610941565b938085036060820152825180865260208601906020808260051b8901019501915f905b828210612e0d5750505050610b069394506080818403910152612d0e565b90919295601f19898203018252865190602080835192838152019201905f905b808210612e4b57505050602080600192980192019201909291612def565b90919260208060019286518152019401920190612e2d565b5f1981146123535760010190565b612e8f61044a6104465f5160206139d85f395f51905f525460ff1690565b5f80356001600160e01b031916815260056020526040902080546001600160a01b0316906001600160a01b03821615612ef7576001823f91015403612ee8575f8091368280378136915af43d90815f803e15611170575ff35b63a5cfda9b60e01b5f5260045ffd5b636586e12960e01b5f5260045ffd5b5f1981019190821161235357565b60209181520160208251919201905f5b818110612f315750505090565b82516001600160e01b031916845260209384019390920191600101612f24565b6001600160a01b0381165f908152600760205260409020612f719061248e565b9081516001905b808210612faf575050612fa9612f9b913f92604051928391602083019586612f14565b03601f1981018352826123c7565b51902090565b909193612fcd612fbf84866126fe565b516001600160e01b03191690565b94835b80151580613019575b15612ffe57612ff66108f0612fbf612ff084612f06565b896126fe565b5f1901612fd0565b600192966108fa61301292969396886126fe565b0190612f78565b5061303261302c612fbf612ff084612f06565b60e01c90565b63ffffffff8860e01c911611612fd9565b905f935b82518510156130f6575f935f5b83518110156130ec5761306a612fbf88876126fe565b61308761307a612fbf84886126fe565b6001600160e01b03191690565b6001600160e01b0319909116146130a057600101613054565b50949091935060015b156130b957600101939290613047565b6130c9612fbf61117092856126fe565b632e2ce35360e21b5f9081526001600160e01b0319909116600452602452604490565b50949091936130a9565b935091159182613152575b505061310c57600190565b6040516345b78ccd60e01b815260206004820181905260248201527f53656c6563746f72206164646974696f6e73206e6f74207065726d69747465646044820152606490fd5b519051141590505f80613101565b6064811161316b5750565b63533dcfcf60e11b5f5260045260245ffd5b6001600160a01b0381169081156131d457803b9182156131c25761600083116131a557503f91565b90506314c5d1df60e11b5f5260045260245261600060445260645ffd5b632dcff22f60e11b5f5260045260245ffd5b63d92e233d60e01b5f5260045ffd5b916001600160a01b0383169182156131d457833b9283156131c25761600084116132495750833f938115158061323f575b61321c575050565b63581bae3360e11b5f526001600160a01b0316600452602452604483905260645ffd5b5081851415613214565b83906314c5d1df60e11b5f5260045260245261600060445260645ffd5b909180833f036134e15761328e6110f58363ffffffff60e01b165f52600560205260405f2090565b6132f06132996123f9565b6001600160a01b03861681528360208201526132c68563ffffffff60e01b165f52600560205260405f2090565b815181546001600160a01b0319166001600160a01b03919091161781559060019060200151910155565b61331161044661041c8563ffffffff60e01b165f52600660205260405f2090565b1561346f57506133426133358363ffffffff60e01b165f52600660205260405f2090565b805460ff19166001179055565b613350611e2d600954612e63565b61335a82846138dd565b50506040519081526001600160a01b038316916001600160e01b031916907f4c4455a30528c319643ae6fc35f3a0fcabde6c015f2a1a5270382c4a190b0fa390602090a35b6001600160a01b038181165f908152600c602052604090206133c0906110f5565b1615613412575b6001600160a01b0381165f908152600a6020526040902060ff906133ea9061041c565b16156133f35750565b6001600160a01b03165f908152600a602052604090206123f790613335565b6001600160a01b0381165f908152600c6020526040902080546001600160a01b031916331790556001600160a01b0381165f908152600d60205260409020805467ffffffffffffffff19166001600160401b0342161790556133c7565b6001600160a01b0384811693908216925090838303613492575b5050505061339f565b8161349c91613757565b50506134a881856138dd565b50506001600160e01b0319167f6b1a92a4c09810a2a37b98e56f4200944bb663ffcf62c886229b65a5ea5d14a75f80a45f808080613489565b63581bae3360e11b5f526001600160a01b038316600452602452813f60445260645ffd5b5f5b82811061351357505050565b61351e818484612712565b3561352881610a0c565b60018201808311612353576001600160e01b03198216905b85811061355257505050600101613507565b61356a613560828888612712565b3561307a81610a0c565b821461357857600101613540565b63edd7c12360e01b5f526001600160e01b0319831660045260245ffd5b9160405191602083019363ffffffff60e01b16845260018060a01b03166040830152606082015260608152612fa96080826123c7565b35610b06816107df565b939490918383036136d05761010083116136b6575f935f5b84811061368957505050610100821061366f575b61360e909392919361398e565b925f925b81841061362157505050501490565b90919293600190818086881c16145f146136555761364b90613644878686612712565b35906139ad565b9401929190613612565b61366a90613664878686612712565b356139ad565b61364b565b9161360e906136806001841b612f06565b16929050613601565b61369c613697828486612712565b6135cb565b6136a9575b6001016135ed565b6001811b909517946136a1565b63d31c949560e01b5f52600483905261010060245260445ffd5b633a67ea2360e11b5f526004839052602484905260445ffd5b634e487b7160e01b5f52603160045260245ffd5b80548015613726575f190190613713828261071d565b63ffffffff82549160031b1b1916905555565b6136e9565b80548015613726575f1901906137418282612997565b81549060018060a01b039060031b1b1916905555565b6001600160a01b0381165f908152600760205260408120805490949193849391845b818110613836575b50505090919280948161382c575b506137975750565b6008545f5b8181106137a857505050565b6137b6610eba826008612997565b6001600160a01b038481169116146137d05760010161379c565b915061381d9293506137f1610eba6137ea6137f993612f06565b6008612997565b916008612997565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b613827600861372b565b600190565b905054155f61378f565b613843610923828a61071d565b6001600160e01b031984811691161461385e57600101613779565b91506138a4929394955061388061092361387a61388793612f06565b8961071d565b918761071d565b90919063ffffffff83549160031b9260e01c831b921b1916179055565b6138ad846136fd565b60019291905f8080613781565b90815491600160401b8310156123a757826138879160016123f79501815561071d565b905f906001600160a01b038316156131d4576001600160a01b0383165f908152600760205260409020805493841561395e575b505f5b84811061392c57506139269293506138ba565b90600190565b613939610923828461071d565b6001600160e01b031984811691161461395457600101613913565b5050509050905f90565b600854919350600160401b8210156123a7576137f982600161398594016008556008612997565b6001915f613910565b60405160208101915f8352602182015260218152612fa96041826123c7565b90604051906020820192600160f81b84526021830152604182015260418152612fa96061826123c756fe9b02e42a9b92e93607133334d133e31dc3f904c7156cf846526371c09ab4c5b2cab4d17318aeaabb38cce9d7872ecfed2752c05570a4e2c3cf99e5dc5552efef1a93b80846506ef135d1d062834caa1099b42cc3eab0b329c7dc3b52117b9361a2646970667358221220739ba2198baa2216893a7106d692e6ffb328611c842a99ba18502080c55110d764736f6c634300081e0033";

type ManifestDispatcherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ManifestDispatcherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ManifestDispatcher__factory extends ContractFactory {
  constructor(...args: ManifestDispatcherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    admin: AddressLike,
    activationDelaySeconds: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      admin,
      activationDelaySeconds,
      overrides || {}
    );
  }
  override deploy(
    admin: AddressLike,
    activationDelaySeconds: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      admin,
      activationDelaySeconds,
      overrides || {}
    ) as Promise<
      ManifestDispatcher & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ManifestDispatcher__factory {
    return super.connect(runner) as ManifestDispatcher__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ManifestDispatcherInterface {
    return new Interface(_abi) as ManifestDispatcherInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ManifestDispatcher {
    return new Contract(address, _abi, runner) as unknown as ManifestDispatcher;
  }
}

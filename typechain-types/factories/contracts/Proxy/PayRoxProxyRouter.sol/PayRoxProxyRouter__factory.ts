/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  PayRoxProxyRouter,
  PayRoxProxyRouterInterface,
} from "../../../../contracts/Proxy/PayRoxProxyRouter.sol/PayRoxProxyRouter";

const _abi = [
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "BatchReentrancy",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSize",
        type: "uint256",
      },
    ],
    name: "BatchTooLarge",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "actual",
        type: "bytes32",
      },
    ],
    name: "DispatcherCodehashMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "DispatcherZero",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyBatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "ForbiddenSelector",
    type: "error",
  },
  {
    inputs: [],
    name: "FrozenRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dispatcher",
        type: "address",
      },
    ],
    name: "IncompatibleDispatcher",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNewOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotGovernor",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPendingOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Paused",
    type: "error",
  },
  {
    inputs: [],
    name: "Reentrancy",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "callCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "BatchExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldCodehash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newCodehash",
        type: "bytes32",
      },
    ],
    name: "DispatcherCodehashSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldDispatcher",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newDispatcher",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "codehash",
        type: "bytes32",
      },
    ],
    name: "DispatcherUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Frozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "l2Messenger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "l1Governor",
        type: "address",
      },
    ],
    name: "L2GovernorConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dispatcher",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "dispatcherCodehash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "strictCodehash",
        type: "bool",
      },
    ],
    name: "PayRoxProxyRouterInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "forbidden",
        type: "bool",
      },
    ],
    name: "SelectorsForbidden",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "StrictCodehashSet",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MAX_BATCH_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
    ],
    name: "batchCallSameFunction",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "selector",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct BatchCall[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "batchExecute",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dispatcher",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dispatcherCodehash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeze",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "frozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveManifestRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getRoute",
    outputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "codehash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "dispatcher_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "expectedCodehash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "strictCodehash_",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "initSalt",
        type: "bytes32",
      },
    ],
    name: "initializeProxyRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isDispatcherFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "isForbidden",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2Messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dispatcher_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "expectedCodehash",
        type: "bytes32",
      },
    ],
    name: "setDispatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32",
      },
    ],
    name: "setDispatcherCodehash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
      {
        internalType: "bool",
        name: "forbidden",
        type: "bool",
      },
    ],
    name: "setForbiddenSelectors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "l2Messenger_",
        type: "address",
      },
      {
        internalType: "address",
        name: "l1Governor_",
        type: "address",
      },
    ],
    name: "setL2Governor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused_",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setStrictCodehash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strictCodehash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60808060405234601557611ad6908161001a8239f35b5f80fdfe6080604052600436101561001d575b3661175a5761001b61173f565b005b5f3560e01c806304a49dde146101cc578063054f7d9c146101c75780630729d1ce146101c25780630d13cfb6146101bd578063123d0464146101b857806316c38b3c146101b35780631a6e649e146101ae5780631c62af52146101a957806334ef0d8e146101a45780635c975abb1461019f57806362a5af3b1461019a578063715018a61461019557806379ba5097146101905780638da5cb5b1461018b57806399e2a2ff14610186578063ad61b54114610181578063b9175b851461017c578063b925013514610177578063c1cda55e14610172578063cb7e90571461016d578063cfdbf25414610168578063d6e5db0f14610163578063e30c39781461015e578063ea62ee1214610159578063f2fde38b14610154578063f5730a721461014f5763ff1fd66e0361000e57611280565b61124c565b6111a7565b61117e565b61114a565b611089565b61106e565b61103a565b610fb1565b610f26565b610d0f565b610cd0565b610c37565b610c03565b610b5b565b610ae6565b610a79565b610a48565b610a01565b610836565b610779565b6106f2565b6106c2565b610447565b6102cc565b610260565b3461025c575f36600319011261025c575f516020611a615f395f51905f525460405163abb2efdf60e01b815290602090829060049082906001600160a01b03165afa908115610257575f91610228575b50604051908152602090f35b61024a915060203d602011610250575b61024281836113ca565b8101906113f1565b5f61021c565b503d610238565b611400565b5f80fd5b3461025c575f36600319011261025c57602060ff5f5160206119e15f395f51905f525460101c166040519015158152f35b9181601f8401121561025c5782359167ffffffffffffffff831161025c576020808501948460051b01011161025c57565b8015150361025c57565b3461025c57604036600319011261025c5760043567ffffffffffffffff811161025c576102fd903690600401610291565b6024359161030a836102c2565b61031333611836565b156103af576103e88211610396575f5b8281101561035f57600190610359856103486103438460051b870161141f565b61142c565b9060ff801983541691151516179055565b01610323565b506103917faf8985cdfaa296b885fdd0a2d9f56c5ad7eff0d4b1df1a4e4a46c602f07d613b936040519384938461148c565b0390a1005b5063bb1cb70b60e01b5f526004526103e860245260445ffd5b633b8d9d7560e21b5f5260045ffd5b6001600160e01b031981160361025c57565b602081016020825282518091526040820191602060408360051b8301019401925f915b83831061040257505050505090565b909192939460208080600193603f19868203018752818a518051918291828552018484015e5f828201840152601f01601f1916010197019594919091019201906103f3565b3461025c57604036600319011261025c57600435610464816103be565b60243567ffffffffffffffff811161025c57610484903690600401610291565b90915f5160206119e15f395f51905f52546104a38160ff9060081c1690565b6106b357601881901c60ff1680156106a5575b610696578215610687576032831161066e576104db6104d48361142c565b5460ff1690565b6106515760ff166105fa575b6104f0826114fb565b925a916104fb611544565b610503611598565b5f5b84811061056b57610567867f2403003b183ff811dedab647749b7525f94e39ff05e4a7b4f02743c21b6c1622878761053b611571565b6105436115c7565b5a60408051938452910360208301524290820152606090a1604051918291826103d0565b0390f35b6105bc61059f61057c838887611622565b91906105916040519384928860208501611642565b03601f1981018352826113ca565b5f516020611a615f395f51905f52546001600160a01b031661194e565b90156105e257906001916105d08289611662565b526105db8188611662565b5001610505565b6105ea611571565b6105f26115c7565b602081519101fd5b5f516020611a415f395f51905f525480610615575b506104e7565b5f516020611a615f395f51905f52546001600160a01b03163f9080820361063c575061060f565b633b1ba18960e21b5f5260045260245260445ffd5b6327fe336560e21b5f526001600160e01b0319821660045260245ffd5b63bb1cb70b60e01b5f526004839052603260245260445ffd5b63c2e5347d60e01b5f5260045ffd5b63558a1e0360e11b5f5260045ffd5b50602081901c60ff166104b6565b6313d0ff5960e31b5f5260045ffd5b3461025c57602036600319011261025c57602060ff6106e6600435610343816103be565b54166040519015158152f35b3461025c57602036600319011261025c5760043561070f816102c2565b61071833611836565b156103af5760207f40db37ff5c0bdc2c427fbb2078c8f24afea940abac0e3c23bb4ea3bf2da2b2129115155f5160206119e15f395f51905f525461ff008260081b169061ff001916175f5160206119e15f395f51905f5255604051908152a1005b3461025c57602036600319011261025c57600435610796816103be565b5f516020611a615f395f51905f5254604080516351c7094f60e01b81526001600160e01b0319909316600484015290829060249082906001600160a01b03165afa908115610257575f905f92610804575b50604080516001600160a01b039290921682526020820192909252f35b9050610828915060403d60401161082f575b61082081836113ca565b810190611676565b905f6107e7565b503d610816565b3461025c57602036600319011261025c5760043567ffffffffffffffff811161025c57610867903690600401610291565b5f5160206119e15f395f51905f5254600881901c60ff166106b357601881901c60ff1680156109f3575b61069657811561068757603282116109da5760ff16610998575b6108b4816114fb565b915a906108bf611544565b6108c7611598565b5f5b8381106108ff57610567857f2403003b183ff811dedab647749b7525f94e39ff05e4a7b4f02743c21b6c1622868661053b611571565b61091261090d828685611695565b61141f565b61091e6104d48261142c565b61097c5761059161059f6109569261094461093a868a89611695565b60208101906115ef565b60409491945194859360208501611642565b90156105e2579060019161096a8288611662565b526109758187611662565b50016108c9565b6327fe336560e21b5f526001600160e01b03191660045260245ffd5b5f516020611a415f395f51905f5254806109b3575b506108ab565b5f516020611a615f395f51905f52546001600160a01b03163f9080820361063c57506109ad565b63bb1cb70b60e01b5f526004829052603260245260445ffd5b50602081901c60ff16610891565b3461025c575f36600319011261025c577f33ae63e241c61ef0943c007e4f9cfac6915b02021dcc9b3cab93785eef505a71546040516001600160a01b039091168152602090f35b3461025c575f36600319011261025c57602060ff5f5160206119e15f395f51905f525460081c166040519015158152f35b3461025c575f36600319011261025c57610a9233611836565b156103af576201000062ff0000195f5160206119e15f395f51905f525416175f5160206119e15f395f51905f52557fa8cab3d1893ed53071b052fafa843143492f25d1d6b0170d460789f7ab1954be5f80a1005b3461025c575f36600319011261025c57610aff33611836565b156103af575f516020611a015f395f51905f5280546001600160a01b031981169091555f906001600160a01b0316610b356116b7565b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461025c575f36600319011261025c575f516020611a815f395f51905f52546001600160a01b031633819003610bf4575f516020611a015f395f51905f52546001600160a01b031690610bad906116d5565b610bb56116b7565b5f516020611a015f395f51905f52546001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b630614e5c760e21b5f5260045ffd5b3461025c575f36600319011261025c575f516020611a015f395f51905f52546040516001600160a01b039091168152602090f35b3461025c575f36600319011261025c575f516020611a615f395f51905f5254604051630153df6760e21b815290602090829060049082906001600160a01b03165afa8015610257575f90610c93575b6040519015158152602090f35b506020813d602011610cc8575b81610cad602093836113ca565b8101031261025c576105679051610cc3816102c2565b610c86565b3d9150610ca0565b3461025c575f36600319011261025c57602060ff5f5160206119e15f395f51905f5254166040519015158152f35b6001600160a01b0381160361025c57565b3461025c5760a036600319011261025c57600435610d2c81610cfe565b602435610d3881610cfe565b60643590604435610d48836102c2565b5f516020611a015f395f51905f5254608435906001600160a01b0316610f18577f7d7b12cc7117653f072ed8bfe764f73f22d6419bfef921866486add91fe4148803610f09576001600160a01b03821615610efa57610dce82610de495610db1610ddf9561197c565b6001600160a01b038116610ef15750610dc9336116d5565b61170a565b5f516020611a415f395f51905f5255565b611462565b610e0c61ff00195f5160206119e15f395f51905f5254165f5160206119e15f395f51905f5255565b610e3562ff0000195f5160206119e15f395f51905f5254165f5160206119e15f395f51905f5255565b610e3d611571565b610e456115c7565b5f516020611a015f395f51905f52547f5532c4c11a5414a133c3fbd4b41f4234de11dd433a8db193ad6854378cbf00f2906001600160a01b03165f516020611a615f395f51905f52546001600160a01b0316906103915f516020611a415f395f51905f5254610ec25f5160206119e15f395f51905f525460ff1690565b604080516001600160a01b03958616815295909416602086015292840152901515606083015281906080820190565b610dc9906116d5565b63433f963360e11b5f5260045ffd5b6330cd747160e01b5f5260045ffd5b62dc149f60e41b5f5260045ffd5b3461025c57602036600319011261025c57600435610f43816102c2565b610f4c33611836565b156103af5760ff5f5160206119e15f395f51905f525460101c16610fa257602081610f977fc92775c4b27f81e1bbd67f1d8dac03260d4d9aa33dbd88252ac151d04abca95c93611462565b6040519015158152a1005b63277a2aa960e21b5f5260045ffd5b3461025c57602036600319011261025c57600435610fce33611836565b156103af5760ff5f5160206119e15f395f51905f525460101c16610fa2575f516020611a415f395f51905f528054908290556040805191825260208201929092527f256cf243b8b676b7c275e8535144b46b3182a083ad5bdae24c7a9d56d09cdc849181908101610391565b3461025c575f36600319011261025c575f516020611a615f395f51905f52546040516001600160a01b039091168152602090f35b3461025c575f36600319011261025c57602060405160328152f35b3461025c57604036600319011261025c576004356110a681610cfe565b602435906110b333611836565b156103af5760ff5f5160206119e15f395f51905f525460101c16610fa2576001600160a01b038116918215610efa5760207f6de3bad16508c7f8935b97ae9494d3ee63a1b0968a031c4e087b107a67c0fb239161110f8461197c565b5f516020611a615f395f51905f52546001600160a01b0316936111319061170a565b805f516020611a415f395f51905f5255604051908152a3005b3461025c575f36600319011261025c575f516020611a815f395f51905f52546040516001600160a01b039091168152602090f35b3461025c575f36600319011261025c5760205f516020611a415f395f51905f5254604051908152f35b3461025c57602036600319011261025c576004356111c481610cfe565b6111cd33611836565b156103af576001600160a01b0316801561123d575f516020611a815f395f51905f5280546001600160a01b031916821790555f516020611a015f395f51905f52546001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b632a52b3c360e11b5f5260045ffd5b3461025c575f36600319011261025c575f516020611a215f395f51905f52546040516001600160a01b039091168152602090f35b3461025c57604036600319011261025c5760043561129d81610cfe565b602435906112aa82610cfe565b5f516020611a015f395f51905f52546001600160a01b03163303610f095760ff5f5160206119e15f395f51905f525460101c16610fa2576001600160a01b038116801580156113a5575b61123d577fdfcbc37e8d048094c7dd4ed49fff26f7805ba0adc498858866f1de9ee82f45629261135560409360018060a01b03166001600160601b0360a01b5f516020611a215f395f51905f525416175f516020611a215f395f51905f5255565b7f33ae63e241c61ef0943c007e4f9cfac6915b02021dcc9b3cab93785eef505a7180546001600160a01b0319166001600160a01b03831617905582519182526001600160a01b03166020820152a1005b506001600160a01b038316156112f4565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff8211176113ec57604052565b6113b6565b9081602091031261025c575190565b6040513d5f823e3d90fd5b634e487b7160e01b5f52603260045260245ffd5b35611429816103be565b90565b63ffffffff60e01b165f527f33ae63e241c61ef0943c007e4f9cfac6915b02021dcc9b3cab93785eef505a6f60205260405f2090565b60ff80195f5160206119e15f395f51905f52541691151516175f5160206119e15f395f51905f5255565b604080825281018390529293929160608301905f5b8181106114b657505060209150931515910152565b909160208060019286356114c9816103be565b6001600160e01b03191681529190950194019291016114a1565b67ffffffffffffffff81116113ec5760051b60200190565b90611505826114e3565b61151260405191826113ca565b8281528092611523601f19916114e3565b01905f5b82811061153357505050565b806060602080938501015201611527565b630100000063ff000000195f5160206119e15f395f51905f525416175f5160206119e15f395f51905f5255565b63ff000000195f5160206119e15f395f51905f5254165f5160206119e15f395f51905f5255565b64010000000064ff00000000195f5160206119e15f395f51905f525416175f5160206119e15f395f51905f5255565b64ff00000000195f5160206119e15f395f51905f5254165f5160206119e15f395f51905f5255565b903590601e198136030182121561025c570180359067ffffffffffffffff821161025c5760200191813603831361025c57565b9082101561163d576116399160051b8101906115ef565b9091565b61140b565b6001600160e01b031990911681526004929182908483013701015f815290565b805182101561163d5760209160051b010190565b919082604091031261025c576020825161168f81610cfe565b92015190565b919081101561163d5760051b81013590603e198136030182121561025c570190565b5f516020611a815f395f51905f5280546001600160a01b0319169055565b60018060a01b03166001600160601b0360a01b5f516020611a015f395f51905f525416175f516020611a015f395f51905f5255565b60018060a01b03166001600160601b0360a01b5f516020611a615f395f51905f525416175f516020611a615f395f51905f5255565b60ff5f5160206119e15f395f51905f525460081c166106b357565b5f5160206119e15f395f51905f525460ff8160201c166106965764ff000000001916640100000000175f5160206119e15f395f51905f52819055600881901c60ff166106b3575f3560e01c6117b16104d48261142c565b61097c57505f516020611a615f395f51905f52546001600160a01b03169060ff166117f6575b5f8060405192368285378336915af4903d91825f833e156117f457f35bfd5b5f516020611a415f395f51905f525480611811575b506117d7565b813f9080820361063c575061180b565b9081602091031261025c575161142981610cfe565b5f516020611a015f395f51905f52546001600160a01b0391821691168114611948575f516020611a215f395f51905f52546001600160a01b03169081148181611935575b5061188457505f90565b6004906020906001600160a01b0316604051636e296e4560e01b815292839182905afa5f9181611904575b506118b957505f90565b7f33ae63e241c61ef0943c007e4f9cfac6915b02021dcc9b3cab93785eef505a71546001600160a01b039081169116811490816118f4575090565b6001600160a01b03161515919050565b61192791925060203d60201161192e575b61191f81836113ca565b810190611821565b905f6118af565b503d611915565b6001600160a01b0316151590505f61187a565b50600190565b5f809183519060206040519501905af49160203d928093808252805f8484013e601f01601f19160101604052565b60405163abb2efdf60e01b81526001600160a01b03919091169190602081600481865afa90816119c3575b506119bf57506379bd133960e01b5f5260045260245ffd5b9050565b6119db9060203d6020116102505761024281836113ca565b6119a756fe33ae63e241c61ef0943c007e4f9cfac6915b02021dcc9b3cab93785eef505a6e33ae63e241c61ef0943c007e4f9cfac6915b02021dcc9b3cab93785eef505a6a33ae63e241c61ef0943c007e4f9cfac6915b02021dcc9b3cab93785eef505a7033ae63e241c61ef0943c007e4f9cfac6915b02021dcc9b3cab93785eef505a6d33ae63e241c61ef0943c007e4f9cfac6915b02021dcc9b3cab93785eef505a6c33ae63e241c61ef0943c007e4f9cfac6915b02021dcc9b3cab93785eef505a6ba2646970667358221220c7135b1d4c2c0d10f884f93e85cb745e4104ee0b5a8c736ae06982b4c46b5a6164736f6c634300081e0033";

type PayRoxProxyRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PayRoxProxyRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PayRoxProxyRouter__factory extends ContractFactory {
  constructor(...args: PayRoxProxyRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PayRoxProxyRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PayRoxProxyRouter__factory {
    return super.connect(runner) as PayRoxProxyRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PayRoxProxyRouterInterface {
    return new Interface(_abi) as PayRoxProxyRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PayRoxProxyRouter {
    return new Contract(address, _abi, runner) as unknown as PayRoxProxyRouter;
  }
}

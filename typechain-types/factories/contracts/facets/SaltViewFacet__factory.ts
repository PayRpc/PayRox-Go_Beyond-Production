/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SaltViewFacet,
  SaltViewFacetInterface,
} from "../../../contracts/facets/SaltViewFacet";

const _abi = [
  {
    inputs: [],
    name: "eip2470",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    name: "factorySalt",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "hashInitCode",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "initCodeHash",
        type: "bytes32",
      },
    ],
    name: "predictCreate2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "crossNonce",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    name: "universalSalt",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346015576103e7908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c908163279e8f3e146102c5575080633bef06b41461022e5780636a9f1e16146101195780638e6a2c1d146100ce5763eb117be814610053575f80fd5b346100ca5760603660031901126100ca57602061006e61031f565b604051908282019060ff60f81b82526bffffffffffffffffffffffff199060601b16602183015260243560358301526044356055830152605582526100b4607583610335565b905190206040516001600160a01b039091168152f35b5f80fd5b346100ca5760203660031901126100ca5760043567ffffffffffffffff81116100ca5761010b61010460209236906004016102f1565b369161036b565b818151910120604051908152f35b346100ca5760803660031901126100ca5761013261031f565b60243567ffffffffffffffff81116100ca576101529036906004016102f1565b919060643567ffffffffffffffff81116100ca576020610193819561018b6101816102239536906004016102f1565b969092369161036b565b94369161036b565b93601482806040516101a6604082610335565b60138152019672506179526f7843726f7373436861696e3a763160681b885260338260405198899660138389019c8d5e60601b6bffffffffffffffffffffffff191687840152805191829101604788015e8501019060443584830152805192839101603483015e01015f838201520301601f198101835282610335565b519020604051908152f35b346100ca5760203660031901126100ca5760043567ffffffffffffffff81116100ca5761026461010460209236906004016102f1565b8161022381604051610277604082610335565b6010815201926f506179526f78466163746f72793a763160801b84526030604051938492601082850197885e8284015f8152815192839201905e8201015f815203601f198101835282610335565b346100ca575f3660031901126100ca5780734e59b44847b379578588920ca78fbf26c0b4956c60209252f35b9181601f840112156100ca5782359167ffffffffffffffff83116100ca57602083818601950101116100ca57565b600435906001600160a01b03821682036100ca57565b90601f8019910116810190811067ffffffffffffffff82111761035757604052565b634e487b7160e01b5f52604160045260245ffd5b92919267ffffffffffffffff82116103575760405191610395601f8201601f191660200184610335565b8294818452818301116100ca578281602093845f96013701015256fea2646970667358221220fa3c2266e0c9e58fe8f3bbfac7db3b4d76257b3c50d37fd254c7bc4639232dea64736f6c634300081e0033";

type SaltViewFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SaltViewFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SaltViewFacet__factory extends ContractFactory {
  constructor(...args: SaltViewFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SaltViewFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SaltViewFacet__factory {
    return super.connect(runner) as SaltViewFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SaltViewFacetInterface {
    return new Interface(_abi) as SaltViewFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SaltViewFacet {
    return new Contract(address, _abi, runner) as unknown as SaltViewFacet;
  }
}

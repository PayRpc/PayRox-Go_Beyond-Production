/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ExampleFacetA,
  ExampleFacetAInterface,
} from "../../../contracts/facets/ExampleFacetA";

const _abi = [
  {
    inputs: [],
    name: "DataTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyData",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMessage",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKey",
    type: "error",
  },
  {
    inputs: [],
    name: "Paused",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyMessages",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "messageCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "packedMetadata",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "BatchExecutedOptimized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "setter",
        type: "address",
      },
    ],
    name: "DataStored",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "FacetAExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "msgHash",
        type: "bytes32",
      },
    ],
    name: "FacetAExecutedHash",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "messages",
        type: "string[]",
      },
    ],
    name: "batchExecute",
    outputs: [
      {
        internalType: "bool[]",
        name: "results",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "calculateHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "executeA",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFacetInfo",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastCaller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "storeData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalExecutions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "expectedSigner",
        type: "address",
      },
    ],
    name: "verifySignature",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610efd908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806303e8837c14610b1c5780632113522a14610ad557806324d824cb14610a9257806331cd419914610a3557806354f6127f1461090b578063642f7d5e146108e25780637ab7b94b146107045780639730174d146104b1578063b5211ec41461036e5763bdb475b814610087575f80fd5b3461036a57602036600319011261036a576004356001600160401b03811161036a573660238201121561036a578060040135906001600160401b03821161036a576024810190602436918460051b01011161036a5760ff7f9b02e42a9b92e93607133334d133e31dc3f904c7156cf846526371c09ab4c5b2541661035b57811561034c57600a821161033d5761011c82610d14565b9161012a6040519384610bdd565b80835261013681610d14565b602084019290601f190136843761014c82610d14565b9161015a6040519384610bdd565b808352601f1961016982610d14565b013660208501375a915f5b82811061027357505061018633610d3f565b5f928051600481105f1461026b575b5f915b818310610242575050505a820391821161022e5760809085937fcdb4ed3e5ec53c14085bc1ef8a5b656bb1d3ced5855695a85d8e42820f9fef259360405192835260208301526040820152426060820152a1604051918291602083019060208452518091526040830191905f5b818110610213575050500390f35b82511515845285945060209384019390920191600101610205565b634e487b7160e01b5f52601160045260245ffd5b9091946001906001600160401b0361025a8885610d2b565b51168760061b1b1795019190610198565b506004610195565b806102816001928585610d9f565b15905061032c576001600160401b0361029b828686610d9f565b9050166102a88288610d2b565b526102b233610ba5565b828154019055815f516020610ea85f395f51905f5254015f516020610ea85f395f51905f52556102ed6102e6828686610d9f565b3691610bfe565b60208151910120337f6ff2fae33162daee175ec7ec71a83661d5a0a19249ce40d3de3c4001c86c586b5f80a381610324828a610d2b565b525b01610174565b5f610337828a610d2b565b52610326565b631ec0b2f760e01b5f5260045ffd5b63017636cb60e71b5f5260045ffd5b6313d0ff5960e31b5f5260045ffd5b5f80fd5b3461036a57602036600319011261036a576004356001600160401b03811161036a5761039e903690600401610b54565b60ff7f9b02e42a9b92e93607133334d133e31dc3f904c7156cf846526371c09ab4c5b2541661035b57801561034c5761040081116104a25760209161046d916103e633610ba5565b6001815401905560015f516020610ea85f395f51905f5254015f516020610ea85f395f51905f525561041733610d3f565b5f60405185815282868201528284604083013781604084830101527f52230493755cb5cebbdbb65057f8ed8fca9e062e50f03f039b2e7a84d378afaf3391604081601f19601f8801168101030190a33691610bfe565b81815191012060405190337f6ff2fae33162daee175ec7ec71a83661d5a0a19249ce40d3de3c4001c86c586b5f80a360018152f35b632a77a3f760e11b5f5260045ffd5b3461036a57604036600319011261036a576004356024356001600160401b03811161036a576104e4903690600401610b54565b909160ff7f9b02e42a9b92e93607133334d133e31dc3f904c7156cf846526371c09ab4c5b2541661035b5780156106f55781156106e65761100082116104a2576040513360601b6bffffffffffffffffffffffff191660208201908152603482019290925261056081605481015b03601f198101835282610bdd565b519020805f527fb81528f1544d013fd9906e7d298b2564a1a1cfd25df53ef606babf888d101a5e60205260405f20926001600160401b0383116106d2576105a78454610cdc565b601f811161068d575b505f93601f841160011461062857836105e79394955f9161061d575b508560011b905f198760031b1c19161790555b833691610bfe565b60208151910120906040519283527f9c127bb6a78710646dc639c8dce00540002bcffb57abdb1382c055c44ee7071460203394a4005b9050820135866105cc565b601f19841694815f5260205f20905f5b8781106106755750856105e79596971061065c575b5050600185811b0190556105df565b8301355f19600388901b60f8161c19169055858061064d565b90916020600181928588013581550193019101610638565b845f5260205f20601f850160051c810191602086106106c8575b601f0160051c01905b8181106106bd57506105b0565b5f81556001016106b0565b90915081906106a7565b634e487b7160e01b5f52604160045260245ffd5b6399d8fec960e01b5f5260045ffd5b630eda9c3d60e31b5f5260045ffd5b3461036a575f36600319011261036a5760408051906107238183610bdd565b600d82526c4578616d706c6546616365744160981b602083015280519061074a8183610bdd565b60058252640312e312e360dc1b602083015261016091815161076c8482610bdd565b600a81526020810193601f19013685378051156108ce57632d4847b160e21b84528051600110156108ce57639730174d60e01b818401528051600210156108ce576354f6127f60e01b60608201528051600310156108ce5762fa20df60e21b60808201528051600410156108ce576317b68eb760e31b60a08201528051600510156108ce576324d824cb60e01b60c08201528051600610156108ce576331cd419960e01b60e08201528051600710156108ce57633217beaf60e11b6101008201528051600810156108ce57631089a91560e11b6101208201528051600910156108ce57637ab7b94b60e01b610140820152825160608082529095869594936020939261088b9261087e91890190610b81565b9087820385890152610b81565b928584039086015251918281520191905f5b8181106108ab575050500390f35b82516001600160e01b03191684528594506020938401939092019160010161089d565b634e487b7160e01b5f52603260045260245ffd5b3461036a575f36600319011261036a5760205f516020610ea85f395f51905f5254604051908152f35b3461036a57602036600319011261036a576040513360601b6bffffffffffffffffffffffff19166020820190815260043560348301529061094f8160548101610552565b5190205f527fb81528f1544d013fd9906e7d298b2564a1a1cfd25df53ef606babf888d101a5e60205260405f20604051905f9080549061098e82610cdc565b8085529160018116908115610a0e57506001146109ce575b6109ca846109b681860382610bdd565b604051918291602083526020830190610b81565b0390f35b5f90815260208120939250905b8082106109f4575090915081016020016109b6826109a6565b9192600181602092548385880101520191019092916109db565b60ff191660208087019190915292151560051b850190920192506109b691508390506109a6565b3461036a57606036600319011261036a576024356001600160401b03811161036a57610a65903690600401610b54565b906044356001600160a01b038116810361036a57602092610a8892600435610c43565b6040519015158152f35b3461036a57602036600319011261036a576004356001600160401b03811161036a57610ac76102e66020923690600401610b54565b818151910120604051908152f35b3461036a575f36600319011261036a577fb81528f1544d013fd9906e7d298b2564a1a1cfd25df53ef606babf888d101a61546040516001600160a01b039091168152602090f35b3461036a57602036600319011261036a576004356001600160a01b038116810361036a57610b4b602091610ba5565b54604051908152f35b9181601f8401121561036a578235916001600160401b03831161036a576020838186019501011161036a57565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6001600160a01b03165f9081527fb81528f1544d013fd9906e7d298b2564a1a1cfd25df53ef606babf888d101a5f6020526040902090565b90601f801991011681019081106001600160401b038211176106d257604052565b9291926001600160401b0382116106d25760405191610c27601f8201601f191660200184610bdd565b82948184528183011161036a578281602093845f960137010152565b6001600160a01b03909316929091908315610cd457610c9892610c92917f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f52601c52603c5f20923691610bfe565b90610de0565b506004819392931015610cc057159182610cb157505090565b6001600160a01b031614919050565b634e487b7160e01b5f52602160045260245ffd5b505050505f90565b90600182811c92168015610d0a575b6020831014610cf657565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610ceb565b6001600160401b0381116106d25760051b60200190565b80518210156108ce5760209160051b010190565b60018060a01b03166bffffffffffffffffffffffff60a01b7fb81528f1544d013fd9906e7d298b2564a1a1cfd25df53ef606babf888d101a615416177fb81528f1544d013fd9906e7d298b2564a1a1cfd25df53ef606babf888d101a6155565b91908110156108ce5760051b81013590601e198136030182121561036a5701908135916001600160401b03831161036a57602001823603811361036a579190565b8151919060418303610e1057610e099250602082015190606060408401519301515f1a90610e1a565b9192909190565b50505f9160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610e9c579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610e91575f516001600160a01b03811615610e8757905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f916003919056feb81528f1544d013fd9906e7d298b2564a1a1cfd25df53ef606babf888d101a60a2646970667358221220da13513ae93c682a0a8a99fe54ce6bdb2b69b348988b230aed0ecd5eba80e3f364736f6c634300081e0033";

type ExampleFacetAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleFacetAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleFacetA__factory extends ContractFactory {
  constructor(...args: ExampleFacetAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ExampleFacetA & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ExampleFacetA__factory {
    return super.connect(runner) as ExampleFacetA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleFacetAInterface {
    return new Interface(_abi) as ExampleFacetAInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ExampleFacetA {
    return new Contract(address, _abi, runner) as unknown as ExampleFacetA;
  }
}

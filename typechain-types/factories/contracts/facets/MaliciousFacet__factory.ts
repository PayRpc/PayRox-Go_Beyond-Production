/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MaliciousFacet,
  MaliciousFacetInterface,
} from "../../../contracts/facets/MaliciousFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dispatcher",
        type: "address",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610339908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f5f3560e01c63d018db3e14610025575f80fd5b34610296576020366003190112610296576004356001600160a01b038116908190036102965760405190602061005b818461029a565b5f83525f36813760405161006f828261029a565b5f81525f36813760405191610084818461029a565b5f83525f36813760405191610099828461029a565b5f835281830192604051916100ae848461029a565b5f835283830195873b156102965760405163575d748760e01b815260a06004820152895160a4820181905290998a989796959493929160c48a01918701905f5b818110610275575050508881036003190160248a01528251808252908601928601905f5b8181106102555750505087820360031901604489015261013291906102d0565b906003198783030160648801525180825283820191848260051b82010195925f915b83831061021f575050505050600319858403016084860152519081835280830192818360051b82010194935f915b8483106101bc578a885f81808b0381838f5af180156101b1576101a3575080f35b6101af91505f9061029a565b005b6040513d5f823e3d90fd5b91939583959750601f939193198382030184528751908280835192838152019201905f905b808210610204575050509080600192980193019301909288969593949294610182565b919380600192948651151581520194019201879392916101e1565b9193979850919394958680610240600193601f198682030187528b516102d0565b99019301930190928a98979695949293610154565b82516001600160a01b031685528c9a509387019391870191600101610112565b82516001600160e01b03191684528d9b5092880192918801916001016100ee565b5f80fd5b90601f8019910116810190811067ffffffffffffffff8211176102bc57604052565b634e487b7160e01b5f52604160045260245ffd5b90602080835192838152019201905f5b8181106102ed5750505090565b82518452602093840193909201916001016102e056fea2646970667358221220c171da5b2f8353fb44019d063324b33835a2fe7a18b5d60b199ebec174aec4a064736f6c634300081e0033";

type MaliciousFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MaliciousFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MaliciousFacet__factory extends ContractFactory {
  constructor(...args: MaliciousFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MaliciousFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MaliciousFacet__factory {
    return super.connect(runner) as MaliciousFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaliciousFacetInterface {
    return new Interface(_abi) as MaliciousFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MaliciousFacet {
    return new Contract(address, _abi, runner) as unknown as MaliciousFacet;
  }
}

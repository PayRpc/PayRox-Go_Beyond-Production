/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ExampleFacetB,
  ExampleFacetBInterface,
} from "../../../contracts/facets/ExampleFacetB";

const _abi = [
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "DataTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyBatch",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyData",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpiredSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOperationType",
    type: "error",
  },
  {
    inputs: [],
    name: "LengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "Paused",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyOperations",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "operationCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "successCount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "BatchOperationCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "operationType",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
    ],
    name: "FacetBExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldGovernance",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGovernance",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "GovernanceRotated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "OperatorRotated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
    ],
    name: "PausedSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "changer",
        type: "address",
      },
    ],
    name: "StateChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "operations",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "dataArray",
        type: "bytes[]",
      },
    ],
    name: "batchExecuteB",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "results",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "inputs",
        type: "uint256[]",
      },
    ],
    name: "complexCalculation",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "operationType",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeB",
    outputs: [
      {
        internalType: "bytes32",
        name: "operationId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdvancedAnalytics",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalOps",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "lastExecutor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isPaused",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isInitialized",
        type: "bool",
      },
      {
        internalType: "address",
        name: "operatorAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "governanceAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFacetInfoB",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getGovernance",
    outputs: [
      {
        internalType: "address",
        name: "governance",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInitNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "operationId",
        type: "bytes32",
      },
    ],
    name: "getOperation",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "operationType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "executor",
            type: "address",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct ExampleFacetB.OperationData",
        name: "operation",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStateSummary",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "operations",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserOperations",
    outputs: [
      {
        internalType: "uint256[]",
        name: "operationTypes",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserStatistics",
    outputs: [
      {
        internalType: "uint256",
        name: "totalUserOps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mostRecentOp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "uniqueOpTypes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
      {
        internalType: "address",
        name: "governance_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "initializeFacetB",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGovernance",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "rotateGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "rotateOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "operationType",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "simulateOperation",
    outputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasEstimate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "operationType",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "validateOperation",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reason",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460155761214a908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c80630af73309146118b45780630e7d1d931461175a578063279412c5146115a2578063289b3c0d1461156e57806331e8c195146114d257806337184e951461115d5780633c7264b214610f025780635aa723df146107cd5780637c300fd11461075a578063a83583e91461061d578063a8ced94814610566578063c15a59e21461040f578063c66b4f23146103e6578063e2ab79b114610381578063e9e831d7146100f45763ea83977f146100c9575f80fd5b346100f05760406100e26100dc366119e9565b91611e32565b825191151582526020820152f35b5f80fd5b346100f05760803660031901126100f05761010d611a1c565b6024356001600160a01b0381168082036100f0576044356064356001600160401b0381116100f0576101439036906004016119bc565b6001600160a01b0386169390918415610372578115610372578342116103635760ff5f5160206120f55f395f51905f525460a01c16610355576102c9936102a96102b76102c29460405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527fcbc2cb754fa3126e308cc56ba5ea6282e2635658601ef386ed098643478ffbb560408201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260a0815261021c60c082611bb8565b519020935f5160206120d55f395f51905f52546040519160208301937ff7517e1dbb7a2bcbdd3b044779543ab804885b4fb56b565c74a42624613d36c885528c60408501526060840152608083015260a082015260a0815261027f60c082611bb8565b519020604051928391602083019586909160429261190160f01b8352600283015260228201520190565b03601f198101835282611bb8565b519020923691611bf4565b9084611e79565b15610346576103036040926102fe7f25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce7995611c2a565b611c5f565b5f5160206120f55f395f51905f52805460ff60a01b1916600160a01b1790555f5160206120d55f395f51905f5280546001019081905582519182526020820152a1005b6305a562b960e21b5f5260045ffd5b62dc149f60e41b5f5260045ffd5b63df4cc36d60e01b5f5260045ffd5b63d92e233d60e01b5f5260045ffd5b346100f05760203660031901126100f0576103a261039d611a1c565b611d65565b6040518091602082016020835281518091526020604084019201905f5b8181106103cd575050500390f35b82518452859450602093840193909201916001016103bf565b346100f0575f3660031901126100f05760205f5160206120d55f395f51905f5254604051908152f35b346100f05761041d36611a32565b9160ff5f5160206120f55f395f51905f529492945460a01c1615610557576001600160a01b03821693841561037257814211610363576102c26104fb926102a96104d56040516020810190610477816102a9304686611b10565b519020925f5160206120d55f395f51905f52546040519060208201927f6a1c46775ec9faacdfae08d2e6b8cf1770e1393a85917d22d19ed8008dbdbdd884528c6040840152606083015260808201526080815261027f60a082611bb8565b5190205f5160206120b55f395f51905f52546001600160a01b0316959092369190611bf4565b156103465761050990611c5f565b7f7a434db50c18c80cbf66b7c9748fe8dc4010acdad257da91d342021ae8f6566a602060015f5160206120d55f395f51905f525401805f5160206120d55f395f51905f5255604051908152a3005b6321c4e35760e21b5f5260045ffd5b346100f0575f3660031901126100f0575f5160206120755f395f51905f52545f5160206120355f395f51905f52545f5160206120555f395f51905f52545f5160206120955f395f51905f52545f5160206120f55f395f51905f52545f5160206120b55f395f51905f52546040805196875260208701959095526001600160a01b039384169486019490945260ff9182161515606086015260a081811c909216151560808601528216908401521660c082015260e090f35b346100f05760203660031901126100f057610636611a1c565b5f6106415f92611cdc565b9182549163ffffffff8360201c16928361066d575b506060935060405192835260208301526040820152f35b63ffffffff9150169283610100019384610100119182610746578560ff83011161074657600101919061010060ff82085f528260205260405f2054925f915f906101ff6102008201809a119101988911915b8881106106d0575050505050610656565b85610746578161074657826107465760ff6106eb828c611b03565b165f528360205260405f205460018110158061073b575b610710575b506001016106bf565b60ff600191161b60ff8187161661070757600191989560ff61073492161795611d57565b9790610707565b506005811115610702565b634e487b7160e01b5f52601160045260245ffd5b346100f0575f3660031901126100f05760805f5160206120755f395f51905f52545f5160206120355f395f51905f525460018060a01b035f5160206120555f395f51905f52541660ff5f5160206120955f395f51905f525416916040519384526020840152604083015215156060820152f35b346100f05760403660031901126100f0576004356001600160401b0381116100f0576107fd903690600401611a98565b6024356001600160401b0381116100f05761081c903690600401611a98565b9260ff5f5160206120f55f395f51905f525460a01c16156105575760ff5f5160206120955f395f51905f525416610ef3578215610ee457838303610ed55760148311610ec65761086b83611d2c565b936108796040519586611bb8565b83855261088584611d2c565b601f19013660208701375f925f5b85811061093f5750505050336001600160601b0360a01b5f5160206120555f395f51905f525416175f5160206120555f395f51905f525560405191825260208201527faf1a15763e6233a44eeef011dd57d5e002aa7c4edcf7294c496060628c9af2b260403392a26040518091602082016020835281518091526020604084019201905f5b818110610926575050500390f35b8251845285945060209384019390920191600101610918565b61094a818786611ccc565b3583821015610eb2578160051b830135601e19843603018112156100f0576001600160401b0381850135116100f057808401353603602082860101136100f05781151580610ea7575b80610e9b575b80610e8c575b6109ae575b5050600101610893565b60015f5160206120355f395f51905f5297939297540190815f5160206120355f395f51905f52556109e83682870135602084890101611bf4565b80516020918201206040513360601b6bffffffffffffffffffffffff1916928101928352603481018b905260548101829052466074820152609481019490945292610a368160b481016102a9565b51902093604051610a4681611b9d565b63ffffffff8a168152602081016001600160401b034216815260408201338152606083019060018252610a83368b60208980830135920101611bf4565b9260808501938452895f527f5313a8921c51e28339007b8dd64d01c81939df477fa8a3440b1db2c6d658b29d60205263ffffffff8060405f209651161663ffffffff19865416178555519063ffffffff6bffffffffffffffff000000008654926001600160601b0319905160601b169360201b16911617178355600183019051151560ff80198354169116179055518051906001600160401b038211610e7857610b306002840154611c94565b601f8111610e34575b50602090601f8311600114610dc957600292915f9183610dbe575b50508160011b915f199060031b1c1916179101555b610b7233611cdc565b63ffffffff60ff600182845416805f528185016020528d60405f205501161663ffffffff1982541617815563ffffffff815460201c16906101008210610d8a575b50505f5160206120755f395f51905f52549460018a03610c7f5760208784018035810103126100f057600195610bf26020610c52958a01013582611ae3565b5f5160206120755f395f51905f52555b5f5160206120755f395f51905f525460405191825260208201527fbc7917920280b3fd9dbc7e92398cf96d915bfd40fff01b96f51556fbc16e3d5460403392a2610c4c858d611d43565b52611d57565b96337fbb1320003ed97c6e516381bd6eb18b8188b46f0420eabc00161c5dcdfde804265f80a490886109a4565b60028a03610cd15760208784018035810103126100f057600195610c529388016020013581811115610cc257505f5b5f5160206120755f395f51905f5255610c02565b610ccc9082611b03565b610cae565b60038a03610d155760208784018035810103126100f0576001956064610d006020610c52968b01013583611af0565b045f5160206120755f395f51905f5255610c02565b600195610c529360048c03610d3a57505f5f5160206120755f395f51905f5255610c02565b60058c14610d49575b50610c02565b610d7390610d6e90610d67908b018035810160209081019101611ac8565b9291611ae3565b611af0565b871c5f5160206120755f395f51905f52558d610d43565b610d96610db792611d14565b67ffffffff0000000082549160201b169067ffffffff000000001916179055565b8b80610bb3565b015190508f80610b54565b90600284015f52805f20915f5b601f1985168110610e1c5750918391600193600295601f19811610610e04575b505050811b01910155610b69565b01515f1960f88460031b161c191690558f8080610df6565b91926020600181928685015181550194019201610dd6565b600284015f5260205f20601f840160051c810160208510610e71575b601f830160051c82018110610e66575050610b39565b5f8155600101610e50565b5080610e50565b634e487b7160e01b5f52604160045260245ffd5b5061040081850135111561099f565b50808401351515610999565b506005821115610993565b634e487b7160e01b5f52603260045260245ffd5b63222d757960e01b5f5260045ffd5b631fec674760e31b5f5260045ffd5b63c2e5347d60e01b5f5260045ffd5b6313d0ff5960e31b5f5260045ffd5b346100f0575f3660031901126100f0576040805190610f218183611bb8565b600d82526c22bc30b6b83632a330b1b2ba2160991b6020830152805190610f488183611bb8565b60058252640312e322e360dc1b6020830152610220918151610f6a8482611bb8565b601081526020810193601f1901368537805115610eb25763e9e831d760e01b8452805160011015610eb2576360ad2cf160e11b81840152805160021015610eb257630e7d1d9360e01b6060820152805160031015610eb2576337184e9560e01b6080820152805160041015610eb257635aa723df60e01b60a0820152805160051015610eb25763279412c560e01b60c0820152805160061015610eb25763e2ab79b160e01b60e0820152805160071015610eb2576331e8c19560e01b610100820152805160081015610eb257637c300fd160e01b610120820152805160091015610eb257631e39325960e11b6101408201528051600a1015610eb257631519db2960e31b6101608201528051600b1015610eb25763a83583e960e01b6101808201528051600c1015610eb25763ea83977f60e01b6101a08201528051600d1015610eb257630af7330960e01b6101c08201528051600e1015610eb25763c66b4f2360e01b6101e08201528051600f1015610eb25763289b3c0d60e01b610200820152825160608082529095869594936020939261111a9261110d91890190611a74565b9087820385890152611a74565b928584039086015251918281520191905f5b81811061113a575050500390f35b82516001600160e01b03191684528594506020938401939092019160010161112c565b346100f05761116b366119e9565b60ff5f5160206120f55f395f51905f529392935460a01c16156105575760ff5f5160206120955f395f51905f525416610ef357811580156114c8575b6114b95780156114aa57610400811161149b5760015f5160206120355f395f51905f525401805f5160206120355f395f51905f525560026111e9368487611bf4565b80516020918201206040513360601b6bffffffffffffffffffffffff191692810192835260348101879052605481018290524660748201526094810194909452926112378160b481016102a9565b519020926040519061124882611b9d565b63ffffffff8616825260208201966001600160401b034216885261127d60408401913383526060850193600185523691611bf4565b9760808401988952865f527f5313a8921c51e28339007b8dd64d01c81939df477fa8a3440b1db2c6d658b29d60205263ffffffff8060405f209551161663ffffffff19855416178455519063ffffffff6bffffffffffffffff000000008554926001600160601b0319905160601b169360201b16911617178255600182019051151560ff801983541691161790550193519384516001600160401b038111610e78576113298254611c94565b601f8111611456575b50806020968790601f83116001146113f4575f926113e9575b50508160011b915f199060031b1c19161790555b61136833611cdc565b63ffffffff60ff600182845416805f5281850189528760405f205501161663ffffffff1982541617815563ffffffff8154861c169061010082106113d6575b505060405192337fbb1320003ed97c6e516381bd6eb18b8188b46f0420eabc00161c5dcdfde804265f80a48152f35b610d966113e292611d14565b84806113a7565b01519050878061134b565b5f8581528281209350601f198516905b81811061143f5750908460019594939210611427575b505050811b01905561135f565b01515f1960f88460031b161c1916905587808061141a565b92938a600181928786015181550195019301611404565b825f5260205f20601f830160051c81019160208410611491575b601f0160051c01905b8181106114865750611332565b5f8155600101611479565b9091508190611470565b632a77a3f760e11b5f5260045ffd5b6399d8fec960e01b5f5260045ffd5b630ead561960e11b5f5260045ffd5b50600582116111a7565b346100f05760203660031901126100f0576004356001600160401b0381116100f057611502903690600401611a98565b9081156114aa578035906001925b80841061152257602083604051908152f35b909160019084821661154f576115449061153d868587611ccc565b3590611ae3565b935b01929190611510565b611567606491611560878688611ccc565b3590611af0565b0493611546565b346100f0575f3660031901126100f0575f5160206120b55f395f51905f52546040516001600160a01b039091168152602090f35b346100f05760203660031901126100f057606060806040516115c381611b9d565b5f81525f60208201525f60408201525f8382015201526004355f527f5313a8921c51e28339007b8dd64d01c81939df477fa8a3440b1db2c6d658b29d60205260405f2060405161161281611b9d565b81549163ffffffff8316825260208201926001600160401b038160201c168452604083019060601c8152600260ff600184015416926060850193151584520193604051945f9080549061166482611c94565b808952916001811690811561172c57506001146116e8575b63ffffffff876116e48a89896001600160401b038a61169d858c0386611bb8565b6080870194855260405197889760208952511660208801525116604086015260018060a01b03905116606085015251151560808401525160a08084015260c0830190611a74565b0390f35b5f908152602081209092505b81831061171257505085016020016001600160401b036116e461167c565b6001816020929493945483858c01015201910191906116f4565b60ff19166020808b019190915292151560051b890190920192506001600160401b0391506116e4905061167c565b346100f05761176836611a32565b915f5160206120f55f395f51905f52939193549260ff8460a01c1615610557576001600160a01b038316948515610372578242116103635761184861184e936102a961182260405160208101906117c4816102a9304686611b10565b519020925f5160206120d55f395f51905f52546040519060208201927ff44a30e7d5745e7042f0e56be7b38c4760f55b29b0f5229d372262f95157237784528d6040840152606083015260808201526080815261027f60a082611bb8565b5190205f5160206120b55f395f51905f52546001600160a01b0316939092369190611bf4565b91611e79565b156103465761185c90611c2a565b7f38b76dc1799b290f625f5faedbf8b99a347dd93361f1323697b05d5372476173602060015f5160206120d55f395f51905f52540192835f5160206120d55f395f51905f525560405193845260018060a01b031692a3005b346100f0576118c2366119e9565b815f5160206120755f395f51905f525493600181145f146119075750602091810103126100f0576040916118f7913590611ae3565b6161a85b82519182526020820152f35b905060028103611947575081602091810103126100f05735908082111561193657505060405f5b6165906118fb565b60409161194291611b03565b61192e565b9182600382959394145f1461197c575060209192810103126100f0576119736064916040933590611af0565b04616d606118fb565b915050600481036119955750505060405f6159d86118fb565b6005036114b957610d6e610d67836119b1936040950190611ac8565b60011c617d006118fb565b9181601f840112156100f0578235916001600160401b0383116100f057602083818601950101116100f057565b9060406003198301126100f05760043591602435906001600160401b0382116100f057611a18916004016119bc565b9091565b600435906001600160a01b03821682036100f057565b60606003198201126100f0576004356001600160a01b03811681036100f0579160243591604435906001600160401b0382116100f057611a18916004016119bc565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f840112156100f0578235916001600160401b0383116100f0576020808501948460051b0101116100f057565b908160609103126100f0578035916040602083013592013590565b9190820180921161074657565b8181029291811591840414171561074657565b9190820391821161074657565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81527f993d0ba592d4b01f590b9c8e5420547d5c0d90739d08703b0fb949ff7c1a246d60208201527fe374587661e69268352d25204d81b23ce801573f4b09f3545e69536dc085a37a604082015260608101919091526001600160a01b03909116608082015260a00190565b60a081019081106001600160401b03821117610e7857604052565b90601f801991011681019081106001600160401b03821117610e7857604052565b6001600160401b038111610e7857601f01601f191660200190565b929192611c0082611bd9565b91611c0e6040519384611bb8565b8294818452818301116100f0578281602093845f960137010152565b60018060a01b03166001600160601b0360a01b5f5160206120f55f395f51905f525416175f5160206120f55f395f51905f5255565b60018060a01b03166001600160601b0360a01b5f5160206120b55f395f51905f525416175f5160206120b55f395f51905f5255565b90600182811c92168015611cc2575b6020831014611cae57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611ca3565b9190811015610eb25760051b0190565b6001600160a01b03165f9081527f5313a8921c51e28339007b8dd64d01c81939df477fa8a3440b1db2c6d658b29e6020526040902090565b63ffffffff60019116019063ffffffff821161074657565b6001600160401b038111610e785760051b60200190565b8051821015610eb25760209160051b010190565b5f1981146107465760010190565b611d6e90611cdc565b9081549163ffffffff8360201c1690611d8682611d2c565b93611d946040519586611bb8565b828552601f19611da384611d2c565b01366020870137848315611e2b575063ffffffff90929192169160015f91019083610100019384610100116101ff61020083018097119201958611925b858110611df05750505050505050565b8161074657826107465783610746578060ff611e0e6001938a611b03565b165f528560205260405f2054611e24828c611d43565b5201611de0565b9450505050565b801591508115611e6e575b50611e66578015611e5e5761040010611e57576001905f90565b5f90600390565b505f90600290565b505f90600190565b60059150115f611e3d565b9190823b611ec85790611e8b91611f6d565b506004811015611eb457159182611ea157505090565b6001600160a01b03918216911614919050565b634e487b7160e01b5f52602160045260245ffd5b915f926102a9611efe85946040519283916020830195630b135d3f60e11b87526024840152604060448401526064830190611a74565b51915afa3d15611f66573d611f1281611bd9565b90611f206040519283611bb8565b81523d5f602083013e5b81611f58575b81611f39575090565b90506020818051810103126100f05760200151630b135d3f60e11b1490565b905060208151101590611f30565b6060611f2a565b8151919060418303611f9d57611f969250602082015190606060408401519301515f1a90611fa7565b9192909190565b50505f9160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612029579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa1561201e575f516001600160a01b0381161561201457905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f916003919056fe5313a8921c51e28339007b8dd64d01c81939df477fa8a3440b1db2c6d658b29b5313a8921c51e28339007b8dd64d01c81939df477fa8a3440b1db2c6d658b29c5313a8921c51e28339007b8dd64d01c81939df477fa8a3440b1db2c6d658b29a9b02e42a9b92e93607133334d133e31dc3f904c7156cf846526371c09ab4c5b25313a8921c51e28339007b8dd64d01c81939df477fa8a3440b1db2c6d658b2a15313a8921c51e28339007b8dd64d01c81939df477fa8a3440b1db2c6d658b2a05313a8921c51e28339007b8dd64d01c81939df477fa8a3440b1db2c6d658b29fa2646970667358221220121ee56ae29cb924b9ede550143d682764300a8df9285441f4c76d2030617eb764736f6c634300081e0033";

type ExampleFacetBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleFacetBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleFacetB__factory extends ContractFactory {
  constructor(...args: ExampleFacetBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ExampleFacetB & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ExampleFacetB__factory {
    return super.connect(runner) as ExampleFacetB__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleFacetBInterface {
    return new Interface(_abi) as ExampleFacetBInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ExampleFacetB {
    return new Contract(address, _abi, runner) as unknown as ExampleFacetB;
  }
}

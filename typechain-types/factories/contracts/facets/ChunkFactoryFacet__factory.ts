/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ChunkFactoryFacet,
  ChunkFactoryFacetInterface,
} from "../../../contracts/facets/ChunkFactoryFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factoryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newBaseFee",
        type: "uint256",
      },
    ],
    name: "BaseFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "deployed",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "salts",
        type: "bytes32[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFee",
        type: "uint256",
      },
    ],
    name: "BatchDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chunkCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "packedMetadata",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "BatchStaged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "chunk",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "ChunkStaged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "deployed",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "ContractDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "DefaultAdminTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeCollectionFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "FeeRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "FeesEnabledSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "IdempotentModeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "TierFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
    ],
    name: "UserTierSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "constructorArgs",
        type: "bytes",
      },
    ],
    name: "deployDeterministic",
    outputs: [
      {
        internalType: "address",
        name: "deployed",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "salts",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "bytecodes",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "constructorArgs",
        type: "bytes[]",
      },
    ],
    name: "deployDeterministicBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "deployed",
        type: "address[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deploymentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpectedFactoryBytecodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpectedManifestHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFacetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getFactoryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getManifestDispatcher",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "isDeployedContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "predict",
    outputs: [
      {
        internalType: "address",
        name: "predicted",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "predictAddress",
    outputs: [
      {
        internalType: "address",
        name: "predicted",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "salts",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "codeHashes",
        type: "bytes32[]",
      },
    ],
    name: "predictAddressBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "predicted",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "chunk",
        type: "address",
      },
    ],
    name: "read",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBase",
        type: "uint256",
      },
    ],
    name: "setBaseFeeWei",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setFeesEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setIdempotentMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setTierFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
    ],
    name: "setUserTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "stage",
    outputs: [
      {
        internalType: "address",
        name: "chunk",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "blobs",
        type: "bytes[]",
      },
    ],
    name: "stageBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "chunks",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "hashes",
        type: "bytes32[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "dataArray",
        type: "bytes[]",
      },
    ],
    name: "stageMany",
    outputs: [
      {
        internalType: "address[]",
        name: "chunks",
        type: "address[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "transferDefaultAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "userTiers",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "validateBytecodeSize",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "verifySystemIntegrity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346101c257601f611d5e38819003918201601f19168301916001600160401b038311848410176101c6578084926020946040528339810103126101c257516001600160a01b038116908181036101c257811561017d573b1561012e57608052604051611b8390816101db82396080518181816101cb01528181610292015281816103bf0152818161042b015281816104c8015281816105f1015281816106950152818161077a015281816107cb015281816108840152818161091b01528181610a4501528181610add01528181610be101528181610c5901528181610d1e015281816111de01528181611237015281816112c501528181611352015281816113c801528181611453015281816114db015281816115b20152818161170c0152818161179801526118060152f35b60405162461bcd60e51b815260206004820152602160248201527f4368756e6b466163746f727946616365743a204e6f74206120636f6e747261636044820152601d60fa1b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4368756e6b466163746f727946616365743a205a65726f2061646472657373006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f905f3560e01c9081630bfde0da146117e35750806310a9352814611760578063110f8874146116f85780631d5134651461155957806324063c821461149757806338a699a41461142457806340fca008146113a6578063476343ee1461133e5780634c36f10d1461129f5780635ea31b981461121a5780636290caec1461119a578063699ffc7e14610d5f5780637ed1cd4714610cf75780637f4aedfe14610ca45780638da5cb5b14610c325780638e7163c214610b4e578063939e255c14610ab7578063966dae0e14610764578063a04725c614610a19578063a087a87e146108d8578063a64139fa14610827578063a901dd92146107a9578063a9c2e36c14610764578063b697ff8a1461070e578063bc2e51df1461066e578063c2c8e21a14610527578063c97237be146104b3578063e74b981b1461040e578063ee05163a14610327578063ee9d1ef51461026b5763fa8c96ef14610173575f80fd5b6020366003190112610268576004356001600160401b038111610266579060406101a46101c69336906004016118ff565b825163fa8c96ef60e01b815260206004820152948592839260248401916119f1565b0381347f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1918215610259578192610227575b50604080516001600160a01b039092168252602082019290925290819081015b0390f35b905061024b915060403d604011610252575b610243818361192c565b810190611b30565b905f610203565b503d610239565b50604051903d90823e3d90fd5b505b80fd5b50346102685780600319360112610268576040516339f907dd60e01b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561031b5780916102de575b6040516001600160a01b0383168152602090f35b90506020823d602011610313575b816102f96020938361192c565b81010312610268575061030d602091611961565b5f6102ca565b3d91506102ec565b604051903d90823e3d90fd5b506060366003190112610268576024356001600160401b038111610266576103539036906004016118ff565b6044356001600160401b03811161040a57916020916103ba61037d6103a8969536906004016118ff565b6040516377028b1d60e11b8152600480359082015260606024820152978895869560648701916119f1565b848103600319016044860152916119f1565b0381347f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af190811561031b5780916102de576040516001600160a01b0383168152602090f35b8380fd5b503461026857602036600319011261026857806104296118e9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156104af5760405163e74b981b60e01b81526001600160a01b0390911660048201529082908290602490829084905af180156104a4576104935750f35b8161049d9161192c565b6102685780f35b6040513d84823e3d90fd5b5050fd5b503461026857602036600319011261026857807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610524578180916024604051809481936364b91bdf60e11b835260043560048401525af180156104a4576104935750f35b50fd5b50606036600319011261026857806004356001600160401b0381116105245761055490369060040161187d565b91906024356001600160401b03811161066a5761057590369060040161187d565b604494919435906001600160401b038211610666576105c8956105da6105a26105ec94369060040161187d565b929093604051998a988998636164710d60e11b8a52606060048b015260648a0191611b0c565b87810360031901602489015291611a11565b84810360031901604486015291611a11565b0381347f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156104a457826102239392610643575b50506040519182916020835260208301906118ad565b61065f92503d8091833e610657818361192c565b810190611ae4565b5f8061062d565b8480fd5b8280fd5b5034610268578060031936011261026857604051634311dc7560e01b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561031b57906106d7575b602090604051908152f35b506020813d602011610706575b816106f16020938361192c565b8101031261070257602090516106cc565b5f80fd5b3d91506106e4565b503461026857602036600319011261026857600435906001600160401b03821161026857602061074136600485016118ff565b801515915081610757575b506040519015158152f35b61c000915011158261074c565b50346102685780600319360112610268576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346102685760203660031901126102685780600435801515809103610524577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156104af578291602483926040519485938492635480eec960e11b845260048401525af180156104a4576104935750f35b5034610268576020366003190112610268576004356001600160401b0381116102665790604061085e6108809336906004016118ff565b82516353209cfd60e11b815260206004820152948592839260248401916119f1565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9182156102595781926102275750604080516001600160a01b039290921682526020820192909252f35b5034610268576020366003190112610268576108f26118e9565b604051635043d43f60e11b81526001600160a01b039182166004820152908290829060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa80156104a457829061097b575b604091506020825193849282845280519283918282870152018585015e828201840152601f01601f19168101030190f35b503d8083833e61098b818361192c565b81019060208183031261066a578051906001600160401b03821161040a57019080601f8301121561066a578151916001600160401b038311610a05578390604051926109e16020601f19601f880116018561192c565b84845260208583010111610266578360409460208093018386015e8301015261094a565b634e487b7160e01b84526041600452602484fd5b50346102685760403660031901126102685780610a346118e9565b6024359060ff82168092036104af577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b15610ab25760405163502392e360e11b81526001600160a01b03909216600483015260248201529082908290604490829084905af180156104a4576104935750f35b505050fd5b50346102685780600319360112610268576040516324e7895760e21b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156104a45760209291610b2157506040519015158152f35b610b419150823d8411610b47575b610b39818361192c565b810190611a96565b5f61074c565b503d610b2f565b503461026857604036600319011261026857806004356001600160401b03811161052457610b8090369060040161187d565b9190602435926001600160401b03841161066a57610bdd610ba8610bcb95369060040161187d565b6040519687958695634738b1e160e11b8752604060048801526044870191611b0c565b84810360031901602486015291611b0c565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156104a4578261022393926106435750506040519182916020835260208301906118ad565b5034610268578060031936011261026857604051638da5cb5b60e01b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561031b5780916102de576040516001600160a01b0383168152602090f35b50602036600319011261026857600435816001600160401b03821161026857610cd46105ec92369060040161187d565b604051633fa576ff60e11b81526020600482015293849283926024840191611a11565b5034610268578060031936011261026857604051632bb2372160e21b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561031b57906106d757602090604051908152f35b50346102685780600319360112610268576103c0604051610d80828261192c565b601d81526020810191601f19013683378051156111865763fa8c96ef60e01b825280516001101561118657633fa576ff60e11b60408201526003631d51346560e01b610dcd600284611abc565b52610dd781611aae565b906377028b1d60e11b90610deb9084611abc565b52610df581611aae565b90636164710d60e11b90610e099084611abc565b52610e1381611aae565b906353209cfd60e11b90610e279084611abc565b52610e3181611aae565b9063021526a560e31b90610e459084611abc565b52610e4f81611aae565b90634738b1e160e11b90610e639084611abc565b52610e6d81611aae565b90635043d43f60e11b90610e819084611abc565b52610e8b81611aae565b90630e29a66960e21b90610e9f9084611abc565b52610ea981611aae565b906318a432bb60e21b90610ebd9084611abc565b52610ec781611aae565b90635b4bffc560e11b90610edb9084611abc565b52610ee581611aae565b906324e7895760e21b90610ef99084611abc565b52610f0381611aae565b90634c36f10d60e01b90610f179084611abc565b52610f2181611aae565b906312031e4160e11b90610f359084611abc565b52610f3f81611aae565b90638da5cb5b60e01b90610f539084611abc565b52610f5d81611aae565b906323b1a1f760e11b90610f719084611abc565b52610f7b81611aae565b90630443e21d60e21b90610f8f9084611abc565b52610f9981611aae565b906305fef06d60e11b90610fad9084611abc565b52610fb781611aae565b9063502392e360e11b90610fcb9084611abc565b52610fd581611aae565b9063081f940160e31b90610fe99084611abc565b52610ff381611aae565b9063e74b981b60e01b906110079084611abc565b5261101181611aae565b906364b91bdf60e11b906110259084611abc565b5261102f81611aae565b90635480eec960e11b906110439084611abc565b5261104d81611aae565b90630bd4637360e31b906110619084611abc565b5261106b81611aae565b9063bc2e51df60e01b9061107f9084611abc565b5261108981611aae565b90637ed1cd4760e01b9061109d9084611abc565b526110a781611aae565b9063ee9d1ef560e01b906110bb9084611abc565b526110c581611aae565b90632a70b8db60e21b906110d99084611abc565b5281510361112d5790604051928392602084019060208552518091526040840192915b81811061110a575050500390f35b82516001600160e01b0319168452859450602093840193909201916001016110fc565b60405162461bcd60e51b815260206004820152601760248201527f73656c6563746f7220636f756e74206d69736d617463680000000000000000006044820152606490fd5b634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b83526032600452602483fd5b5034610268576020366003190112610268576111b46118e9565b6040516318a432bb60e21b81526001600160a01b03918216600482015290602090829060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa9081156104a45760209291610b2157506040519015158152f35b503461026857602036600319011261026857806112356118e9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156104af57604051630bd4637360e31b81526001600160a01b0390911660048201529082908290602490829084905af180156104a4576104935750f35b5034610268578060031936011261026857604051634c36f10d60e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156104a4578291611308575b602082604051908152f35b90506020813d602011611336575b816113236020938361192c565b810103126102665760209150515f6112fd565b3d9150611316565b5034610268578060031936011261026857807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610524578180916004604051809481936323b1a1f760e11b83525af180156104a4576104935750f35b50346102685760203660031901126102685780600435801515809103610524577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156104af57829160248392604051948593849263081f940160e31b845260048401525af180156104a4576104935750f35b503461026857602036600319011261026857604051630e29a66960e21b815260048035908201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156104a45760209291610b2157506040519015158152f35b5034610268576020366003190112610268576114b16118e9565b6040516312031e4160e11b81526001600160a01b03918216600482015290602090829060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa9081156104a4578291611519575b60208260ff60405191168152f35b90506020813d602011611551575b816115346020938361192c565b81010312610266575160ff8116810361026657602091505f61150b565b3d9150611527565b506020366003190112610268576004356001600160401b03811161026657908061158a6115ad93369060040161187d565b604051631d51346560e01b81526020600482015294859283926024840191611a11565b0381347f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af190811561031b5780928192611644575b509061160792916040519384936040855260408501906118ad565b8381036020850152602080845192838152019301915b81811061162b575050500390f35b825184528594506020938401939092019160010161161d565b925090503d8082843e611657818461192c565b8201916040818403126102665780516001600160401b03811161066a578361168091830161198c565b906020810151906001600160401b03821161040a57019280601f8501121561066a5783516116ad81611975565b946116bb604051968761192c565b81865260208087019260051b82010192831161066657602001905b8282106116e85750505091905f6115ec565b81518152602091820191016116d6565b5034610268578060031936011261026857807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561052457818091600460405180948193630443e21d60e21b83525af180156104a4576104935750f35b50346102685760403660031901126102685760405163021526a560e31b815260048035908201526024803590820152906020826044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561031b5780916102de576040516001600160a01b0383168152602090f35b9050346107025760403660031901126107025760043560ff8116809103610702577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610702576044835f819381956305fef06d60e11b8452600484015260243560248401525af1801561187257611864575080f35b61187091505f9061192c565b005b6040513d5f823e3d90fd5b9181601f84011215610702578235916001600160401b038311610702576020808501948460051b01011161070257565b90602080835192838152019201905f5b8181106118ca5750505090565b82516001600160a01b03168452602093840193909201916001016118bd565b600435906001600160a01b038216820361070257565b9181601f84011215610702578235916001600160401b038311610702576020838186019501011161070257565b90601f801991011681019081106001600160401b0382111761194d57604052565b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b038216820361070257565b6001600160401b03811161194d5760051b60200190565b9080601f830112156107025781516119a381611975565b926119b1604051948561192c565b81845260208085019260051b82010192831161070257602001905b8282106119d95750505090565b602080916119e684611961565b8152019101906119cc565b908060209392818452848401375f828201840152601f01601f1916010190565b90602083828152019060208160051b85010193835f915b838310611a385750505050505090565b909192939495601f198282030186528635601e198436030181121561070257830190602082359201916001600160401b03811161070257803603831361070257611a8860209283926001956119f1565b980196019493019190611a28565b90816020910312610702575180151581036107025790565b5f1981146111725760010190565b8051821015611ad05760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b906020828203126107025781516001600160401b03811161070257611b09920161198c565b90565b81835290916001600160fb1b0383116107025760209260051b809284830137010190565b9190826040910312610702576020611b4783611961565b9201519056fea26469706673582212200ee517756492bc0f2c751c143cdae9dac7e97b4b07f492e71a60a7ee30c4216c64736f6c634300081e0033";

type ChunkFactoryFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChunkFactoryFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChunkFactoryFacet__factory extends ContractFactory {
  constructor(...args: ChunkFactoryFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factoryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_factoryAddress, overrides || {});
  }
  override deploy(
    _factoryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_factoryAddress, overrides || {}) as Promise<
      ChunkFactoryFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ChunkFactoryFacet__factory {
    return super.connect(runner) as ChunkFactoryFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChunkFactoryFacetInterface {
    return new Interface(_abi) as ChunkFactoryFacetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ChunkFactoryFacet {
    return new Contract(address, _abi, runner) as unknown as ChunkFactoryFacet;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Diamond,
  DiamondInterface,
} from "../../../contracts/test/Diamond";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "_selectors",
        type: "bytes4[]",
      },
    ],
    name: "addFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034606f57601f6109c438819003918201601f19168301916001600160401b03831184841017607357808492602094604052833981010312606f57516001600160a01b03811690819003606f575f80546001600160a01b03191691909117905560405161093c90816100888239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816352ef6b2c1461057c575080635547dad6146102d65780637a0ed6271461014f5780638da5cb5b14610128578063adfca15e146100a55763cdffacc61461005e575f80fd5b346100a15760203660031901126100a15760043563ffffffff60e01b81168091036100a1575f526001602052602060018060a01b0360405f205416604051908152f35b5f80fd5b346100a15760203660031901126100a1576001600160a01b036100c6610641565b165f5260026020526100da60405f206106ee565b6040518091602082016020835281518091526020604084019201905f5b818110610105575050500390f35b82516001600160e01b0319168452859450602093840193909201916001016100f7565b346100a1575f3660031901126100a1575f546040516001600160a01b039091168152602090f35b346100a1575f3660031901126100a15760035461016b816106d6565b906101796040519283610673565b808252601f19610188826106d6565b015f5b8181106102b25750505f5b81811061025457826040518091602082016020835281518091526040830190602060408260051b8601019301915f905b8282106101d557505050500390f35b919390929450603f1986820301825284516020606081604085019360018060a01b0381511686520151936040838201528451809452019201905f905b8082106102315750505060208060019296019201920185949391926101c6565b82516001600160e01b031916845260209384019390920191600190910190610211565b80610260600192610695565b838060a01b0391549060031b1c16805f52600260205261029160405f206040519261028a84610657565b83526106ee565b60208201526102a082866108f2565b526102ab81856108f2565b5001610196565b6020906040516102c181610657565b5f81526060838201528282870101520161018b565b346100a15760403660031901126100a1576102ef610641565b6024359067ffffffffffffffff82116100a157366023830112156100a15781600401359067ffffffffffffffff82116100a1573660248360051b850101116100a1576003546001600160a01b03909116905f805b828110610549575b501561050b575b50805f52600260205260405f20600160401b83116104f757805483825580841061049d575b5060248401905f5260205f208360031c905f5b82811061044b575060071985168503806103f5575b505050505f5b828110156103f3576001906001600160e01b03196103cb600583901b87016024016106c1565b165f528160205260405f20836bffffffffffffffffffffffff60a01b825416179055016103a5565b005b925f935f5b81811061040f5750505001558380808061039f565b9091946020610441600192610423896106c1565b60e01c908560021b63ffffffff809160031b9316831b921b19161790565b96019291016103fa565b5f5f5b6008811061046357508282015560010161038a565b94906020610494600192610476856106c1565b60e01c908960021b63ffffffff809160031b9316831b921b19161790565b9201950161044e565b815f5260205f20600780860160031c8201920160031c0190601c8560021b16806104dc575b505b8181106104d15750610377565b5f81556001016104c4565b5f198201908154905f199060200360031b1c169055866104c2565b634e487b7160e01b5f52604160045260245ffd5b600160401b8110156104f7578060016105279201600355610695565b81546001600160a01b0360039290921b91821b19169083901b17905583610352565b8361055382610695565b905460039190911b1c6001600160a01b03161461057257600101610343565b505060018561034b565b346100a1575f3660031901126100a1576003549081815260208101809260035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b905f5b81811061062257505050816105d7910382610673565b604051918291602083019060208452518091526040830191905f5b818110610600575050500390f35b82516001600160a01b03168452859450602093840193909201916001016105f2565b82546001600160a01b03168452602090930192600192830192016105c1565b600435906001600160a01b03821682036100a157565b6040810190811067ffffffffffffffff8211176104f757604052565b90601f8019910116810190811067ffffffffffffffff8211176104f757604052565b6003548110156106ad5760035f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b356001600160e01b0319811681036100a15790565b67ffffffffffffffff81116104f75760051b60200190565b90604051918281549182825260208201905f5260205f20925f905b80600783011061084d5761075f94549181811061082e575b81811061080f575b8181106107f0575b8181106107d1575b8181106107b2575b818110610793575b818110610776575b10610761575b500383610673565b565b6001600160e01b03191681526020015f610757565b602083811b6001600160e01b031916855290930192600101610751565b604083901b6001600160e01b0319168452602090930192600101610749565b606083901b6001600160e01b0319168452602090930192600101610741565b608083901b6001600160e01b0319168452602090930192600101610739565b60a083901b6001600160e01b0319168452602090930192600101610731565b60c083901b6001600160e01b0319168452602090930192600101610729565b60e083901b6001600160e01b0319168452602090930192600101610721565b916008919350610100600191865463ffffffff60e01b8160e01b16825263ffffffff60e01b8160c01b16602083015263ffffffff60e01b8160a01b16604083015263ffffffff60e01b8160801b16606083015263ffffffff60e01b8160601b16608083015263ffffffff60e01b8160401b1660a083015263ffffffff60e01b8160201b1660c083015263ffffffff60e01b1660e0820152019401920185929391610709565b80518210156106ad5760209160051b01019056fea26469706673582212204ffc7ea75668536330bce428b0afdbe5afea75a2d272d3de6c647d986561bfad64736f6c634300081e0033";

type DiamondConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Diamond__factory extends ContractFactory {
  constructor(...args: DiamondConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      Diamond & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Diamond__factory {
    return super.connect(runner) as Diamond__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondInterface {
    return new Interface(_abi) as DiamondInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Diamond {
    return new Contract(address, _abi, runner) as unknown as Diamond;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SampleFacet,
  SampleFacetInterface,
} from "../../../../contracts/test/Refactor/SampleFacet";

const _abi = [
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "v",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346013576096908160188239f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c908163209652551460495750635524107714602f575f80fd5b3460455760203660031901126045576004355f55005b5f80fd5b346045575f3660031901126045576020905f548152f3fea2646970667358221220df2c67821d9800ca21760f6312b163191bebc89abde756e3ec4438746341a3ca64736f6c634300081e0033";

type SampleFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SampleFacet__factory extends ContractFactory {
  constructor(...args: SampleFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SampleFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SampleFacet__factory {
    return super.connect(runner) as SampleFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleFacetInterface {
    return new Interface(_abi) as SampleFacetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SampleFacet {
    return new Contract(address, _abi, runner) as unknown as SampleFacet;
  }
}

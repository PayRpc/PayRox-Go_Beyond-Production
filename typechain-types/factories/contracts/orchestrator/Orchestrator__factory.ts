/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Orchestrator,
  OrchestratorInterface,
} from "../../../contracts/orchestrator/Orchestrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IChunkFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "contract IManifestDispatcher",
        name: "_dispatcher",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BadGas",
    type: "error",
  },
  {
    inputs: [],
    name: "BadId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "PlanDone",
    type: "error",
  },
  {
    inputs: [],
    name: "PlanExists",
    type: "error",
  },
  {
    inputs: [],
    name: "PlanMissing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feePaid",
        type: "uint256",
      },
    ],
    name: "ChunksStaged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "component",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tag",
        type: "string",
      },
    ],
    name: "ComponentNoted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "EmergencyPause",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "OrchestrationCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "OrchestrationStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PlanEmergencyPause",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "activateCommittedRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "complete",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dispatcher",
    outputs: [
      {
        internalType: "contract IManifestDispatcher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "emergencyPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IChunkFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIntegrationAddresses",
    outputs: [
      {
        internalType: "address",
        name: "factoryAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "dispatcherAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getPlan",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "globalEmergencyPause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "isPlanActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "component",
        type: "address",
      },
      {
        internalType: "string",
        name: "tag",
        type: "string",
      },
    ],
    name: "noteComponent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
      {
        internalType: "address[]",
        name: "facets",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "codehashes",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[][]",
        name: "proofs",
        type: "bytes32[][]",
      },
      {
        internalType: "bool[][]",
        name: "isRight",
        type: "bool[][]",
      },
    ],
    name: "orchestrateManifestUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "orchestrateStage",
    outputs: [
      {
        internalType: "address",
        name: "chunk",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bytes[]",
        name: "blobs",
        type: "bytes[]",
      },
    ],
    name: "orchestrateStageBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "chunks",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "hashes",
        type: "bytes32[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "plans",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
    ],
    name: "setAuthorized",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setGlobalEmergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPlanEmergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "startOrchestration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "startOrchestrationSecure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "validateOrchestration",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e03461018257601f611b2938819003918201601f19168301916001600160401b038311848410176101865780849260409485528339810103126101825780516001600160a01b038116918282036101825760200151916001600160a01b038316908184036101825715159081610178575b50156101475760805260a0523360c052335f52600160205260405f20600160ff1982541617905560405161198e908161019b82396080518181816102ae015281816105fa015281816108bd01526111f1015260a0518181816105b501528181610d37015281816112160152611433015260c051818181610164015281816101ae01528181610440015281816105700152818161072501528181610c0a01528181610fa8015281816110040152818161108d015281816111a3015281816112f1015281816113a9015281816114d101526118020152f35b60405162461bcd60e51b81526020600482015260096024820152683d32b9379030b2323960b91b6044820152606490fd5b905015155f610071565b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f905f3560e01c908163061e9e82146113d8575080630a0e5ff11461137057806343d26e19146112d05780634c4987aa14611260578063591ba54c1461123d57806369e9ea10146111d25780636c13eb3b1461110b5780636dc809071461106e578063711bf9b214610fdf57806378d41c1514610c395780637b0a2bb3146107fb57806385e0d2ff146107ac578063a0f7382614610754578063aa4f265314610754578063b7fc4d7f14610668578063b918161114610629578063c45a0155146105e4578063cb7e90571461059f578063cfceeb4914610473578063e95786191461020c578063e9d4f4b7146101dd578063f851a440146101985763fe9fbb801461011b575f80fd5b346101955760203660031901126101955760209060ff60406001600160a01b03610143611525565b169283815260018552205416908115610162575b506040519015158152f35b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161490505f610157565b80fd5b50346101955780600319360112610195576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101955760203660031901126101955760ff60406020926004358152600284522054166040519015158152f35b506040366003190112610195576004356024356001600160401b03811161046f5761023b90369060040161156b565b9290338252600160205260ff604083205416158061043c575b61042d5782825260208290526040822080546001600160a01b03161561041e576002015460ff1661040f5760406102a9915a958251938492839263fa8c96ef60e01b8452602060048501526024840191611917565b0381347f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1918215610403578091819361038e575b5050827fbe1f494297c07ee3b0a7d3fd42a5689250e9ad059ce528918f3834ac99af6691606061031b6040975a90611937565b8751906001825260208201523488820152a260018060a01b031680927f3b720534037400bb57b6ea877a791812c7e4c8586335f696467f6836ed05c8e585518061037f816060906020815260056020820152646368756e6b60d81b60408201520190565b0390a382519182526020820152f35b91509391506040813d6040116103fb575b816103ac60409383611598565b810103126103f75760409350827fbe1f494297c07ee3b0a7d3fd42a5689250e9ad059ce528918f3834ac99af6691606061031b60206103ea86611903565b95015195975050506102e8565b8380fd5b3d915061039f565b604051903d90823e3d90fd5b632b17496d60e21b8252600482fd5b636a4e998b60e01b8352600483fd5b63ea8e4eb560e01b8252600482fd5b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161415610254565b8280fd5b5034610195576060366003190112610195576024356001600160a01b038116906004359082900361046f576044356001600160401b0381116103f7576104bd90369060040161156b565b338552600160205260ff604086205416158061056c575b61055d5782855260208590526040852080546001600160a01b03161561054e576002015460ff1661053f57907f3b720534037400bb57b6ea877a791812c7e4c8586335f696467f6836ed05c8e591610539604051928392602084526020840191611917565b0390a380f35b632b17496d60e21b8552600485fd5b636a4e998b60e01b8652600486fd5b63ea8e4eb560e01b8552600485fd5b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614156104d4565b50346101955780600319360112610195576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101955780600319360112610195576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101955760203660031901126101955760209060ff906040906001600160a01b03610654611525565b168152600184522054166040519015158152f35b503461019557604036600319011261019557600435610685611516565b338352600160205260ff6040842054161580610721575b6107125781835260208390526040832080546001600160a01b03161561070357600201805460ff811661053f5760ff1916600117905560405190151581527f940fb25eac1f31db8b37ee08358f3c7e6614d51a3301bce6e789f38470a748d290602090a280f35b636a4e998b60e01b8452600484fd5b63ea8e4eb560e01b8352600483fd5b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316141561069c565b503461019557602036600319011261019557600435815260208181526040918290208054600182015460029092015484516001600160a01b0390921682529281019190915260ff909116151591810191909152606090f35b50346101955760203660031901126101955760043581526020818152604090912080546001600160a01b0316151590816107eb57506040519015158152f35b60ff91506002015416155f610157565b506040366003190112610195576004356024356001600160401b03811161046f5761082a90369060040161153b565b9190338452600160205260ff6040852054161580610c06575b610bf75781845260208490526040842080546001600160a01b031615610be8576002015460ff16610bd9575a92846040518093631d51346560e01b825283602483016020600485015252604482019060448560051b840101918185601e1982360301915b888210610b7357505050918390039150829050347f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1938415610b685785928695610a37575b50606084926109287fbe1f494297c07ee3b0a7d3fd42a5689250e9ad059ce528918f3834ac99af6691935a90611937565b6040519182526020820152346040820152a2835b81518110156109ac57600190818060a01b0360208260051b8501015116847f3b720534037400bb57b6ea877a791812c7e4c8586335f696467f6836ed05c8e5604051806109a3816060906020815260056020820152646368756e6b60d81b60408201520190565b0390a30161093c565b5091905060405192839260408401604085528151809152602060608601920190835b818110610a15575050508381036020850152602080845192838152019301915b8181106109fc575050500390f35b82518452859450602093840193909201916001016109ee565b82516001600160a01b03168452879650602093840193909201916001016109ce565b925093503d8086843e610a4a8184611598565b820191604081840312610b645780516001600160401b038111610b405781019083601f83011215610b4057815191610a81836118ec565b92610a8f6040519485611598565b80845260208085019160051b83010191868311610b6057602001905b828210610b48575050506020810151906001600160401b038211610b4457019280601f85011215610b40578351610ae1816118ec565b94610aef6040519687611598565b81865260208087019260051b820101928311610b3c57906020879594939201905b828210610b2957509496919450919250905060606108f7565b8151815287955060209182019101610b10565b8880fd5b8680fd5b8780fd5b60208091610b5584611903565b815201910190610aab565b8980fd5b8580fd5b6040513d87823e3d90fd5b92955092955092604319888203018552853584811215610bd557820190602082359201916001600160401b038111610bd1578036038313610bd157610bbe6020928392600195611917565b970195019201928a9593889593926108a7565b8c80fd5b8b80fd5b632b17496d60e21b8452600484fd5b636a4e998b60e01b8552600485fd5b63ea8e4eb560e01b8452600484fd5b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161415610843565b50346101955760c0366003190112610195576024356001600160401b038111610fdb57610c6a90369060040161153b565b6044929192356001600160401b03811161046f57610c8c90369060040161153b565b906064356001600160401b038111610fd757610cac90369060040161153b565b916084356001600160401b038111610b4057610ccc90369060040161153b565b91909360a4356001600160401b038111610b3c57610cee90369060040161153b565b949096338a52600160205260ff60408b2054161580610fa4575b610f95576004358a5260208a905260408a2080546001600160a01b031615610f86576002015460ff16610f77577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169a8b3b15610f735760405163575d748760e01b815260a0600482015260a481018b905299969897959660c48b0191908c905b808210610f3c575050508981036003190160248b015281815260200193908a905b808210610f0857505050878303600319016044890152610dd3929190611894565b91600319868403016064870152808352602083019260208260051b820101938389925b848410610ecb57505050505050600319848203016084850152828152602081019260208160051b830101938387935b838510610e635788808981818e8183818f03925af18015610e5857610e475750f35b81610e5191611598565b6101955780f35b6040513d84823e3d90fd5b909192939495601f198282030184526020610e7e88856118b8565b80845292909101918a905b808210610ea9575050506020806001929801940195019392949190610e25565b9091928335801515809103610bd1578152602090810193019160010190610e89565b9091929394969795602080610ef5600193601f19868203018852610eef8c886118b8565b90611894565b989a990196959190910193019190610df6565b9091948b999796989950853560018060a01b038116809103610bd15781529698979596602090810195019160010190610db2565b909192839b99989a9b3563ffffffff60e01b8116809103610f6f578152989a999798602090810193019160010190610d91565b8e80fd5b8a80fd5b632b17496d60e21b8a5260048afd5b636a4e998b60e01b8b5260048bfd5b63ea8e4eb560e01b8a5260048afd5b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161415610d08565b8480fd5b5080fd5b503461019557604036600319011261019557610ff9611525565b611001611516565b907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361105f576001600160a01b03168252600160205260408220805491151560ff1660ff19929092169190911790555b80f35b637bfa4b9f60e01b8352600483fd5b50346101955760403660031901126101955760043561108b611516565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361105f5760207fa5af1f47ad39879c38109ddb8710094ec8c5972d3c6e5643d0c0f992d172f8df91838552600282526110ff81604087209060ff801983541691151516179055565b6040519015158152a280f35b50346101955761111a36611500565b338352600160205260ff604084205416158061119f575b6107125760ff600354161580611188575b156111505761105c916115cd565b60405162461bcd60e51b815260206004820152601060248201526f115b595c99d95b98de481c185d5cd95960821b6044820152606490fd5b50818352600260205260ff60408420541615611142565b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161415611131565b5034610195578060031936011261019557604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682527f0000000000000000000000000000000000000000000000000000000000000000166020820152f35b5034610195578060031936011261019557602060ff600354166040519015158152f35b5034610195576060366003190112610195576044356001600160a01b0381168103610fdb576020916112996060926024356004356116ce565b939091604051948593151584526040838501528051928391826040870152018585015e828201840152601f01601f19168101030190f35b503461019557602036600319011261019557600435801515809103610fdb577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036113615760407fc6d66a5a13a2b9780ed9783dd34a33e101da7ba0e728b6c3ceebbc4085d47ca39160ff196003541660ff8216176003558151908152336020820152a180f35b637bfa4b9f60e01b8252600482fd5b50346101955761137f36611500565b90338352600160205260ff60408420541615806113a5575b610712579061105c916115cd565b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161415611397565b90503461149c57602036600319011261149c57335f52600160205260ff60405f20541615806114cd575b6114be576004355f90815260208190526040902080546001600160a01b0316156114af576002015460ff166114a0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561149c57816004815f80946356e361d960e11b83525af1801561149157611483575080f35b61148f91505f90611598565b005b6040513d5f823e3d90fd5b5f80fd5b632b17496d60e21b5f5260045ffd5b636a4e998b60e01b5f5260045ffd5b63ea8e4eb560e01b5f5260045ffd5b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161415611402565b604090600319011261149c576004359060243590565b60243590811515820361149c57565b600435906001600160a01b038216820361149c57565b9181601f8401121561149c578235916001600160401b03831161149c576020808501948460051b01011161149c57565b9181601f8401121561149c578235916001600160401b03831161149c576020838186019501011161149c57565b90601f801991011681019081106001600160401b038211176115b957604052565b634e487b7160e01b5f52604160045260245ffd5b9081156116bf5780156116b0575f828152602081905260409020546001600160a01b03166116a157604051606081018181106001600160401b038211176115b957611672926002916040523383526020830190815260408301905f8252855f525f60205260405f209360018060a01b039051166bffffffffffffffffffffffff60a01b85541617845551600184015551151591019060ff801983541691151516179055565b604051904282527f7c0f36166f9b5a8a1c986d1b1241ef2cfe42f27b7d2f38416e069fd449ecc92c60203393a3565b6330a0d8fd60e11b5f5260045ffd5b63c27dc2ed60e01b5f5260045ffd5b6308e235ff60e01b5f5260045ffd5b919082156118675715611834576001600160a01b03165f8181526001602052604090205460ff16159081611800575b506117d1575f818152602081905260409020546001600160a01b031661179d5760ff60035416908115611786575b5061175657600190604051611741604082611598565b600581526415985b1a5960da1b602082015290565b5f90604051611766604082611598565b601081526f115b595c99d95b98de481c185d5cd95960821b602082015290565b90505f52600260205260ff60405f2054165f61172b565b505f906040516117ae604082611598565b6013815272506c616e20616c72656164792065786973747360681b602082015290565b505f906040516117e2604082611598565b600e81526d139bdd08185d5d1a1bdc9a5e995960921b602082015290565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316141590505f6116fd565b50505f90604051611846604082611598565b6011815270125b9d985b1a590819d85cc81b1a5b5a5d607a1b602082015290565b5050505f9060405161187a604082611598565b600a815269125b9d985b1a5908125160b21b602082015290565b81835290916001600160fb1b03831161149c5760209260051b809284830137010190565b9035601e198236030181121561149c5701602081359101916001600160401b03821161149c578160051b3603831361149c57565b6001600160401b0381116115b95760051b60200190565b51906001600160a01b038216820361149c57565b908060209392818452848401375f828201840152601f01601f1916010190565b9190820391821161194457565b634e487b7160e01b5f52601160045260245ffdfea2646970667358221220ea1d9183626940b80b1d06f8dd41fb33d2a93827b94f5b2db69182948ed7fd6064736f6c634300081e0033";

type OrchestratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrchestratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Orchestrator__factory extends ContractFactory {
  constructor(...args: OrchestratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factory: AddressLike,
    _dispatcher: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_factory, _dispatcher, overrides || {});
  }
  override deploy(
    _factory: AddressLike,
    _dispatcher: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_factory, _dispatcher, overrides || {}) as Promise<
      Orchestrator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Orchestrator__factory {
    return super.connect(runner) as Orchestrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrchestratorInterface {
    return new Interface(_abi) as OrchestratorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Orchestrator {
    return new Contract(address, _abi, runner) as unknown as Orchestrator;
  }
}

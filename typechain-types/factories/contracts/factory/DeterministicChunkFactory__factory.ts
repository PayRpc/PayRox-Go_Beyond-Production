/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DeterministicChunkFactory,
  DeterministicChunkFactoryInterface,
} from "../../../contracts/factory/DeterministicChunkFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manifestDispatcher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_manifestHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_dispatcherCodehash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_factoryBytecodeHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_baseFeeWei",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_feesEnabled",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidConstructorArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "AuthorizedRecipientAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "AuthorizedRecipientRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newBaseFee",
        type: "uint256",
      },
    ],
    name: "BaseFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "deployed",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "salts",
        type: "bytes32[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFee",
        type: "uint256",
      },
    ],
    name: "BatchDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chunkCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "packedMetadata",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "BatchStaged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "chunk",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "ChunkStaged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "deployed",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "ContractDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "DefaultAdminTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeCollectionFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "FeeRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "FeesEnabledSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "IdempotentModeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "TierFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
    ],
    name: "UserTierSet",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_CHUNK_BYTES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OPERATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "addAuthorizedRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedRecipients",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseFeeWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "chunkOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "constructorArgs",
        type: "bytes",
      },
    ],
    name: "deployDeterministic",
    outputs: [
      {
        internalType: "address",
        name: "deployed",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "salts",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "bytecodes",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "constructorArgs",
        type: "bytes[]",
      },
    ],
    name: "deployDeterministicBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "deployed",
        type: "address[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deploymentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedDispatcherCodehash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedFactoryBytecodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedManifestDispatcher",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedManifestHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feesEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeploymentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeploymentFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpectedDispatcherCodehash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpectedFactoryBytecodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpectedManifestHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getManifestDispatcher",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserTier",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "idempotentMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "isDeployed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isDeployedContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSingleTransfer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "predict",
    outputs: [
      {
        internalType: "address",
        name: "predicted",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "predictAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "salts",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "codeHashes",
        type: "bytes32[]",
      },
    ],
    name: "predictAddressBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "predicted",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "chunk",
        type: "address",
      },
    ],
    name: "read",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "removeAuthorizedRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBase",
        type: "uint256",
      },
    ],
    name: "setBaseFeeWei",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setFeesEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setIdempotentMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMax",
        type: "uint256",
      },
    ],
    name: "setMaxSingleTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setTierFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
    ],
    name: "setUserTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "stage",
    outputs: [
      {
        internalType: "address",
        name: "chunk",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "blobs",
        type: "bytes[]",
      },
    ],
    name: "stageBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "chunks",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "hashes",
        type: "bytes32[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "dataArray",
        type: "bytes[]",
      },
    ],
    name: "stageMany",
    outputs: [
      {
        internalType: "address[]",
        name: "chunks",
        type: "address[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "tierFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "transferDefaultAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userTiers",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "validateBytecodeSize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "verifySystemIntegrity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101003461023757601f612bbc38819003918201601f19168301916001600160401b0383118484101761023b5780849260e094604052833981010312610237576100488161024f565b906100556020820161024f565b604082015160608301519060808401519260c060a0860151950151958615158097036102375760015f55670de0b6b3a76400006002556006805461ff0019166101001790556001600160a01b03168015610228576001600160a01b0382161561022857821561021957831561021957841561021957335f8181527f1a93b80846506ef135d1d062834caa1099b42cc3eab0b329c7dc3b52117b9361602090815260408083208054600160ff1991821681179092557fd95a6d0f7a013e48899c02d7fc55c5a86f246dbad6ee54949a532b2131d53f44845282852080548216831790557f3b195ab57f4d8f8b33e27e93a01bc9b61302d2a97808d59e3535cc6d05c6da4884528285208054821683179055600380546001600160a01b03199081169097179055928190529281902080548316909317909255600480549093169390931790915560809290925260a09290925260c09290925260e0929092526005929092556006805490911660ff939093169290921790915551612958908161026482396080518181816107820152612141015260a0518181816108950152612207015260c051818181610b9c01526121b3015260e051818181610c7a01526121750152f35b63d3c1346960e01b5f5260045ffd5b63d92e233d60e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036102375756fe60806040526004361015610011575f80fd5b5f3560e01c80630bfde0da1461033c57806310a9352814610337578063110f8874146103325780631a0275b71461032d5780631d5134651461032857806324063c82146102885780632a0276f81461032357806336b089d81461031e578063377e70fd1461031957806338a699a41461031457806339f907dd1461027457806340fca0081461030f5780634311dc751461029c578063469048401461030a57806346c549cc14610305578063476343ee146103005780634c36f10d146102ab5780634e0e2526146102fb5780635ea31b98146102f65780636290caec146102d357806363221490146102f157806378e651931461026557806379189d61146102ec5780637ed1cd47146102b05780637f4aedfe146102e75780638061c715146102e257806384ef8ffc146102dd5780638da5cb5b146102dd5780638e7163c2146102d857806390184b02146102d3578063939e255c146102ce578063a04725c6146102c9578063a087a87e146102c4578063a64139fa146102bf578063a64e4f8a146102ba578063a901dd92146102b5578063aec8dc84146102b0578063b3eedf12146102ab578063b632ab57146102a6578063b697ff8a146102a1578063bc2e51df1461029c578063c2c8e21a14610297578063c97237be14610292578063db2e21bc1461028d578063e4d2620e14610288578063e74b981b14610283578063ebc471c41461027e578063ee05163a14610279578063ee9d1ef514610274578063f5b541a61461026f578063f5d70dd41461026a578063f642221f146102655763fa8c96ef14610260575f80fd5b61174a565b610b85565b61172d565b6116f3565b61076d565b611653565b611621565b611588565b610675565b6114d6565b611455565b61119a565b61087e565b611172565b611156565b6109e1565b610c63565b6110aa565b611088565b611025565b610f7d565b610ea6565b610e82565b610b08565b610dc7565b610d9f565b610d40565b610cb1565b610bbf565b610b45565b610a3b565b6109fe565b610903565b6108e0565b6108b8565b6107cc565b610739565b610707565b6106ea565b6106b0565b610593565b610486565b610433565b6103ff565b610365565b6004359060ff8216820361035157565b5f80fd5b6024359060ff8216820361035157565b346103515760403660031901126103515761037e610341565b335f9081527f3b195ab57f4d8f8b33e27e93a01bc9b61302d2a97808d59e3535cc6d05c6da4860209081526040909120602435927f255168929ef495e26e40b56a53cdf3b4782edb23a91efb8349e3e02c5bda0c59929160ff91906103e79083905b54166117a0565b1692835f52600a82528060405f2055604051908152a2005b3461035157604036600319011261035157602061042160243560043530611d9d565b6040516001600160a01b039091168152f35b34610351575f3660031901126103515761044b611df0565b60405162461bcd60e51b81526020600482015260136024820152724e6f20726566756e6420617661696c61626c6560681b6044820152606490fd5b34610351575f36600319011261035157602060ff60065460081c166040519015158152f35b9181601f84011215610351578235916001600160401b038311610351576020808501948460051b01011161035157565b602060031982011261035157600435906001600160401b03821161035157610505916004016104ab565b9091565b90602080835192838152019201905f5b8181106105265750505090565b82516001600160a01b0316845260209384019390920191600101610519565b9061055890604083526040830190610509565b906020818303910152602080835192838152019201905f5b81811061057d5750505090565b8251845260209384019390920191600101610570565b61059c366104db565b906105a5611df0565b6105c060ff5f5160206128e35f395f51905f525416156117db565b6105c98261186b565b906105d383611854565b926105e1604051948561182e565b808452601f196105f082611854565b0136602086013761060081611e0e565b5f5b8181106106235750505060015f5561061f60405192839283610545565b0390f35b8061063a61063460019385876118b1565b90611f57565b61064483896118f7565b5261064f82876118f7565b90838060a01b0316905201610602565b600435906001600160a01b038216820361035157565b34610351576020366003190112610351576001600160a01b0361069661065f565b165f52600b602052602060ff60405f205416604051908152f35b34610351575f3660031901126103515760206040517ff33fe78eb7c840e8bf68670029904b6f0da8e79346941c278a4e7676d473df158152f35b34610351575f366003190112610351576020600254604051908152f35b34610351576020366003190112610351576004355f526007602052602060018060a01b0360405f205416604051908152f35b34610351576020366003190112610351576004355f526007602052602060018060a01b0360405f2054161515604051908152f35b34610351575f366003190112610351576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b60209060031901126103515760043580151581036103515790565b34610351577ffe7387ce7a577db9fff975d9cdddba35483399f4aebdad1429e9a8ae1bc4451260206107fd366107b1565b7f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9295f9081527fcab4d17318aeaabb38cce9d7872ecfed2752c05570a4e2c3cf99e5dc5552efef83526040808220338352602052902061085e9060ff906103e0565b151560065461ff008260081b169061ff00191617600655604051908152a1005b34610351575f3660031901126103515760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610351575f366003190112610351576004546040516001600160a01b039091168152602090f35b34610351575f3660031901126103515760206108fb336120e9565b604051908152f35b34610351575f3660031901126103515761091b611df0565b6004546001600160a01b03811633036109a8576109645f808080610954954796879161094883151561190b565b6001600160a01b031690565b5af161095e611968565b50611997565b6004546040519182526001600160a01b0316907fc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a90602090a26109a660015f55565b005b60405162461bcd60e51b8152602060048201526011602482015270139bdd08199959481c9958da5c1a595b9d607a1b6044820152606490fd5b34610351575f366003190112610351576020600854604051908152f35b34610351576020366003190112610351576001600160a01b03610a1f61065f565b165f526001602052602060ff60405f2054166040519015158152f35b3461035157602036600319011261035157610a5461065f565b335f9081525f5160206129035f395f51905f5260205260409020610a7a9060ff906103e0565b6001600160a01b03811615610af9576003546001600160a01b038281165f9081525f5160206129035f395f51905f526020526040808220805460ff1916600117905591909216825290206109a69190610ad790805460ff19169055565b60018060a01b03166bffffffffffffffffffffffff60a01b6003541617600355565b63d92e233d60e01b5f5260045ffd5b34610351576020366003190112610351576001600160a01b03610b2961065f565b165f526009602052602060ff60405f2054166040519015158152f35b3461035157602036600319011261035157335f9081525f5160206129035f395f51905f526020526040902060043590610b809060ff906103e0565b600255005b34610351575f3660031901126103515760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461035157602036600319011261035157610bd861065f565b335f9081525f5160206129035f395f51905f5260205260409020610c019060ff905b54166119d5565b6001600160a01b03168015610c2a575f52600160205260405f20600160ff198254161790555f80f35b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606490fd5b34610351575f3660031901126103515760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b906020610cae928181520190610509565b90565b610cba366104db565b90610cc3611df0565b610cde60ff5f5160206128e35f395f51905f525416156117db565b610ce78261186b565b91610cf181611e0e565b5f5b818110610d145760015f556040516020808252819061061f90820187610509565b80610d2561063460019385876118b1565b50610d3082876118f7565b90838060a01b0316905201610cf3565b3461035157602036600319011261035157610d5961065f565b335f9081525f5160206129035f395f51905f5260205260409020610d7f9060ff90610bfa565b6001600160a01b03165f908152600160205260409020805460ff19169055005b34610351575f366003190112610351576003546040516001600160a01b039091168152602090f35b34610351576040366003190112610351576004356001600160401b03811161035157610df79036906004016104ab565b906024356001600160401b03811161035157610e179036906004016104ab565b610e22818514611a0d565b610e2b8461186b565b935f5b818110610e43576040518061061f8882610c9d565b80610e68610e546001938589611a51565b35610e60838789611a51565b359030611d9d565b610e7282896118f7565b90838060a01b0316905201610e2e565b34610351575f366003190112610351576020610e9c61213f565b6040519015158152f35b3461035157604036600319011261035157610ebf61065f565b7f815e4d8cfbf89de2051d8965cbffb95b36c1e3eb77b2789fa4ca1c298c97d8656020610eea610355565b7ff33fe78eb7c840e8bf68670029904b6f0da8e79346941c278a4e7676d473df155f9081527fcab4d17318aeaabb38cce9d7872ecfed2752c05570a4e2c3cf99e5dc5552efef835260408082203383526020529020909390610f4e9060ff906103e0565b6001600160a01b03165f818152600b8352604090819020805460ff191660ff90961695861790555193845292a2005b346103515760203660031901126103515760206040610fa2610f9d61065f565b6122a1565b815192839181835280519182918282860152018484015e5f828201840152601f01601f19168101030190f35b9181601f84011215610351578235916001600160401b038311610351576020838186019501011161035157565b602060031982011261035157600435906001600160401b0382116103515761050591600401610fce565b346103515761106c61103636610ffb565b919061105e611046368584611a61565b602081519101209361105881846122fe565b92612350565b602081519101209030611d9d565b604080516001600160a01b039290921682526020820192909252f35b34610351575f36600319011261035157602060ff600654166040519015158152f35b34610351577fa61c2215b736b8ccd98e82c522342dfeb181222fcf44244e0e681496a830d04e60206110db366107b1565b7ff33fe78eb7c840e8bf68670029904b6f0da8e79346941c278a4e7676d473df155f9081527fcab4d17318aeaabb38cce9d7872ecfed2752c05570a4e2c3cf99e5dc5552efef83526040808220338352602052902061113c9060ff906103e0565b151560ff196006541660ff821617600655604051908152a1005b34610351575f366003190112610351576020604051615dc08152f35b3461035157602061c00061118f61118836610ffb565b3691611a61565b511115604051908152f35b6060366003190112610351576004356001600160401b038111610351576111c59036906004016104ab565b6024356001600160401b038111610351576111e49036906004016104ab565b92906044356001600160401b038111610351576112059036906004016104ab565b939091611210611df0565b61122b60ff5f5160206128e35f395f51905f525416156117db565b8582148061144c575b61123d90611a0d565b61124561213f565b5061124f8261186b565b946112628361125d336120e9565b611aab565b9361126f85341015611ac3565b5f5b8481106112f95761061f88887f20076281d01816c3e99faad6c3db1daed16a9861f1dedace7575e80bea36910b89898134116112d2575b6112ba60405192839233968885611baa565b0390a26112c660015f55565b60405191829182610c9d565b6112f45f8080806112e38734611b61565b335af16112ee611968565b50611b6e565b6112a8565b61132c61134061130a838c886118b1565b919061133261131a8689896118b1565b60405196879460208601978891611b02565b91611b02565b03601f19810184528361182e565b6113566113518361c0009051111590565b611b0f565b61136f82518220611368858a8d611a51565b3530611d9d565b803b15158061143d575b611415575061138983888b611a51565b359151905ff59081156114025760019160208260051b8b0101526113e96113dc6113c36113b6848d6118f7565b516001600160a01b031690565b6001600160a01b03165f90815260096020526040902090565b805460ff19166001179055565b6113fc6113f7600854611b53565b600855565b01611271565b3d8061140c575f80fd5b604051815f823efd5b83925061143891506114296001948c6118f7565b6001600160a01b039091169052565b6113fc565b5060065460081c60ff16611379565b50858514611234565b3461035157602036600319011261035157335f9081527f3b195ab57f4d8f8b33e27e93a01bc9b61302d2a97808d59e3535cc6d05c6da48602090815260409091207f7ebed77c7e1ffbe2a85cbeff53ae70227be1cb6e4131d9d4baf70c22b9edcc689190600435906114c99060ff906103e0565b80600555604051908152a1005b34610351575f36600319011261035157335f9081525f5160206129035f395f51905f526020526040902061150c9060ff90610bfa565b471561154c575f8080804761152e61094861094860035460018060a01b031690565b828215611543575bf11561153e57005b611bf0565b506108fc611536565b60405162461bcd60e51b81526020600482015260146024820152734e6f20457468657220746f20776974686472617760601b6044820152606490fd5b34610351576020366003190112610351576115a161065f565b335f9081527f3b195ab57f4d8f8b33e27e93a01bc9b61302d2a97808d59e3535cc6d05c6da48602052604090206115da9060ff906103e0565b6001600160a01b03168015610af957600480546001600160a01b031916821790557fbf9a9534339a9d6b81696e05dcfb614b7dc518a31d48be3cfb757988381fb3235f80a2005b346103515760203660031901126103515760ff61163c610341565b165f52600a602052602060405f2054604051908152f35b6060366003190112610351576004356024356001600160401b03811161035157611681903690600401610fce565b9190604435916001600160401b0383116103515761061f936116aa6116d5943690600401610fce565b9390926116b5611df0565b6116d060ff5f5160206128e35f395f51905f525416156117db565b611c47565b60015f556040516001600160a01b0390911681529081906020820190565b34610351575f3660031901126103515760206040517f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9298152f35b34610351575f366003190112610351576020600554604051908152f35b61177f61175636610ffb565b9061175f611df0565b61177a60ff5f5160206128e35f395f51905f525416156117db565b61268d565b60015f55604080516001600160a01b03939093168352602083019190915290f35b156117a757565b60405162461bcd60e51b815260206004820152600c60248201526b4d697373696e6720726f6c6560a01b6044820152606490fd5b156117e257565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b634e487b7160e01b5f52604160045260245ffd5b90601f801991011681019081106001600160401b0382111761184f57604052565b61181a565b6001600160401b03811161184f5760051b60200190565b9061187582611854565b611882604051918261182e565b8281528092611893601f1991611854565b0190602036910137565b634e487b7160e01b5f52603260045260245ffd5b91908110156118f25760051b81013590601e19813603018212156103515701908135916001600160401b038311610351576020018236038113610351579190565b61189d565b80518210156118f25760209160051b010190565b1561191257565b60405162461bcd60e51b81526020600482015260136024820152724e6f206665657320746f20776974686472617760681b6044820152606490fd5b6001600160401b03811161184f57601f01601f191660200190565b3d15611992573d906119798261194d565b91611987604051938461182e565b82523d5f602084013e565b606090565b1561199e57565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b156119dc57565b60405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606490fd5b15611a1457565b60405162461bcd60e51b8152602060048201526015602482015274082e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b6044820152606490fd5b91908110156118f25760051b0190565b929192611a6d8261194d565b91611a7b604051938461182e565b829481845281830111610351578281602093845f960137010152565b634e487b7160e01b5f52601160045260245ffd5b81810292918115918404141715611abe57565b611a97565b15611aca57565b60405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b6044820152606490fd5b908092918237015f815290565b15611b1657565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c69642062797465636f64652073697a6560581b6044820152606490fd5b5f198114611abe5760010190565b91908203918211611abe57565b15611b7557565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b94939290611bc090606087526060870190610509565b8581036020870152818152916001600160fb1b0382116103515760409260209260051b8092848301370101930152565b6040513d5f823e3d90fd5b15611c0257565b60405162461bcd60e51b815260206004820152601b60248201527f4465706c6f796d656e742061646472657373206d69736d6174636800000000006044820152606490fd5b9290611c78611c869261132c9796611c5d61213f565b50611c666124c5565b60405198899460208601978891611b02565b03601f19810186528561182e565b611c976113518561c0009051111590565b8351812093611ca7858430611d9d565b803b611d4757505182915ff592831561140257610948611cc8918330611d9d565b6001600160a01b0384169190611cdf908314611bfb565b6001600160a01b0384165f908152600960205260409020611cff906113dc565b611d0d6113f7600854611b53565b611d16336120e9565b6040519081523392907f6f12dc0e4d0e1b50f4589e6e1100d3978b6aa062a0a67bf8e2d97f64126b0c4590602090a4565b939450505050611d5d60065460ff9060081c1690565b15611d655790565b60405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e4819195c1b1bde595960821b6044820152606490fd5b909160405192602084019260ff60f81b84526bffffffffffffffffffffffff199060601b1660218501526035840152605583015260558252611de060758361182e565b905190206001600160a01b031690565b60025f5414611dff5760025f55565b633ee5aeb560e01b5f5260045ffd5b60ff6006541615611e9a57611e269061125d336120e9565b803410611e5557803411611e375750565b3403348111611abe575f808080611e5394335af16112ee611968565b565b60405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742066656520666f722062617463680000000000006044820152606490fd5b50565b15611ea457565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c696420646174612073697a6560781b6044820152606490fd5b15611ee457565b60405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206461746160a01b6044820152606490fd5b15611f1f57565b60405162461bcd60e51b815260206004820152601060248201526f082c8c8e4cae6e640dad2e6dac2e8c6d60831b6044820152606490fd5b9091611f82611f7d611f6a368686611a61565b611f78615dc0871115611e9d565b612808565b611edd565b611f8c83836122fe565b92611f98368285611a61565b6020815191012092611fb060065460ff9060081c1690565b806120c1575b6120965781611fc491612350565b848151611fd8602084019182208330611d9d565b9251905ff59485156103515784926001600160a01b03878116937ffe8c29f157dd5c1c0222d0d85766158c1b52fff7f8f2dca1d72f399fd762a356939161202191168514611f18565b61205688612037875f52600760205260405f2090565b80546001600160a01b0319166001600160a01b03909216919091179055565b6001600160a01b0388165f908152600960205260409020612076906113dc565b6120846113f7600854611b53565b604080519182526020820192909252a3565b50509091506120bd6120b0835f52600760205260405f2090565b546001600160a01b031690565b9190565b505f8481526007602052604090206001600160a01b03906120e1906120b0565b161515611fb6565b60ff600654161561212b576001600160a01b03165f908152600b602090815260408083205460ff168352600a90915290205480156121245790565b5060055490565b505f90565b90816020910312610351575190565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03811690816121b1575b50507f0000000000000000000000000000000000000000000000000000000000000000806121a0575b50600190565b303f036121ad575f61219a565b5f90565b7f00000000000000000000000000000000000000000000000000000000000000009081612279575b505060206004916040519283809263abb2efdf60e01b82525afa5f9181612248575b5061220557505f90565b7f0000000000000000000000000000000000000000000000000000000000000000801515918261223d575b50506121ad575f80612171565b141590505f80612230565b61226b91925060203d602011612272575b612263818361182e565b810190612130565b905f6121fb565b503d612259565b3f0361212b575f806121d9565b6040519061229560208361182e565b5f808352366020840137565b906001600160a01b038216156122f457813b9160058311156122e957600419830190838211611abe5760059060405194838652603a601f19910116850160405260208501903c565b509050610cae612286565b9050610cae612286565b612309913691611a61565b6020815191012060405160208101916531b43ab7359d60d11b835260268201526026815261233860468261182e565b51902090565b805191908290602001825e015f815290565b61235b913691611a61565b805160ff811161240457604051600360fd1b6020820181905260f89290921b6001600160f81b0319166021820152600160ff1b602282015260238101829052600760f81b602482015260258101829052603960f81b6027820152602881019190915260f360f81b602a8201526123fe91610cae916123de906123ec81602b810184565b03601f19810183528261182e565b915b604051948593602085019061233e565b9061233e565b61ffff811161248f57604051606160f81b6020820181905260f09290921b6001600160f01b0319166021820152600160ff1b60238201526024810191909152600960f01b6025820152600360fd1b60278201819052603960f81b6029830152602a82015260f360f81b602c8201526123fe91610cae916123de9061248981602d810184565b916123ee565b60405162461bcd60e51b815260206004820152600e60248201526d4461746120746f6f206c6172676560901b6044820152606490fd5b60ff6006541615611e53576124d9336120e9565b6124e581341015611ac3565b803411611e375750565b156124f657565b60405162461bcd60e51b815260206004820152603360248201527f44657465726d696e69737469634368756e6b466163746f72793a206368756e6b60448201527208195e18d959591cc81cda5e99481b1a5b5a5d606a1b6064820152608490fd5b1561255e57565b60405162461bcd60e51b815260206004820152602d60248201527f44657465726d696e69737469634368756e6b466163746f72793a20696e76616c60448201526c6964206368756e6b206461746160981b6064820152608490fd5b156125c057565b60405162461bcd60e51b815260206004820152603460248201527f44657465726d696e69737469634368756e6b466163746f72793a20696e76616c604482015273696420707265646963746564206164647265737360601b6064820152608490fd5b1561262957565b60405162461bcd60e51b815260206004820152603660248201527f44657465726d696e69737469634368756e6b466163746f72793a206465706c6f6044820152750f2dacadce840c2c8c8e4cae6e640dad2e6dac2e8c6d60531b6064820152608490fd5b91906126b36126ae6126a0368487611a61565b611f78615dc08511156124ef565b612557565b6126bd81846122fe565b906126c9368286611a61565b60208151910120936126e160065460ff9060081c1690565b806127e0575b6127c857816126f591612350565b8051602082019081208491906001600160a01b0390612715908430611d9d565b16926127228415156125b9565b51905ff59283156103515785926001600160a01b038516927ffe8c29f157dd5c1c0222d0d85766158c1b52fff7f8f2dca1d72f399fd762a3569290612768908514612622565b61277e86612037875f52600760205260405f2090565b6001600160a01b0386165f90815260096020526040902061279e906113dc565b6127ac6113f7600854611b53565b6127b461282a565b604080519182526020820192909252a39190565b5050506120bd6120b0835f52600760205260405f2090565b505f8581526007602052604090206001600160a01b0390612800906120b0565b1615156126e7565b51615dc0811161212b5760058101809111611abe5761c000106121ad57600190565b61283d61283960065460ff1690565b1590565b611e535761284a336120e9565b61285681341015611ac3565b80612877575b8034116128665750565b5f8080806112e3611e539534611b61565b5f8080808461289361094861094860045460018060a01b031690565b5af161289d611968565b5061285c576004546040518281526001600160a01b03909116907f35c17c91437811502092c1c70baab3fad38f635163bfb5229604f82796e20c4d90602090a261285c56fe9b02e42a9b92e93607133334d133e31dc3f904c7156cf846526371c09ab4c5b21a93b80846506ef135d1d062834caa1099b42cc3eab0b329c7dc3b52117b9361a26469706673582212207e3a8a135f3212000cfcca14bfd72e51b9d5edbdbe01641ea9353d854fea2a6564736f6c634300081e0033";

type DeterministicChunkFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeterministicChunkFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeterministicChunkFactory__factory extends ContractFactory {
  constructor(...args: DeterministicChunkFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeRecipient: AddressLike,
    _manifestDispatcher: AddressLike,
    _manifestHash: BytesLike,
    _dispatcherCodehash: BytesLike,
    _factoryBytecodeHash: BytesLike,
    _baseFeeWei: BigNumberish,
    _feesEnabled: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeRecipient,
      _manifestDispatcher,
      _manifestHash,
      _dispatcherCodehash,
      _factoryBytecodeHash,
      _baseFeeWei,
      _feesEnabled,
      overrides || {}
    );
  }
  override deploy(
    _feeRecipient: AddressLike,
    _manifestDispatcher: AddressLike,
    _manifestHash: BytesLike,
    _dispatcherCodehash: BytesLike,
    _factoryBytecodeHash: BytesLike,
    _baseFeeWei: BigNumberish,
    _feesEnabled: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeRecipient,
      _manifestDispatcher,
      _manifestHash,
      _dispatcherCodehash,
      _factoryBytecodeHash,
      _baseFeeWei,
      _feesEnabled,
      overrides || {}
    ) as Promise<
      DeterministicChunkFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DeterministicChunkFactory__factory {
    return super.connect(runner) as DeterministicChunkFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeterministicChunkFactoryInterface {
    return new Interface(_abi) as DeterministicChunkFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DeterministicChunkFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DeterministicChunkFactory;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DeterministicChunkFactory,
  DeterministicChunkFactoryInterface,
} from "../../../contracts/factory/DeterministicChunkFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_manifestDispatcher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_manifestHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_dispatcherCodehash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_factoryBytecodeHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_baseFeeWei",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_feesEnabled",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidConstructorArgs",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newBaseFee",
        type: "uint256",
      },
    ],
    name: "BaseFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "deployed",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "salts",
        type: "bytes32[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFee",
        type: "uint256",
      },
    ],
    name: "BatchDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chunkCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "packedMetadata",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "BatchStaged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "chunk",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "ChunkStaged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "deployed",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "ContractDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "DefaultAdminTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeCollectionFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "FeeRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "FeesEnabledSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "IdempotentModeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "TierFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
    ],
    name: "UserTierSet",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_CHUNK_BYTES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OPERATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseFeeWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "chunkOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "constructorArgs",
        type: "bytes",
      },
    ],
    name: "deployDeterministic",
    outputs: [
      {
        internalType: "address",
        name: "deployed",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "salts",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "bytecodes",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "constructorArgs",
        type: "bytes[]",
      },
    ],
    name: "deployDeterministicBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "deployed",
        type: "address[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deploymentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedDispatcherCodehash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedFactoryBytecodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedManifestDispatcher",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expectedManifestHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feesEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeploymentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeploymentFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpectedDispatcherCodehash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpectedFactoryBytecodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExpectedManifestHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getManifestDispatcher",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserTier",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "idempotentMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "isDeployed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isDeployedContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "predict",
    outputs: [
      {
        internalType: "address",
        name: "predicted",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "predictAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "salts",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "codeHashes",
        type: "bytes32[]",
      },
    ],
    name: "predictAddressBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "predicted",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "chunk",
        type: "address",
      },
    ],
    name: "read",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBase",
        type: "uint256",
      },
    ],
    name: "setBaseFeeWei",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setFeesEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setIdempotentMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setTierFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
    ],
    name: "setUserTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "stage",
    outputs: [
      {
        internalType: "address",
        name: "chunk",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "blobs",
        type: "bytes[]",
      },
    ],
    name: "stageBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "chunks",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "hashes",
        type: "bytes32[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "dataArray",
        type: "bytes[]",
      },
    ],
    name: "stageMany",
    outputs: [
      {
        internalType: "address[]",
        name: "chunks",
        type: "address[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "tierFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "transferDefaultAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userTiers",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "validateBytecodeSize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "verifySystemIntegrity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101003461021a57601f612b6438819003918201601f19168301916001600160401b0383118484101761021e5780849260e09460405283398101031261021a5761004881610232565b9061005560208201610232565b604082015160608301519060808401519260c060a08601519501519586151580970361021a5760015f556004805461ff0019166101001790556001600160a01b0316801561020b576001600160a01b0382161561020b5782156101fc5783156101fc5784156101fc57335f8181527f1a93b80846506ef135d1d062834caa1099b42cc3eab0b329c7dc3b52117b9361602090815260408083208054600160ff1991821681179092557fd95a6d0f7a013e48899c02d7fc55c5a86f246dbad6ee54949a532b2131d53f44845282852080548216831790557f3b195ab57f4d8f8b33e27e93a01bc9b61302d2a97808d59e3535cc6d05c6da4890935292819020805483168417905582546001600160a01b0319908116909417909255600280549093169390931790915560809290925260a09290925260c09290925260e0929092526003929092556004805490911660ff93909316929092179091555161291d9081610247823960805181818161071501526121bd015260a0518181816108280152612283015260c051818181610adc015261222f015260e051818181610b1601526121f10152f35b63d3c1346960e01b5f5260045ffd5b63d92e233d60e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b038216820361021a5756fe60806040526004361015610011575f80fd5b5f3560e01c80630bfde0da146102ec57806310a93528146102e7578063110f8874146102e25780631a0275b7146102dd5780631d513465146102d857806324063c82146102515780632a0276f8146102d3578063377e70fd146102ce57806338a699a4146102c957806339f907dd1461023d57806340fca008146102c45780634311dc751461026557806346904840146102bf57806346c549cc146102ba578063476343ee146102b55780634c36f10d146102745780635ea31b98146102b05780636290caec1461029c57806378e651931461022e5780637ed1cd47146102795780637f4aedfe146102ab57806384ef8ffc146102a65780638da5cb5b146102a65780638e7163c2146102a157806390184b021461029c578063939e255c14610297578063a04725c614610292578063a087a87e1461028d578063a64139fa14610288578063a64e4f8a14610283578063a901dd921461027e578063aec8dc8414610279578063b3eedf1214610274578063b632ab571461026f578063b697ff8a1461026a578063bc2e51df14610265578063c2c8e21a14610260578063c97237be1461025b578063db2e21bc14610256578063e4d2620e14610251578063e74b981b1461024c578063ebc471c414610247578063ee05163a14610242578063ee9d1ef51461023d578063f5b541a614610238578063f5d70dd414610233578063f642221f1461022e5763fa8c96ef14610229575f80fd5b61164f565b610ac5565b611632565b6115f8565b610700565b611558565b611526565b61148d565b610625565b611395565b611314565b610fd7565b610811565b610faf565b610f93565b610979565b610aff565b610ee7565b610ec5565b610e62565b610dba565b610ce3565b610cbf565b610a88565b610c04565b610bdc565b610b4d565b610996565b610896565b610873565b61084b565b61075f565b6106cc565b61069a565b610660565b610543565b610436565b6103e3565b6103af565b610315565b6004359060ff8216820361030157565b5f80fd5b6024359060ff8216820361030157565b346103015760403660031901126103015761032e6102f1565b335f9081527f3b195ab57f4d8f8b33e27e93a01bc9b61302d2a97808d59e3535cc6d05c6da4860209081526040909120602435927f255168929ef495e26e40b56a53cdf3b4782edb23a91efb8349e3e02c5bda0c59929160ff91906103979083905b54166116a5565b1692835f52600882528060405f2055604051908152a2005b346103015760403660031901126103015760206103d160243560043530611d67565b6040516001600160a01b039091168152f35b34610301575f366003190112610301576103fb611dba565b60405162461bcd60e51b81526020600482015260136024820152724e6f20726566756e6420617661696c61626c6560681b6044820152606490fd5b34610301575f36600319011261030157602060ff60045460081c166040519015158152f35b9181601f84011215610301578235916001600160401b038311610301576020808501948460051b01011161030157565b602060031982011261030157600435906001600160401b038211610301576104b59160040161045b565b9091565b90602080835192838152019201905f5b8181106104d65750505090565b82516001600160a01b03168452602093840193909201916001016104c9565b90610508906040835260408301906104b9565b906020818303910152602080835192838152019201905f5b81811061052d5750505090565b8251845260209384019390920191600101610520565b61054c3661048b565b90610555611dba565b61057060ff5f5160206128c85f395f51905f525416156116e0565b61057982611770565b9061058383611759565b926105916040519485611733565b808452601f196105a082611759565b013660208601376105b081611e24565b5f5b8181106105d35750505060015f556105cf604051928392836104f5565b0390f35b806105ea6105e460019385876117b6565b90611fb7565b6105f483896117fc565b526105ff82876117fc565b90838060a01b03169052016105b2565b600435906001600160a01b038216820361030157565b34610301576020366003190112610301576001600160a01b0361064661060f565b165f526009602052602060ff60405f205416604051908152f35b34610301575f3660031901126103015760206040517ff33fe78eb7c840e8bf68670029904b6f0da8e79346941c278a4e7676d473df158152f35b34610301576020366003190112610301576004355f526005602052602060018060a01b0360405f205416604051908152f35b34610301576020366003190112610301576004355f526005602052602060018060a01b0360405f2054161515604051908152f35b34610301575f366003190112610301576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b60209060031901126103015760043580151581036103015790565b34610301577ffe7387ce7a577db9fff975d9cdddba35483399f4aebdad1429e9a8ae1bc44512602061079036610744565b7f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9295f9081527fcab4d17318aeaabb38cce9d7872ecfed2752c05570a4e2c3cf99e5dc5552efef8352604080822033835260205290206107f19060ff90610390565b151560045461ff008260081b169061ff00191617600455604051908152a1005b34610301575f3660031901126103015760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610301575f366003190112610301576002546040516001600160a01b039091168152602090f35b34610301575f36600319011261030157602061088e33612165565b604051908152f35b34610301575f366003190112610301576108ae611dba565b6002546001600160a01b0381163303610940576108f75f8080806108e795479687916108db831515611810565b6001600160a01b031690565b5af16108f161186d565b5061189c565b6002546040519182526001600160a01b0316907fc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a9080602081015b0390a261093e60015f55565b005b60405162461bcd60e51b8152602060048201526011602482015270139bdd08199959481c9958da5c1a595b9d607a1b6044820152606490fd5b34610301575f366003190112610301576020600654604051908152f35b34610301576020366003190112610301576109af61060f565b335f9081527f1a93b80846506ef135d1d062834caa1099b42cc3eab0b329c7dc3b52117b9361602052604090206109e89060ff90610390565b6001600160a01b03811615610a7957600180546001600160a01b038381165f9081527f1a93b80846506ef135d1d062834caa1099b42cc3eab0b329c7dc3b52117b93616020526040808220805460ff1916909517909455911681522061093e9190610a5790805460ff19169055565b60018060a01b03166bffffffffffffffffffffffff60a01b6001541617600155565b63d92e233d60e01b5f5260045ffd5b34610301576020366003190112610301576001600160a01b03610aa961060f565b165f526007602052602060ff60405f2054166040519015158152f35b34610301575f3660031901126103015760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610301575f3660031901126103015760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b906020610b4a9281815201906104b9565b90565b610b563661048b565b90610b5f611dba565b610b7a60ff5f5160206128c85f395f51905f525416156116e0565b610b8382611770565b91610b8d81611e24565b5f5b818110610bb05760015f55604051602080825281906105cf908201876104b9565b80610bc16105e460019385876117b6565b50610bcc82876117fc565b90838060a01b0316905201610b8f565b34610301575f366003190112610301576001546040516001600160a01b039091168152602090f35b34610301576040366003190112610301576004356001600160401b03811161030157610c3490369060040161045b565b906024356001600160401b03811161030157610c5490369060040161045b565b610c5f8185146118da565b610c6884611770565b935f5b818110610c8057604051806105cf8882610b39565b80610ca5610c91600193858961191e565b35610c9d83878961191e565b359030611d67565b610caf82896117fc565b90838060a01b0316905201610c6b565b34610301575f366003190112610301576020610cd96121bb565b6040519015158152f35b3461030157604036600319011261030157610cfc61060f565b7f815e4d8cfbf89de2051d8965cbffb95b36c1e3eb77b2789fa4ca1c298c97d8656020610d27610305565b7ff33fe78eb7c840e8bf68670029904b6f0da8e79346941c278a4e7676d473df155f9081527fcab4d17318aeaabb38cce9d7872ecfed2752c05570a4e2c3cf99e5dc5552efef835260408082203383526020529020909390610d8b9060ff90610390565b6001600160a01b03165f81815260098352604090819020805460ff191660ff90961695861790555193845292a2005b346103015760203660031901126103015760206040610ddf610dda61060f565b61231d565b815192839181835280519182918282860152018484015e5f828201840152601f01601f19168101030190f35b9181601f84011215610301578235916001600160401b038311610301576020838186019501011161030157565b602060031982011261030157600435906001600160401b038211610301576104b591600401610e0b565b3461030157610ea9610e7336610e38565b9190610e9b610e8336858461192e565b6020815191012093610e95818461237a565b926123cc565b602081519101209030611d67565b604080516001600160a01b039290921682526020820192909252f35b34610301575f36600319011261030157602060ff600454166040519015158152f35b34610301577fa61c2215b736b8ccd98e82c522342dfeb181222fcf44244e0e681496a830d04e6020610f1836610744565b7ff33fe78eb7c840e8bf68670029904b6f0da8e79346941c278a4e7676d473df155f9081527fcab4d17318aeaabb38cce9d7872ecfed2752c05570a4e2c3cf99e5dc5552efef835260408082203383526020529020610f799060ff90610390565b151560ff196004541660ff821617600455604051908152a1005b34610301575f366003190112610301576020604051615dc08152f35b3461030157602061c000610fcc610fc536610e38565b369161192e565b511115604051908152f35b6060366003190112610301576004356001600160401b0381116103015761100290369060040161045b565b6024356001600160401b0381116103015761102190369060040161045b565b92906044356001600160401b0381116103015761104290369060040161045b565b93909161104d611dba565b61106860ff5f5160206128c85f395f51905f525416156116e0565b8582148061130b575b61107a906118da565b61108a6110856121bb565b611964565b61109382611770565b946110a6836110a133612165565b6119c4565b936110b3853410156119dc565b846112a0575b5f5b848110611143576105cf88887f20076281d01816c3e99faad6c3db1daed16a9861f1dedace7575e80bea36910b898981341161111c575b61110460405192839233968885611ac3565b0390a261111060015f55565b60405191829182610b39565b61113e5f80808061112d8734611a7a565b335af161113861186d565b50611a87565b6110f2565b61117661118a611154838c886117b6565b919061117c6111648689896117b6565b60405196879460208601978891611a1b565b91611a1b565b03601f198101845283611733565b6111a061119b8361c0009051111590565b611a28565b6111b9825182206111b2858a8d61191e565b3530611d67565b8a813b151580611291575b6112615750506111d583888b61191e565b359151905ff590811561124e5760019160208260051b8b01015261123561122861120f611202848d6117fc565b516001600160a01b031690565b6001600160a01b03165f90815260076020526040902090565b805460ff19166001179055565b611248611243600654611a6c565b600655565b016110bb565b3d80611258575f80fd5b604051815f823efd5b84935061128c92509061120f8161127d600197611228956117fc565b6001600160a01b039091169052565b611248565b5060045460081c60ff166111c4565b5f808080886112bc6108db6108db60025460018060a01b031690565b5af16112c661186d565b506110b9576002546040518681526001600160a01b03909116907f35c17c91437811502092c1c70baab3fad38f635163bfb5229604f82796e20c4d90602090a26110b9565b50858514611071565b3461030157602036600319011261030157335f9081527f3b195ab57f4d8f8b33e27e93a01bc9b61302d2a97808d59e3535cc6d05c6da48602090815260409091207f7ebed77c7e1ffbe2a85cbeff53ae70227be1cb6e4131d9d4baf70c22b9edcc689190600435906113889060ff90610390565b80600355604051908152a1005b34610301575f366003190112610301576113ad611dba565b335f9081527f1a93b80846506ef135d1d062834caa1099b42cc3eab0b329c7dc3b52117b9361602052604090205460ff161561145c576114036113fe60ff5f5160206128c85f395f51905f52541690565b611b09565b4761140f811515611b42565b6114285f80808085335af161142261186d565b50611b85565b60405190815233907f23d6711a1d031134a36921253c75aa59e967d38e369ac625992824315e204f20908060208101610932565b60405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606490fd5b34610301576020366003190112610301576114a661060f565b335f9081527f3b195ab57f4d8f8b33e27e93a01bc9b61302d2a97808d59e3535cc6d05c6da48602052604090206114df9060ff90610390565b6001600160a01b03168015610a7957600280546001600160a01b031916821790557fbf9a9534339a9d6b81696e05dcfb614b7dc518a31d48be3cfb757988381fb3235f80a2005b346103015760203660031901126103015760ff6115416102f1565b165f526008602052602060405f2054604051908152f35b6060366003190112610301576004356024356001600160401b03811161030157611586903690600401610e0b565b9190604435916001600160401b038311610301576105cf936115af6115da943690600401610e0b565b9390926115ba611dba565b6115d560ff5f5160206128c85f395f51905f525416156116e0565b611c0f565b60015f556040516001600160a01b0390911681529081906020820190565b34610301575f3660031901126103015760206040517f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9298152f35b34610301575f366003190112610301576020600354604051908152f35b61168461165b36610e38565b90611664611dba565b61167f60ff5f5160206128c85f395f51905f525416156116e0565b61270e565b60015f55604080516001600160a01b03939093168352602083019190915290f35b156116ac57565b60405162461bcd60e51b815260206004820152600c60248201526b4d697373696e6720726f6c6560a01b6044820152606490fd5b156116e757565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b634e487b7160e01b5f52604160045260245ffd5b90601f801991011681019081106001600160401b0382111761175457604052565b61171f565b6001600160401b0381116117545760051b60200190565b9061177a82611759565b6117876040519182611733565b8281528092611798601f1991611759565b0190602036910137565b634e487b7160e01b5f52603260045260245ffd5b91908110156117f75760051b81013590601e19813603018212156103015701908135916001600160401b038311610301576020018236038113610301579190565b6117a2565b80518210156117f75760209160051b010190565b1561181757565b60405162461bcd60e51b81526020600482015260136024820152724e6f206665657320746f20776974686472617760681b6044820152606490fd5b6001600160401b03811161175457601f01601f191660200190565b3d15611897573d9061187e82611852565b9161188c6040519384611733565b82523d5f602084013e565b606090565b156118a357565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b156118e157565b60405162461bcd60e51b8152602060048201526015602482015274082e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b6044820152606490fd5b91908110156117f75760051b0190565b92919261193a82611852565b916119486040519384611733565b829481845281830111610301578281602093845f960137010152565b1561196b57565b60405162461bcd60e51b815260206004820152601d60248201527f53797374656d20696e7465677269747920636865636b206661696c65640000006044820152606490fd5b634e487b7160e01b5f52601160045260245ffd5b818102929181159184041417156119d757565b6119b0565b156119e357565b60405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b6044820152606490fd5b908092918237015f815290565b15611a2f57565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c69642062797465636f64652073697a6560581b6044820152606490fd5b5f1981146119d75760010190565b919082039182116119d757565b15611a8e57565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b94939290611ad9906060875260608701906104b9565b8581036020870152818152916001600160fb1b0382116103015760409260209260051b8092848301370101930152565b15611b1057565b60405162461bcd60e51b815260206004820152600a602482015269139bdd081c185d5cd95960b21b6044820152606490fd5b15611b4957565b60405162461bcd60e51b81526020600482015260146024820152734e6f20457468657220746f20776974686472617760601b6044820152606490fd5b15611b8c57565b60405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b6044820152606490fd5b15611bca57565b60405162461bcd60e51b815260206004820152601b60248201527f4465706c6f796d656e742061646472657373206d69736d6174636800000000006044820152606490fd5b9290611c42611c50926111769796611c286110856121bb565b611c30612541565b60405198899460208601978891611a1b565b03601f198101865285611733565b611c6161119b8561c0009051111590565b8351812093611c71858430611d67565b803b611d1157505182915ff592831561124e576108db611c92918330611d67565b6001600160a01b0384169190611ca9908314611bc3565b6001600160a01b0384165f908152600760205260409020611cc990611228565b611cd7611243600654611a6c565b611ce033612165565b6040519081523392907f6f12dc0e4d0e1b50f4589e6e1100d3978b6aa062a0a67bf8e2d97f64126b0c4590602090a4565b939450505050611d2760045460ff9060081c1690565b15611d2f5790565b60405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e4819195c1b1bde595960821b6044820152606490fd5b909160405192602084019260ff60f81b84526bffffffffffffffffffffffff199060601b1660218501526035840152605583015260558252611daa607583611733565b905190206001600160a01b031690565b60025f5414611dc95760025f55565b633ee5aeb560e01b5f5260045ffd5b15611ddf57565b60405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742066656520666f722062617463680000000000006044820152606490fd5b611e37611e3360045460ff1690565b1590565b611ee257611e48906110a133612165565b611e5481341015611dd8565b80611e77575b803411611e645750565b5f80808061112d611e759534611a7a565b565b5f80808084611e936108db6108db60025460018060a01b031690565b5af1611e9d61186d565b50611e5a576002546040518281526001600160a01b03909116907f35c17c91437811502092c1c70baab3fad38f635163bfb5229604f82796e20c4d90602090a2611e5a565b5034611eea57565b611e755f80808034335af161113861186d565b15611f0457565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c696420646174612073697a6560781b6044820152606490fd5b15611f4457565b60405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206461746160a01b6044820152606490fd5b15611f7f57565b60405162461bcd60e51b815260206004820152601060248201526f082c8c8e4cae6e640dad2e6dac2e8c6d60831b6044820152606490fd5b9091611fc46110856121bb565b611fed611fe8611fd536868661192e565b611fe3615dc0871115611efd565b6128a5565b611f3d565b611ff7838361237a565b9261200336828561192e565b602081519101209261201b60045460ff9060081c1690565b8061213d575b612112578161202f916123cc565b61204061119b8261c0009051111590565b848151612054602084019182208330611d67565b9251905ff59485156103015784926001600160a01b03878116937ffe8c29f157dd5c1c0222d0d85766158c1b52fff7f8f2dca1d72f399fd762a356939161209d91168514611f78565b6120d2886120b3875f52600560205260405f2090565b80546001600160a01b0319166001600160a01b03909216919091179055565b6001600160a01b0388165f9081526007602052604090206120f290611228565b612100611243600654611a6c565b604080519182526020820192909252a3565b505090915061213961212c835f52600560205260405f2090565b546001600160a01b031690565b9190565b505f8481526005602052604090206001600160a01b039061215d9061212c565b161515612021565b60ff60045416156121a7576001600160a01b03165f9081526009602090815260408083205460ff168352600890915290205480156121a05790565b5060035490565b505f90565b90816020910312610301575190565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b038116908161222d575b50507f00000000000000000000000000000000000000000000000000000000000000008061221c575b50600190565b303f03612229575f612216565b5f90565b7f000000000000000000000000000000000000000000000000000000000000000090816122f5575b505060206004916040519283809263abb2efdf60e01b82525afa5f91816122c4575b5061228157505f90565b7f000000000000000000000000000000000000000000000000000000000000000080151591826122b9575b5050612229575f806121ed565b141590505f806122ac565b6122e791925060203d6020116122ee575b6122df8183611733565b8101906121ac565b905f612277565b503d6122d5565b3f036121a7575f80612255565b60405190612311602083611733565b5f808352366020840137565b906001600160a01b0382161561237057813b916005831115612365576004198301908382116119d75760059060405194838652603a601f19910116850160405260208501903c565b509050610b4a612302565b9050610b4a612302565b61238591369161192e565b6020815191012060405160208101916531b43ab7359d60d11b83526026820152602681526123b4604682611733565b51902090565b805191908290602001825e015f815290565b6123d791369161192e565b805160ff811161248057604051600360fd1b6020820181905260f89290921b6001600160f81b0319166021820152600160ff1b602282015260238101829052600760f81b602482015260258101829052603960f81b6027820152602881019190915260f360f81b602a82015261247a91610b4a9161245a9061246881602b810184565b03601f198101835282611733565b915b60405194859360208501906123ba565b906123ba565b61ffff811161250b57604051606160f81b6020820181905260f09290921b6001600160f01b0319166021820152600160ff1b60238201526024810191909152600960f01b6025820152600360fd1b60278201819052603960f81b6029830152602a82015260f360f81b602c82015261247a91610b4a9161245a9061250581602d810184565b9161246a565b60405162461bcd60e51b815260206004820152600e60248201526d4461746120746f6f206c6172676560901b6044820152606490fd5b612550611e3360045460ff1690565b6125695761255d33612165565b611e54813410156119dc565b34611eea57565b1561257757565b60405162461bcd60e51b815260206004820152603360248201527f44657465726d696e69737469634368756e6b466163746f72793a206368756e6b60448201527208195e18d959591cc81cda5e99481b1a5b5a5d606a1b6064820152608490fd5b156125df57565b60405162461bcd60e51b815260206004820152602d60248201527f44657465726d696e69737469634368756e6b466163746f72793a20696e76616c60448201526c6964206368756e6b206461746160981b6064820152608490fd5b1561264157565b60405162461bcd60e51b815260206004820152603460248201527f44657465726d696e69737469634368756e6b466163746f72793a20696e76616c604482015273696420707265646963746564206164647265737360601b6064820152608490fd5b156126aa57565b60405162461bcd60e51b815260206004820152603660248201527f44657465726d696e69737469634368756e6b466163746f72793a206465706c6f6044820152750f2dacadce840c2c8c8e4cae6e640dad2e6dac2e8c6d60531b6064820152608490fd5b919061271b6110856121bb565b61273f61273a61272c36848761192e565b611fe3615dc0851115612570565b6125d8565b612749818461237a565b9061275536828661192e565b602081519101209361276d60045460ff9060081c1690565b8061287d575b6128655781612781916123cc565b61279261119b8261c0009051111590565b8051602082019081208491906001600160a01b03906127b2908430611d67565b16926127bf84151561263a565b51905ff59283156103015785926001600160a01b038516927ffe8c29f157dd5c1c0222d0d85766158c1b52fff7f8f2dca1d72f399fd762a35692906128059085146126a3565b61281b866120b3875f52600560205260405f2090565b6001600160a01b0386165f90815260076020526040902061283b90611228565b612849611243600654611a6c565b612851612541565b604080519182526020820192909252a39190565b50505061213961212c835f52600560205260405f2090565b505f8581526005602052604090206001600160a01b039061289d9061212c565b161515612773565b51615dc081116121a757600581018091116119d75761c000106122295760019056fe9b02e42a9b92e93607133334d133e31dc3f904c7156cf846526371c09ab4c5b2a26469706673582212205cd258335a4144dbfbb53b48a4033052037d15e6d9eb3814c95639d74dd7194a64736f6c634300081e0033";

type DeterministicChunkFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeterministicChunkFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeterministicChunkFactory__factory extends ContractFactory {
  constructor(...args: DeterministicChunkFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeRecipient: AddressLike,
    _manifestDispatcher: AddressLike,
    _manifestHash: BytesLike,
    _dispatcherCodehash: BytesLike,
    _factoryBytecodeHash: BytesLike,
    _baseFeeWei: BigNumberish,
    _feesEnabled: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeRecipient,
      _manifestDispatcher,
      _manifestHash,
      _dispatcherCodehash,
      _factoryBytecodeHash,
      _baseFeeWei,
      _feesEnabled,
      overrides || {}
    );
  }
  override deploy(
    _feeRecipient: AddressLike,
    _manifestDispatcher: AddressLike,
    _manifestHash: BytesLike,
    _dispatcherCodehash: BytesLike,
    _factoryBytecodeHash: BytesLike,
    _baseFeeWei: BigNumberish,
    _feesEnabled: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeRecipient,
      _manifestDispatcher,
      _manifestHash,
      _dispatcherCodehash,
      _factoryBytecodeHash,
      _baseFeeWei,
      _feesEnabled,
      overrides || {}
    ) as Promise<
      DeterministicChunkFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DeterministicChunkFactory__factory {
    return super.connect(runner) as DeterministicChunkFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeterministicChunkFactoryInterface {
    return new Interface(_abi) as DeterministicChunkFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DeterministicChunkFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DeterministicChunkFactory;
  }
}

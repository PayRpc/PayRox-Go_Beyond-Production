‚ùå Selector collisions:

  0x20df4359
    - ManifestDispatcher: EMERGENCY_ROLE()
    - GovernanceOrchestrator: EMERGENCY_ROLE()

  0xadc6c3b2
    - ManifestDispatcher: activateCommittedRoot()
    - IManifestDispatcher: activateCommittedRoot()
    - IManifestDispatcher: activateCommittedRoot()
    - MockManifestDispatcher: activateCommittedRoot()
    - MockManifestDispatcher: activateCommittedRoot()

  0x3a8c0786
    - ManifestDispatcher: activationDelay()
    - IManifestDispatcher: activationDelay()
    - IManifestDispatcher: activationDelay()
    - MockManifestDispatcher: activationDelay()
    - MockManifestDispatcher: activationDelay()

  0x9f6b4a3b
    - ManifestDispatcher: activeEpoch()
    - IManifestDispatcher: activeEpoch()
    - IManifestDispatcher: activeEpoch()
    - MockManifestDispatcher: activeEpoch()
    - MockManifestDispatcher: activeEpoch()

  0xabb2efdf
    - ManifestDispatcher: activeRoot()
    - IManifestDispatcher: activeRoot()
    - IManifestDispatcher: activeRoot()
    - IManifestDispatcherView: activeRoot()
    - MockManifestDispatcher: activeRoot()
    - MockManifestDispatcher: activeRoot()

  0x575d7487
    - ManifestDispatcher: applyRoutes(bytes4[],address[],bytes32[],bytes32[][],bool[][])
    - IManifestDispatcher: applyRoutes(bytes4[],address[],bytes32[],bytes32[][],bool[][])
    - IManifestDispatcher: applyRoutes(bytes4[],address[],bytes32[],bytes32[][],bool[][])
    - MockManifestDispatcher: applyRoutes(bytes4[],address[],bytes32[],bytes32[][],bool[][])
    - MockManifestDispatcher: applyRoutes(bytes4[],address[],bytes32[],bytes32[][],bool[][])

  0x129fe8c1
    - ManifestDispatcher: checkStorageConflicts(address)
    - IDiamondLoupeEx: checkStorageConflicts(address)

  0x00ebb5f0
    - ManifestDispatcher: commitRoot(bytes32,uint64)
    - IManifestDispatcher: commitRoot(bytes32,uint64)
    - IManifestDispatcher: commitRoot(bytes32,uint64)
    - MockManifestDispatcher: commitRoot(bytes32,uint64)
    - MockManifestDispatcher: commitRoot(bytes32,uint64)

  0xcdffacc6
    - ManifestDispatcher: facetAddress(bytes4)
    - IDiamondLoupe: facetAddress(bytes4)
    - IDiamondLoupe: facetAddress(bytes4)
    - Diamond: facetAddress(bytes4)
    - DiamondWithEpoch: facetAddress(bytes4)

  0x44615bd5
    - ManifestDispatcher: facetAddressEx(bytes4,bytes32)
    - IDiamondLoupeEx: facetAddressEx(bytes4,bytes32)

  0x52ef6b2c
    - ManifestDispatcher: facetAddresses()
    - IDiamondLoupe: facetAddresses()
    - IDiamondLoupe: facetAddresses()
    - Diamond: facetAddresses()
    - DiamondWithEpoch: facetAddresses()

  0x4c556851
    - ManifestDispatcher: facetAddressesBatchEx(bytes4[])
    - IDiamondLoupeEx: facetAddressesBatchEx(bytes4[])

  0xcf25dff3
    - ManifestDispatcher: facetAddressesEx(bool)
    - IDiamondLoupeEx: facetAddressesEx(bool)

  0xadfca15e
    - ManifestDispatcher: facetFunctionSelectors(address)
    - IDiamondLoupe: facetFunctionSelectors(address)
    - IDiamondLoupe: facetFunctionSelectors(address)
    - Diamond: facetFunctionSelectors(address)
    - DiamondWithEpoch: facetFunctionSelectors(address)

  0x08e59920
    - ManifestDispatcher: facetFunctionSelectorsEx(address,uint8)
    - IDiamondLoupeEx: facetFunctionSelectorsEx(address,uint8)

  0xb74a7d3d
    - ManifestDispatcher: facetHash(address)
    - IDiamondLoupeEx: facetHash(address)

  0x1e580ed1
    - ManifestDispatcher: facetImplementation(address)
    - IDiamondLoupeEx: facetImplementation(address)

  0x1aca7810
    - ManifestDispatcher: facetMetadata(address)
    - IDiamondLoupeEx: facetMetadata(address)

  0x889c9376
    - ManifestDispatcher: facetProvenance(address)
    - IDiamondLoupeEx: facetProvenance(address)

  0x7a0ed627
    - ManifestDispatcher: facets()
    - IDiamondLoupe: facets()
    - IDiamondLoupe: facets()
    - Diamond: facets()
    - DiamondWithEpoch: facets()

  0x45be02b5
    - ManifestDispatcher: facetsEx(bool)
    - IDiamondLoupeEx: facetsEx(bool)

  0x62a5af3b
    - ManifestDispatcher: freeze()
    - IManifestDispatcher: freeze()
    - IManifestDispatcher: freeze()
    - PayRoxProxyRouter: freeze()
    - MockManifestDispatcher: freeze()
    - MockManifestDispatcher: freeze()

  0x054f7d9c
    - ManifestDispatcher: frozen()
    - IManifestDispatcher: frozen()
    - IManifestDispatcher: frozen()
    - IManifestDispatcherView: frozen()
    - PayRoxProxyRouter: frozen()
    - MockManifestDispatcher: frozen()
    - MockManifestDispatcher: frozen()

  0x062576b2
    - ManifestDispatcher: getManifestInfo()
    - IManifestDispatcher: getManifestInfo()
    - IManifestDispatcher: getManifestInfo()
    - MockManifestDispatcher: getManifestInfo()
    - MockManifestDispatcher: getManifestInfo()

  0x1a6e649e
    - ManifestDispatcher: getRoute(bytes4)
    - IManifestDispatcher: getRoute(bytes4)
    - PayRoxProxyRouter: getRoute(bytes4)

  0x32252057
    - ManifestDispatcher: getRouteCount()
    - IManifestDispatcher: getRouteCount()

  0xf552501a
    - ManifestDispatcher: pendingEpoch()
    - IManifestDispatcher: pendingEpoch()
    - IManifestDispatcher: pendingEpoch()
    - MockManifestDispatcher: pendingEpoch()
    - MockManifestDispatcher: pendingEpoch()

  0x750588cf
    - ManifestDispatcher: pendingRoot()
    - IManifestDispatcher: pendingRoot()
    - IManifestDispatcher: pendingRoot()
    - MockManifestDispatcher: pendingRoot()
    - MockManifestDispatcher: pendingRoot()

  0x7d979a4f
    - ManifestDispatcher: pendingSince()
    - IManifestDispatcher: pendingSince()
    - IManifestDispatcher: pendingSince()
    - MockManifestDispatcher: pendingSince()
    - MockManifestDispatcher: pendingSince()

  0xb782ba50
    - ManifestDispatcher: removeRoutes(bytes4[])
    - IManifestDispatcher: removeRoutes(bytes4[])
    - IManifestDispatcher: removeRoutes(bytes4[])
    - MockManifestDispatcher: removeRoutes(bytes4[])
    - MockManifestDispatcher: removeRoutes(bytes4[])

  0x51c7094f
    - ManifestDispatcher: routes(bytes4)
    - IManifestDispatcher: routes(bytes4)
    - IManifestDispatcher: routes(bytes4)
    - IManifestDispatcherView: routes(bytes4)
    - MockManifestDispatcher: routes(bytes4)
    - MockManifestDispatcher: routes(bytes4)

  0x02128389
    - ManifestDispatcher: selectorHash(address)
    - IDiamondLoupeEx: selectorHash(address)

  0x96b896eb
    - ManifestDispatcher: setActivationDelay(uint64)
    - IManifestDispatcher: setActivationDelay(uint64)
    - IManifestDispatcher: setActivationDelay(uint64)
    - MockManifestDispatcher: setActivationDelay(uint64)
    - MockManifestDispatcher: setActivationDelay(uint64)

  0x991c8165
    - ManifestDispatcher: verifyManifest(bytes32)
    - IManifestDispatcher: verifyManifest(bytes32)

  0x8456cb59
    - IManifestDispatcher: pause()
    - PauseFacet: pause()
    - MockManifestDispatcher: pause()
    - MockManifestDispatcher: pause()

  0x3f4ba83a
    - IManifestDispatcher: unpause()
    - PauseFacet: unpause()
    - MockManifestDispatcher: unpause()
    - MockManifestDispatcher: unpause()

  0x248a9ca3
    - AccessControlFacet: getRoleAdmin(bytes32)
    - MockManifestDispatcher: getRoleAdmin(bytes32)
    - MockManifestDispatcher: getRoleAdmin(bytes32)

  0x2f2ff15d
    - AccessControlFacet: grantRole(bytes32,address)
    - MockManifestDispatcher: grantRole(bytes32,address)
    - MockManifestDispatcher: grantRole(bytes32,address)

  0x91d14854
    - AccessControlFacet: hasRole(bytes32,address)
    - IAccessControl: hasRole(bytes32,address)
    - MockManifestDispatcher: hasRole(bytes32,address)
    - MockManifestDispatcher: hasRole(bytes32,address)

  0xd547741f
    - AccessControlFacet: revokeRole(bytes32,address)
    - MockManifestDispatcher: revokeRole(bytes32,address)
    - MockManifestDispatcher: revokeRole(bytes32,address)

  0x79189d61
    - ChunkFactoryFacet: addAuthorizedRecipient(address)
    - DeterministicChunkFactory: addAuthorizedRecipient(address)
    - IChunkFactory: addAuthorizedRecipient(address)

  0xee05163a
    - ChunkFactoryFacet: deployDeterministic(bytes32,bytes,bytes)
    - DeterministicChunkFactory: deployDeterministic(bytes32,bytes,bytes)
    - IChunkFactory: deployDeterministic(bytes32,bytes,bytes)

  0xc2c8e21a
    - ChunkFactoryFacet: deployDeterministicBatch(bytes32[],bytes[],bytes[])
    - DeterministicChunkFactory: deployDeterministicBatch(bytes32[],bytes[],bytes[])
    - IChunkFactory: deployDeterministicBatch(bytes32[],bytes[],bytes[])

  0x4c36f10d
    - ChunkFactoryFacet: deploymentCount()
    - DeterministicChunkFactory: deploymentCount()
    - IChunkFactory: deploymentCount()

  0x38a699a4
    - ChunkFactoryFacet: exists(bytes32)
    - DeterministicChunkFactory: exists(bytes32)
    - IChunkFactory: exists(bytes32)

  0x7ed1cd47
    - ChunkFactoryFacet: getExpectedFactoryBytecodeHash()
    - DeterministicChunkFactory: getExpectedFactoryBytecodeHash()

  0xbc2e51df
    - ChunkFactoryFacet: getExpectedManifestHash()
    - DeterministicChunkFactory: getExpectedManifestHash()

  0xee9d1ef5
    - ChunkFactoryFacet: getManifestDispatcher()
    - DeterministicChunkFactory: getManifestDispatcher()

  0x6290caec
    - ChunkFactoryFacet: isDeployedContract(address)
    - DeterministicChunkFactory: isDeployedContract(address)
    - IChunkFactory: isDeployedContract(address)

  0x8da5cb5b
    - ChunkFactoryFacet: owner()
    - DeterministicChunkFactory: owner()
    - IERC173: owner()
    - IChunkFactory: owner()
    - PayRoxProxyRouter: owner()
    - Diamond: owner()
    - EpochManager: owner()

  0xa64139fa
    - ChunkFactoryFacet: predict(bytes)
    - DeterministicChunkFactory: predict(bytes)
    - IChunkFactory: predict(bytes)

  0x10a93528
    - ChunkFactoryFacet: predictAddress(bytes32,bytes32)
    - DeterministicChunkFactory: predictAddress(bytes32,bytes32)
    - IChunkFactory: predictAddress(bytes32,bytes32)

  0x8e7163c2
    - ChunkFactoryFacet: predictAddressBatch(bytes32[],bytes32[])
    - DeterministicChunkFactory: predictAddressBatch(bytes32[],bytes32[])
    - IChunkFactory: predictAddressBatch(bytes32[],bytes32[])

  0xa087a87e
    - ChunkFactoryFacet: read(address)
    - DeterministicChunkFactory: read(address)
    - IChunkFactory: read(address)

  0x8061c715
    - ChunkFactoryFacet: removeAuthorizedRecipient(address)
    - DeterministicChunkFactory: removeAuthorizedRecipient(address)
    - IChunkFactory: removeAuthorizedRecipient(address)

  0xc97237be
    - ChunkFactoryFacet: setBaseFeeWei(uint256)
    - DeterministicChunkFactory: setBaseFeeWei(uint256)
    - IChunkFactory: setBaseFeeWei(uint256)

  0xe74b981b
    - ChunkFactoryFacet: setFeeRecipient(address)
    - DeterministicChunkFactory: setFeeRecipient(address)
    - IChunkFactory: setFeeRecipient(address)

  0xa901dd92
    - ChunkFactoryFacet: setFeesEnabled(bool)
    - DeterministicChunkFactory: setFeesEnabled(bool)
    - IChunkFactory: setFeesEnabled(bool)

  0x40fca008
    - ChunkFactoryFacet: setIdempotentMode(bool)
    - DeterministicChunkFactory: setIdempotentMode(bool)
    - IChunkFactory: setIdempotentMode(bool)

  0x63221490
    - ChunkFactoryFacet: setMaxSingleTransfer(uint256)
    - DeterministicChunkFactory: setMaxSingleTransfer(uint256)
    - IChunkFactory: setMaxSingleTransfer(uint256)

  0x0bfde0da
    - ChunkFactoryFacet: setTierFee(uint8,uint256)
    - DeterministicChunkFactory: setTierFee(uint8,uint256)
    - IChunkFactory: setTierFee(uint8,uint256)

  0xa04725c6
    - ChunkFactoryFacet: setUserTier(address,uint8)
    - DeterministicChunkFactory: setUserTier(address,uint8)
    - IChunkFactory: setUserTier(address,uint8)

  0xfa8c96ef
    - ChunkFactoryFacet: stage(bytes)
    - DeterministicChunkFactory: stage(bytes)
    - IChunkFactory: stage(bytes)

  0x1d513465
    - ChunkFactoryFacet: stageBatch(bytes[])
    - DeterministicChunkFactory: stageBatch(bytes[])
    - IChunkFactory: stageBatch(bytes[])

  0x7f4aedfe
    - ChunkFactoryFacet: stageMany(bytes[])
    - DeterministicChunkFactory: stageMany(bytes[])
    - IChunkFactory: stageMany(bytes[])

  0x5ea31b98
    - ChunkFactoryFacet: transferDefaultAdmin(address)
    - DeterministicChunkFactory: transferDefaultAdmin(address)
    - IChunkFactory: transferDefaultAdmin(address)

  0x24063c82
    - ChunkFactoryFacet: userTiers(address)
    - DeterministicChunkFactory: userTiers(address)
    - IChunkFactory: userTiers(address)

  0xb697ff8a
    - ChunkFactoryFacet: validateBytecodeSize(bytes)
    - DeterministicChunkFactory: validateBytecodeSize(bytes)
    - IChunkFactory: validateBytecodeSize(bytes)

  0x939e255c
    - ChunkFactoryFacet: verifySystemIntegrity()
    - DeterministicChunkFactory: verifySystemIntegrity()
    - IChunkFactory: verifySystemIntegrity()

  0x476343ee
    - ChunkFactoryFacet: withdrawFees()
    - DeterministicChunkFactory: withdrawFees()
    - IChunkFactory: withdrawFees()

  0x110f8874
    - ChunkFactoryFacet: withdrawRefund()
    - DeterministicChunkFactory: withdrawRefund()
    - IChunkFactory: withdrawRefund()

  0x01ffc9a7
    - ERC165Facet: supportsInterface(bytes4)
    - IERC165: supportsInterface(bytes4)
    - IERC165: supportsInterface(bytes4)

  0xf36c8f5c
    - IAntiBotFacet: GOVERNANCE_ROLE()
    - SecurityFacet: GOVERNANCE_ROLE()

  0x4d9b47e2
    - IAntiBotFacet: MONITOR_ROLE()
    - SecurityFacet: MONITOR_ROLE()

  0xd4d0d6e6
    - IAntiBotFacet: addTrusted(address)
    - SecurityFacet: addTrusted(address)

  0x0d2644d2
    - IAntiBotFacet: ensureBuybackAllowed()
    - SecurityFacet: ensureBuybackAllowed()

  0x96d64879
    - IAntiBotFacet: isTrusted(address)
    - SecurityFacet: isTrusted(address)

  0xd55e62a0
    - IAntiBotFacet: removeTrusted(address)
    - SecurityFacet: removeTrusted(address)

  0x88ded880
    - IAntiBotFacet: reportMarketMove(int256)
    - SecurityFacet: reportMarketMove(int256)

  0xde5f8d93
    - IAntiBotFacet: resetCircuitBreaker()
    - SecurityFacet: resetCircuitBreaker()

  0x527555da
    - IAntiBotFacet: setBuybackPaused(bool)
    - SecurityFacet: setBuybackPaused(bool)

  0x328d8f72
    - IAntiBotFacet: setEnabled(bool)
    - SecurityFacet: setEnabled(bool)

  0xe3064a77
    - IAntiBotFacet: setThresholds(uint256,uint256)
    - SecurityFacet: setThresholds(uint256,uint256)

  0x75b9f5b2
    - IAntiBotFacet: setThrottleBlocks(uint256)
    - SecurityFacet: setThrottleBlocks(uint256)

  0x8fa3a84c
    - IAntiBotFacet: validateTransaction(address)
    - SecurityFacet: validateTransaction(address)

  0x5c975abb
    - PauseFacet: paused()
    - IPausable: paused()
    - PayRoxProxyRouter: paused()
    - DiamondWithEpoch: paused()

  0xe623a87c
    - RefactorSafetyFacet: emergencyRefactorValidation()
    - RefactorSafeFacetBase: emergencyRefactorValidation()

  0xf2fde38b
    - IERC173: transferOwnership(address)
    - PayRoxProxyRouter: transferOwnership(address)

  0xcb7e9057
    - Orchestrator: dispatcher()
    - PayRoxProxyRouter: dispatcher()
    - DiamondWithEpoch: dispatcher()

  0x096f5be2
    - DiamondWithEpoch: MAX_EPOCH_JUMP()
    - EpochManager: MAX_EPOCH_JUMP()

  0x36568abe
    - MockManifestDispatcher: renounceRole(bytes32,address)
    - MockManifestDispatcher: renounceRole(bytes32,address)

  0xb416a8d4
    - MockManifestDispatcher: setActiveEpoch(uint64)
    - MockManifestDispatcher: setActiveEpoch(uint64)

  0xec876c39
    - MockManifestDispatcher: setActiveRoot(bytes32)
    - MockManifestDispatcher: setActiveRoot(bytes32)

  0x7e932d32
    - MockManifestDispatcher: setFrozen(bool)
    - MockManifestDispatcher: setFrozen(bool)


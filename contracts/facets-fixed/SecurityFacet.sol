// SPDX-License-Identifier: MIT
pragma solidity 0.8.30;

/**
 * @title SecurityFacet
 * @notice Autogenerated ABI-accurate stub facet (PayRox)
 * @dev Generated from ABI + selectors manifest; bodies intentionally revert.
 */
library SecurityFacetStorage {
    bytes32 internal constant SLOT = keccak256("payrox.facets.SecurityFacet.v1");
    struct Layout { uint256 __reserved; }
    function layout() internal pure returns (Layout storage l) { bytes32 p = SLOT; assembly { l.slot := p } }
}

contract SecurityFacet {
    function isSecurityInitialized() external view returns (bool ret0) {
        revert("TODO: migrate");
    }

    function initializeSecurityFacet(bool enabled, uint256 throttleBlocks, uint256 pauseBps, uint256 circuitBps, address[] calldata initialTrusted, address governance, address monitor) external {
        revert("TODO: migrate");
    }

    function getSecurityConfig() external view returns (bool antibotEnabled, bool buybackPaused, bool circuitBroken, uint256 throttleBlocks, uint256 pauseThresholdBps, uint256 circuitThresholdBps) {
        revert("TODO: migrate");
    }
}

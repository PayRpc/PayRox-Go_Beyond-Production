// SPDX-License-Identifier: MIT
pragma solidity 0.8.30;

/**
 * @title PayRoxAdminFacet
 * @notice Autogenerated ABI-accurate stub facet (PayRox)
 * @dev Generated from ABI + selectors manifest; bodies intentionally revert.
 */
library PayRoxAdminFacetStorage {
    bytes32 internal constant SLOT = keccak256("payrox.facets.PayRoxAdminFacet.v1");
    struct Layout { uint256 __reserved; }
    function layout() internal pure returns (Layout storage l) { bytes32 p = SLOT; assembly { l.slot := p } }
}

contract PayRoxAdminFacet {
    function getAdminConfig() external view returns (address owner, address treasury, uint16 feeBps, bool paused) {
        revert("TODO: migrate");
    }

    function setFee(uint16 feeBps) external {
        revert("TODO: migrate");
    }

    function initPayRox(address owner, address treasury, uint16 feeBps, bytes32 expectedStructHash) external {
        revert("TODO: migrate");
    }
}

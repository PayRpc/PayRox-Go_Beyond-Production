// SPDX-License-Identifier: MIT
pragma solidity 0.8.30;

/**
 * @title AccessControlFacet
 * @notice Autogenerated ABI-accurate stub facet (PayRox)
 * @dev Generated from ABI + selectors manifest; bodies intentionally revert.
 */
library AccessControlFacetStorage {
    bytes32 internal constant SLOT = keccak256("payrox.facets.AccessControlFacet.v1");
    struct Layout { uint256 __reserved; }
    function layout() internal pure returns (Layout storage l) { bytes32 p = SLOT; assembly { l.slot := p } }
}

contract AccessControlFacet {
    function getRoleAdmin(bytes32 role) external view returns (bytes32 ret0) {
        revert("TODO: migrate");
    }

    function grantRole(bytes32 role, address account) external {
        revert("TODO: migrate");
    }

    function hasRole(bytes32 role, address account) external view returns (bool ret0) {
        revert("TODO: migrate");
    }

    function revokeRole(bytes32 role, address account) external {
        revert("TODO: migrate");
    }
}
